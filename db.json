{"meta":{"version":1,"warehouse":"4.0.0"},"models":{"Asset":[{"_id":"source/CNAME","path":"CNAME","modified":1,"renderable":0},{"_id":"themes/hexo-theme-matery-master/source/favicon.png","path":"favicon.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery-master/source/css/bb.css","path":"css/bb.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery-master/source/css/gitment.css","path":"css/gitment.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery-master/source/css/matery.css","path":"css/matery.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery-master/source/css/my-gitalk.css","path":"css/my-gitalk.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery-master/source/css/my.css","path":"css/my.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery-master/source/js/matery.js","path":"js/matery.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery-master/source/js/search.js","path":"js/search.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery-master/source/medias/avatar.jpg","path":"medias/avatar.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery-master/source/medias/comment_bg.png","path":"medias/comment_bg.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery-master/source/medias/contact.png","path":"medias/contact.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery-master/source/medias/cover.jpg","path":"medias/cover.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery-master/source/medias/icp.png","path":"medias/icp.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery-master/source/medias/logo.png","path":"medias/logo.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery-master/source/libs/animate/animate.min.css","path":"libs/animate/animate.min.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery-master/source/libs/aos/aos.css","path":"libs/aos/aos.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery-master/source/libs/aplayer/APlayer.min.css","path":"libs/aplayer/APlayer.min.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery-master/source/libs/background/canvas-nest.js","path":"libs/background/canvas-nest.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery-master/source/libs/background/ribbon-dynamic.js","path":"libs/background/ribbon-dynamic.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery-master/source/libs/background/ribbon-refresh.min.js","path":"libs/background/ribbon-refresh.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery-master/source/libs/background/ribbon.min.js","path":"libs/background/ribbon.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery-master/source/libs/codeBlock/codeBlockFuction.js","path":"libs/codeBlock/codeBlockFuction.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery-master/source/libs/codeBlock/codeCopy.js","path":"libs/codeBlock/codeCopy.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery-master/source/libs/codeBlock/codeLang.js","path":"libs/codeBlock/codeLang.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery-master/source/libs/codeBlock/codeShrink.js","path":"libs/codeBlock/codeShrink.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery-master/source/libs/cryptojs/crypto-js.min.js","path":"libs/cryptojs/crypto-js.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery-master/source/libs/dplayer/DPlayer.min.js","path":"libs/dplayer/DPlayer.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery-master/source/libs/dplayer/DPlayer.min.css","path":"libs/dplayer/DPlayer.min.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery-master/source/libs/echarts/echarts.min.js","path":"libs/echarts/echarts.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery-master/source/libs/gitalk/gitalk.css","path":"libs/gitalk/gitalk.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery-master/source/libs/gitalk/gitalk.min.js","path":"libs/gitalk/gitalk.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery-master/source/libs/gitment/gitment-default.css","path":"libs/gitment/gitment-default.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery-master/source/libs/gitment/gitment.js","path":"libs/gitment/gitment.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery-master/source/libs/jqcloud/jqcloud-1.0.4.min.js","path":"libs/jqcloud/jqcloud-1.0.4.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery-master/source/libs/instantpage/instantpage.js","path":"libs/instantpage/instantpage.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery-master/source/libs/jqcloud/jqcloud.css","path":"libs/jqcloud/jqcloud.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery-master/source/libs/jquery/jquery.min.js","path":"libs/jquery/jquery.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery-master/source/libs/masonry/masonry.pkgd.min.js","path":"libs/masonry/masonry.pkgd.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery-master/source/libs/materialize/materialize.min.css","path":"libs/materialize/materialize.min.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery-master/source/libs/materialize/materialize.min.js","path":"libs/materialize/materialize.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery-master/source/libs/minivaline/MiniValine.js","path":"libs/minivaline/MiniValine.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery-master/source/libs/others/busuanzi.pure.mini.js","path":"libs/others/busuanzi.pure.mini.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery-master/source/libs/others/clicklove.js","path":"libs/others/clicklove.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery-master/source/libs/prism/prism.css","path":"libs/prism/prism.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery-master/source/libs/scrollprogress/scrollProgress.min.js","path":"libs/scrollprogress/scrollProgress.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery-master/source/libs/tocbot/tocbot.min.js","path":"libs/tocbot/tocbot.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery-master/source/libs/tocbot/tocbot.css","path":"libs/tocbot/tocbot.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery-master/source/libs/valine/av-min.js","path":"libs/valine/av-min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery-master/source/libs/valine/Valine.min.js","path":"libs/valine/Valine.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery-master/source/medias/banner/0.jpg","path":"medias/banner/0.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery-master/source/medias/featureimages/0.jpg","path":"medias/featureimages/0.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery-master/source/medias/featureimages/1.jpg","path":"medias/featureimages/1.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery-master/source/medias/featureimages/11.jpg","path":"medias/featureimages/11.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery-master/source/medias/featureimages/10.jpg","path":"medias/featureimages/10.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery-master/source/medias/featureimages/12.jpg","path":"medias/featureimages/12.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery-master/source/medias/featureimages/13.jpg","path":"medias/featureimages/13.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery-master/source/medias/featureimages/14.jpg","path":"medias/featureimages/14.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery-master/source/medias/featureimages/15.jpg","path":"medias/featureimages/15.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery-master/source/medias/featureimages/17.jpg","path":"medias/featureimages/17.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery-master/source/medias/featureimages/2.jpg","path":"medias/featureimages/2.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery-master/source/medias/featureimages/3.jpg","path":"medias/featureimages/3.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery-master/source/medias/featureimages/4.jpg","path":"medias/featureimages/4.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery-master/source/medias/featureimages/5.jpg","path":"medias/featureimages/5.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery-master/source/medias/featureimages/6.jpg","path":"medias/featureimages/6.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery-master/source/libs/aos/aos.js","path":"libs/aos/aos.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery-master/source/medias/featureimages/8.jpg","path":"medias/featureimages/8.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery-master/source/medias/featureimages/9.jpg","path":"medias/featureimages/9.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery-master/source/medias/reward/alipay.jpg","path":"medias/reward/alipay.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery-master/source/medias/reward/wechat.png","path":"medias/reward/wechat.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery-master/source/libs/aplayer/APlayer.min.js","path":"libs/aplayer/APlayer.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery-master/source/medias/featureimages/16.jpg","path":"medias/featureimages/16.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery-master/source/medias/featureimages/7.jpg","path":"medias/featureimages/7.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery-master/source/libs/awesome/css/all.css","path":"libs/awesome/css/all.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery-master/source/libs/awesome/webfonts/fa-brands-400.eot","path":"libs/awesome/webfonts/fa-brands-400.eot","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery-master/source/libs/awesome/webfonts/fa-brands-400.svg","path":"libs/awesome/webfonts/fa-brands-400.svg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery-master/source/libs/awesome/webfonts/fa-brands-400.ttf","path":"libs/awesome/webfonts/fa-brands-400.ttf","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery-master/source/libs/awesome/webfonts/fa-brands-400.woff","path":"libs/awesome/webfonts/fa-brands-400.woff","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery-master/source/libs/awesome/webfonts/fa-brands-400.woff2","path":"libs/awesome/webfonts/fa-brands-400.woff2","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery-master/source/libs/awesome/webfonts/fa-regular-400.eot","path":"libs/awesome/webfonts/fa-regular-400.eot","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery-master/source/libs/awesome/webfonts/fa-regular-400.svg","path":"libs/awesome/webfonts/fa-regular-400.svg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery-master/source/libs/awesome/webfonts/fa-regular-400.ttf","path":"libs/awesome/webfonts/fa-regular-400.ttf","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery-master/source/libs/awesome/webfonts/fa-regular-400.woff","path":"libs/awesome/webfonts/fa-regular-400.woff","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery-master/source/libs/awesome/webfonts/fa-regular-400.woff2","path":"libs/awesome/webfonts/fa-regular-400.woff2","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery-master/source/libs/awesome/webfonts/fa-solid-900.eot","path":"libs/awesome/webfonts/fa-solid-900.eot","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery-master/source/libs/awesome/webfonts/fa-solid-900.svg","path":"libs/awesome/webfonts/fa-solid-900.svg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery-master/source/libs/awesome/webfonts/fa-solid-900.ttf","path":"libs/awesome/webfonts/fa-solid-900.ttf","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery-master/source/libs/awesome/webfonts/fa-solid-900.woff","path":"libs/awesome/webfonts/fa-solid-900.woff","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery-master/source/libs/awesome/webfonts/fa-solid-900.woff2","path":"libs/awesome/webfonts/fa-solid-900.woff2","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery-master/source/libs/lightGallery/fonts/lg.eot","path":"libs/lightGallery/fonts/lg.eot","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery-master/source/libs/lightGallery/fonts/lg.svg","path":"libs/lightGallery/fonts/lg.svg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery-master/source/libs/lightGallery/fonts/lg.ttf","path":"libs/lightGallery/fonts/lg.ttf","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery-master/source/libs/lightGallery/fonts/lg.woff","path":"libs/lightGallery/fonts/lg.woff","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery-master/source/libs/lightGallery/img/loading.gif","path":"libs/lightGallery/img/loading.gif","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery-master/source/libs/lightGallery/img/video-play.png","path":"libs/lightGallery/img/video-play.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery-master/source/libs/lightGallery/img/vimeo-play.png","path":"libs/lightGallery/img/vimeo-play.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery-master/source/libs/lightGallery/img/youtube-play.png","path":"libs/lightGallery/img/youtube-play.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery-master/source/libs/lightGallery/css/lightgallery.min.css","path":"libs/lightGallery/css/lightgallery.min.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery-master/source/libs/lightGallery/js/lightgallery-all.min.js","path":"libs/lightGallery/js/lightgallery-all.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery-master/source/libs/share/css/share.min.css","path":"libs/share/css/share.min.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery-master/source/libs/share/fonts/iconfont.eot","path":"libs/share/fonts/iconfont.eot","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery-master/source/libs/share/fonts/iconfont.svg","path":"libs/share/fonts/iconfont.svg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery-master/source/libs/share/fonts/iconfont.ttf","path":"libs/share/fonts/iconfont.ttf","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery-master/source/libs/share/fonts/iconfont.woff","path":"libs/share/fonts/iconfont.woff","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery-master/source/libs/share/js/jquery.share.min.js","path":"libs/share/js/jquery.share.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery-master/source/libs/share/js/social-share.min.js","path":"libs/share/js/social-share.min.js","modified":1,"renderable":1}],"Cache":[{"_id":"source/404/index.md","hash":"c1f792197630b9f2e40db02f87b0a9a372affdc0","modified":1619747059158},{"_id":"source/_posts/Django框架重写Hexo博客.md","hash":"4a124b6aca061dc17884c7c1e253cfe8ac102b77","modified":1619898951165},{"_id":"source/_data/friends.json","hash":"61e3acee54a5019ea50de58fa3c21432ba8a08f3","modified":1619777193680},{"_id":"source/.DS_Store","hash":"80e2005c087daff9463972bc2bd4249bbdbc831d","modified":1619901448931},{"_id":"source/CNAME","hash":"3303f1a32af124fdd06c126e3964e458a2df1650","modified":1619760079630},{"_id":"source/_posts/深入认识-Scrapy中settings文件.md","hash":"ddb759d652decb4f51b203740ff0169288555e19","modified":1619772492044},{"_id":"source/_posts/Hexo-matery主题推荐.md","hash":"2fd703e6f109e51f33df1c79def42b22120d59fa","modified":1619777871050},{"_id":"source/about/index.md","hash":"2d4b71e2d6af7c33ceffe28b099392b1961fbf60","modified":1619774791788},{"_id":"source/categories/index.md","hash":"f4d7276fbb03fee2f3d5765cf6cbecbf2002755c","modified":1619749969806},{"_id":"source/friends/index.md","hash":"3e5457e078c6d774a9d26f1dd728ac687f69a976","modified":1619774874445},{"_id":"source/tag/index.md","hash":"605dd868ac671e46bc879cce68c92204c366246b","modified":1619794077053},{"_id":"themes/hexo-theme-matery-master/.gitignore","hash":"727607929a51db7ea10968f547c26041eee9cfff","modified":1606456707000},{"_id":"themes/hexo-theme-matery-master/.DS_Store","hash":"6630a0d43810efd3f137aa202c57cbbbc2b7c3c2","modified":1619753153549},{"_id":"themes/hexo-theme-matery-master/CHANGELOG.md","hash":"084ec8b110a20170d08a0aa5fd8accf601051835","modified":1606456707000},{"_id":"themes/hexo-theme-matery-master/_config.yml","hash":"004ac91fb7ceacd4218ae9c927c25654a84e60bd","modified":1619902318105},{"_id":"themes/hexo-theme-matery-master/LICENSE","hash":"7df059597099bb7dcf25d2a9aedfaf4465f72d8d","modified":1606456707000},{"_id":"themes/hexo-theme-matery-master/layout/404.ejs","hash":"9c8ca67377211e5d60fdde272a975faa9a91a22a","modified":1606456707000},{"_id":"themes/hexo-theme-matery-master/README.md","hash":"0366f3d50b18d095b0581e7b5974e3283d693884","modified":1606456707000},{"_id":"themes/hexo-theme-matery-master/README_CN.md","hash":"089de96e2165ea2a8a3adf38ebda85b65e7f716e","modified":1606456707000},{"_id":"themes/hexo-theme-matery-master/layout/about.ejs","hash":"41849f9300b8dc47048333fcf4a897dd8a2a13ca","modified":1606456707000},{"_id":"themes/hexo-theme-matery-master/layout/bb.ejs","hash":"21959d702f17a3d98b716daf44c8b5eecd59c7c5","modified":1606456707000},{"_id":"themes/hexo-theme-matery-master/layout/archive.ejs","hash":"cdac701de8370f9f3794a0eed4165983993a1ca7","modified":1606456707000},{"_id":"themes/hexo-theme-matery-master/layout/categories.ejs","hash":"8e54665cc25d7c333da7d9f312987190be6215da","modified":1606456707000},{"_id":"themes/hexo-theme-matery-master/layout/category.ejs","hash":"00019bca11fb46477f22017cb1f5ad8444da0580","modified":1606456707000},{"_id":"themes/hexo-theme-matery-master/layout/contact.ejs","hash":"19d62e521c4253496db559478db5164ddfd2480e","modified":1606456707000},{"_id":"themes/hexo-theme-matery-master/layout/friends.ejs","hash":"92892bab5578ccf758ce57e19fca08be80d0d5b9","modified":1606456707000},{"_id":"themes/hexo-theme-matery-master/layout/index.ejs","hash":"4dc6f08e7709cc04e886be72dbf0d06469f0effc","modified":1606456707000},{"_id":"themes/hexo-theme-matery-master/layout/layout.ejs","hash":"974b44eb3e343cd3ee57ebad34bbb0eff4184400","modified":1606456707000},{"_id":"themes/hexo-theme-matery-master/layout/post.ejs","hash":"90b5a4c1f70e4756db569c15a7c6cad0c77c4500","modified":1606456707000},{"_id":"themes/hexo-theme-matery-master/layout/tag.ejs","hash":"85a4b05bd8a6ad0f17ff2e97dae56949b379c204","modified":1606456707000},{"_id":"themes/hexo-theme-matery-master/languages/default.yml","hash":"54ccc01b097c5bf6820f0edfcece1a87b78ab32d","modified":1606456707000},{"_id":"themes/hexo-theme-matery-master/languages/zh-CN.yml","hash":"a957b05f70265a86a87d922e18488571809d2472","modified":1606456707000},{"_id":"themes/hexo-theme-matery-master/languages/zh-HK.yml","hash":"ae34ac0e175c3037675722e436637efbceea32f0","modified":1606456707000},{"_id":"themes/hexo-theme-matery-master/layout/tags.ejs","hash":"cf9517aa6a0111355121f44615d6923e312283c7","modified":1606456707000},{"_id":"themes/hexo-theme-matery-master/source/favicon.png","hash":"acc9df0fc97e772afc204d79f96d2877ae011b1e","modified":1619763923416},{"_id":"themes/hexo-theme-matery-master/layout/_partial/back-top.ejs","hash":"47ee36a042bb6d52bbe1d0f329637e8ffcf1d0aa","modified":1606456707000},{"_id":"themes/hexo-theme-matery-master/layout/_partial/background.ejs","hash":"aef6edeeb11209831a11d8c7f5d59992e2573335","modified":1606456707000},{"_id":"themes/hexo-theme-matery-master/source/.DS_Store","hash":"ee70891e63ff314af8d5f3c8af17a807422074a8","modified":1619753153546},{"_id":"themes/hexo-theme-matery-master/layout/_partial/baidu-analytics.ejs","hash":"3bbcdb474ca1dcad514bdc4b7763e17c55df04fd","modified":1606456707000},{"_id":"themes/hexo-theme-matery-master/layout/_partial/bg-cover-content.ejs","hash":"28617bf2a35a4269eba6df466acd174e416d2d1e","modified":1619762872720},{"_id":"themes/hexo-theme-matery-master/layout/_partial/changyan.ejs","hash":"cd919d31564e118c2ee8d5cbfb7d51ee6da15d82","modified":1606456707000},{"_id":"themes/hexo-theme-matery-master/layout/_partial/bg-cover.ejs","hash":"02191109712f61c0e487b8f0b8466597181a9004","modified":1606456707000},{"_id":"themes/hexo-theme-matery-master/layout/_partial/baidu-push.ejs","hash":"2cebcc5ea3614d7f76ec36670e68050cbe611202","modified":1606456707000},{"_id":"themes/hexo-theme-matery-master/layout/_partial/disqus.ejs","hash":"b2dc2c8b5ed56815e55cc2ea54a6dc4eeba2375d","modified":1606456707000},{"_id":"themes/hexo-theme-matery-master/layout/_partial/footer.ejs","hash":"3be24e4c370671eda53bdfd99fb748f4a22948ba","modified":1606456707000},{"_id":"themes/hexo-theme-matery-master/layout/_partial/gitalk.ejs","hash":"2aa8fbb04b046fa7679092a48372d7e036835dff","modified":1606456707000},{"_id":"themes/hexo-theme-matery-master/layout/_partial/github-link.ejs","hash":"3aeb581bd78ab8e15b858e4c44c03bcf92f20b9e","modified":1606456707000},{"_id":"themes/hexo-theme-matery-master/layout/_partial/gitment.ejs","hash":"90f6218512ef2eab63ada7ad2fc766ae635a2297","modified":1606456707000},{"_id":"themes/hexo-theme-matery-master/layout/_partial/google-analytics.ejs","hash":"5f4992205617da5f8cc5863c62b5ec46e414e2fb","modified":1606456707000},{"_id":"themes/hexo-theme-matery-master/layout/_partial/head.ejs","hash":"f8438ac80df005934a330b029de292d26f0b6ecb","modified":1606456707000},{"_id":"themes/hexo-theme-matery-master/layout/_partial/header.ejs","hash":"59e38c70f3d8e7165e686e5e84a627835f4321b0","modified":1606456707000},{"_id":"themes/hexo-theme-matery-master/layout/_partial/livere.ejs","hash":"9c3401b42ea7f26410a5593bae93ada7e57b43be","modified":1606456707000},{"_id":"themes/hexo-theme-matery-master/layout/_partial/mobile-nav.ejs","hash":"cb0cb452be1cd1857ba600f04025b506f3b6fc79","modified":1606456707000},{"_id":"themes/hexo-theme-matery-master/layout/_partial/minivaline.ejs","hash":"5f09386aece8f9cf31f6059bbde79cd6c5171493","modified":1606456707000},{"_id":"themes/hexo-theme-matery-master/layout/_partial/index-cover.ejs","hash":"76b4a37e0364380b143fdf94bf1a5e6941564414","modified":1606456707000},{"_id":"themes/hexo-theme-matery-master/layout/_partial/navigation.ejs","hash":"78b70ff24b3039c871331ebec114b936c1756cc8","modified":1606456707000},{"_id":"themes/hexo-theme-matery-master/layout/_partial/post-cover.ejs","hash":"d1c873c5de54498c722e155aadb8c0ec39485dfa","modified":1606456707000},{"_id":"themes/hexo-theme-matery-master/layout/_partial/paging.ejs","hash":"e2df12cf92a82b1a7a7add2eac1db1d954bc5511","modified":1606456707000},{"_id":"themes/hexo-theme-matery-master/layout/_partial/post-detail-toc.ejs","hash":"3ff94aff01936242a9f4e1f31adb9b43bfab8d53","modified":1606456707000},{"_id":"themes/hexo-theme-matery-master/layout/_partial/post-detail.ejs","hash":"880ebaf78a947631a38ad0b3d65201315845a264","modified":1606456707000},{"_id":"themes/hexo-theme-matery-master/layout/_partial/post-statis.ejs","hash":"04889f9031743c6b081d02fa4027b0dbfcc45ecf","modified":1606456707000},{"_id":"themes/hexo-theme-matery-master/layout/_partial/reprint-statement.ejs","hash":"0ce3f9361f558b99cc2f059c5e50b0e2a152ae38","modified":1606456707000},{"_id":"themes/hexo-theme-matery-master/layout/_partial/prev-next.ejs","hash":"c76b78782ea82340104fccc089417572e0adece4","modified":1606456707000},{"_id":"themes/hexo-theme-matery-master/layout/_partial/reward.ejs","hash":"ffc55bc7e73bc698bfc58d8e3780c336b83282cf","modified":1606456707000},{"_id":"themes/hexo-theme-matery-master/layout/_partial/search.ejs","hash":"150529c9fb9aa8ddb42ec3e02645d301faa2503b","modified":1606456707000},{"_id":"themes/hexo-theme-matery-master/layout/_partial/share.ejs","hash":"c941730a2471d6aab367cbb6e09ed08b56c83143","modified":1606456707000},{"_id":"themes/hexo-theme-matery-master/layout/_widget/artitalk.ejs","hash":"b14e486f12b9ac42a273b80e4d785fcb94cf04b2","modified":1606456707000},{"_id":"themes/hexo-theme-matery-master/layout/_partial/social-link.ejs","hash":"6f871bd3a70f720e4e451f1f4f625cbc6d8994a4","modified":1606456707000},{"_id":"themes/hexo-theme-matery-master/layout/_partial/valine.ejs","hash":"0e4c0a6154aa34007849928ca88f05b6185b256e","modified":1606456707000},{"_id":"themes/hexo-theme-matery-master/layout/_widget/category-cloud.ejs","hash":"1b3df1009234c0112424b497b18b4ad8240b3bc7","modified":1606456707000},{"_id":"themes/hexo-theme-matery-master/layout/_widget/category-radar.ejs","hash":"1d8747fda89a0b2ca3c7008867cbfeecad0578a6","modified":1606456707000},{"_id":"themes/hexo-theme-matery-master/layout/_widget/dream.ejs","hash":"9a472ad5591100cdb65d0df9d01034163bd6dd9d","modified":1606456707000},{"_id":"themes/hexo-theme-matery-master/layout/_widget/my-projects.ejs","hash":"ef60b64021fa349b0048425d858dfcf6c906fede","modified":1606456707000},{"_id":"themes/hexo-theme-matery-master/layout/_widget/music.ejs","hash":"e9e3e327d5de9d7aeadbde32e1d558652d9e9195","modified":1606456707000},{"_id":"themes/hexo-theme-matery-master/layout/_widget/my-gallery.ejs","hash":"65a2d2f9722f84c7fd98f6bdf79087a14848ebd8","modified":1606456707000},{"_id":"themes/hexo-theme-matery-master/layout/_widget/my-skills.ejs","hash":"89a0092df72d23093128f2fbbdc8ca7f83ebcfd9","modified":1606456707000},{"_id":"themes/hexo-theme-matery-master/layout/_widget/recommend.ejs","hash":"8551137e94ca4e2e3b8b63d5626255884cb60cb5","modified":1606456707000},{"_id":"themes/hexo-theme-matery-master/layout/_widget/tag-cloud.ejs","hash":"fc42b72cddc231f7485cdc1fd6852b66be6add26","modified":1606456707000},{"_id":"themes/hexo-theme-matery-master/layout/_widget/post-calendar.ejs","hash":"48821e644bc73553d7c5c56d2e8ee111a70cd776","modified":1606456707000},{"_id":"themes/hexo-theme-matery-master/layout/_widget/tag-wordcloud.ejs","hash":"487aacb2454d6bf0d21cdb07ddd1fd5ddbca9038","modified":1606456707000},{"_id":"themes/hexo-theme-matery-master/layout/_widget/post-charts.ejs","hash":"ab5f986f428215941aeaa0c88aefd440c47d3bcf","modified":1606456707000},{"_id":"themes/hexo-theme-matery-master/layout/_widget/video.ejs","hash":"a0e002377af2a7f7e4da6d9a644de97adb035925","modified":1606456707000},{"_id":"themes/hexo-theme-matery-master/source/css/bb.css","hash":"aa15633888c7cf9baea8bb48d796c68b57cf14bf","modified":1606456707000},{"_id":"themes/hexo-theme-matery-master/source/css/gitment.css","hash":"2bd15cc17dca35ac3ecc0acf167a23a1dd362acd","modified":1606456707000},{"_id":"themes/hexo-theme-matery-master/source/css/my.css","hash":"497e50351f7838f8546cac76850a42e7e380a110","modified":1606456707000},{"_id":"themes/hexo-theme-matery-master/source/css/matery.css","hash":"2f40d1824a7bc1e3c6fd5c68c9bfaa45bccc26a1","modified":1619763756067},{"_id":"themes/hexo-theme-matery-master/source/css/my-gitalk.css","hash":"af18dd29e58642c18bab9b89541767b494c468dd","modified":1606456707000},{"_id":"themes/hexo-theme-matery-master/source/js/matery.js","hash":"b86de5fe3e9766b7ff80df12ea41c3a9e30825f7","modified":1606456707000},{"_id":"themes/hexo-theme-matery-master/source/js/search.js","hash":"e1482406c58ea2a0eb178d7e4efb2c879cdddc80","modified":1606456707000},{"_id":"themes/hexo-theme-matery-master/source/medias/avatar.jpg","hash":"2a6287308628881ce27b9a7de53ba15c2be00d02","modified":1606456707000},{"_id":"themes/hexo-theme-matery-master/source/medias/.DS_Store","hash":"8c7583dbeedcf2b0dec63f5f7021067f7cd536f5","modified":1619771917310},{"_id":"themes/hexo-theme-matery-master/source/medias/comment_bg.png","hash":"dfc93d24081884fbc58cab0f8fd19e77d31d6123","modified":1606456707000},{"_id":"themes/hexo-theme-matery-master/source/medias/contact.png","hash":"443ea472dd49b74d9d70295837eb381c8c64f02c","modified":1606456707000},{"_id":"themes/hexo-theme-matery-master/source/medias/icp.png","hash":"27a96f31f7d0413c6ade6f40e06f021f501151c7","modified":1606456707000},{"_id":"themes/hexo-theme-matery-master/source/medias/logo.png","hash":"acc9df0fc97e772afc204d79f96d2877ae011b1e","modified":1619763957159},{"_id":"themes/hexo-theme-matery-master/source/libs/animate/animate.min.css","hash":"97afa151569f046b2e01f27c1871646e9cd87caf","modified":1606456707000},{"_id":"themes/hexo-theme-matery-master/source/libs/aos/aos.css","hash":"191a3705a8f63e589a50a0ff2f2c5559f1a1b6b2","modified":1606456707000},{"_id":"themes/hexo-theme-matery-master/source/libs/background/canvas-nest.js","hash":"65333d0dbb9c1173a1b13031b230161fc42c8b2f","modified":1606456707000},{"_id":"themes/hexo-theme-matery-master/source/libs/aplayer/APlayer.min.css","hash":"07372a2ba507388d0fed166d761b1c2c2a659dce","modified":1606456707000},{"_id":"themes/hexo-theme-matery-master/source/libs/background/ribbon.min.js","hash":"6a99d494c030388f96f6086a7aaa0f03f3fe532e","modified":1606456707000},{"_id":"themes/hexo-theme-matery-master/source/libs/background/ribbon-refresh.min.js","hash":"6d98692b2cad8c746a562db18b170b35c24402f4","modified":1606456707000},{"_id":"themes/hexo-theme-matery-master/source/libs/background/ribbon-dynamic.js","hash":"052b80c29e6bc585aa28d4504b743bdbac220a88","modified":1606456707000},{"_id":"themes/hexo-theme-matery-master/source/libs/codeBlock/codeBlockFuction.js","hash":"c7ab06d27a525b15b1eb69027135269e9b9132fb","modified":1606456707000},{"_id":"themes/hexo-theme-matery-master/source/libs/codeBlock/codeCopy.js","hash":"6d39a766af62e625f177c4d5cf3adc35eed71e61","modified":1606456707000},{"_id":"themes/hexo-theme-matery-master/source/libs/codeBlock/codeLang.js","hash":"bac88b4d4e3679732d29bd037c34f089cf27cf05","modified":1606456707000},{"_id":"themes/hexo-theme-matery-master/source/libs/codeBlock/codeShrink.js","hash":"201e8cd761b4be557247bdaf1ebc7c11c83194f6","modified":1606456707000},{"_id":"themes/hexo-theme-matery-master/source/libs/cryptojs/crypto-js.min.js","hash":"5989527a378b55011a59522f41eeb3981518325c","modified":1606456707000},{"_id":"themes/hexo-theme-matery-master/source/libs/dplayer/DPlayer.min.css","hash":"f7d19655f873b813ffba5d1a17145c91f82631b8","modified":1606456707000},{"_id":"themes/hexo-theme-matery-master/source/libs/gitalk/gitalk.css","hash":"940ded3ea12c2fe1ab0820d2831ec405f3f1fe9f","modified":1606456707000},{"_id":"themes/hexo-theme-matery-master/source/libs/gitment/gitment-default.css","hash":"2903c59ee06b965bef32e937bd69f5b0b2190717","modified":1606456707000},{"_id":"themes/hexo-theme-matery-master/source/libs/jqcloud/jqcloud-1.0.4.min.js","hash":"257eaae3020599e4939f50d5008a743827f25b8c","modified":1606456707000},{"_id":"themes/hexo-theme-matery-master/source/libs/instantpage/instantpage.js","hash":"83ce8919b1a69b2f1809ffaf99b52a8627e650e9","modified":1606456707000},{"_id":"themes/hexo-theme-matery-master/source/libs/jqcloud/jqcloud.css","hash":"20d9f11a19d95c70e27cb922e0d6dccbec4eae89","modified":1606456707000},{"_id":"themes/hexo-theme-matery-master/source/libs/masonry/masonry.pkgd.min.js","hash":"ff940b4ea68368ca0e4d5560cbb79fb147dfc3c5","modified":1606456707000},{"_id":"themes/hexo-theme-matery-master/source/libs/others/busuanzi.pure.mini.js","hash":"6e41f31100ae7eb3a6f23f2c168f6dd56e7f7a9a","modified":1606456707000},{"_id":"themes/hexo-theme-matery-master/source/libs/others/clicklove.js","hash":"6a39b8c683ba5dcd92f70c6ab45d1cfac3213e8e","modified":1606456707000},{"_id":"themes/hexo-theme-matery-master/source/libs/minivaline/MiniValine.js","hash":"fbb58c37e2c74f127ae0c566afa9b48889aab79f","modified":1606456707000},{"_id":"themes/hexo-theme-matery-master/source/libs/prism/prism.css","hash":"62e5474893dece076534352f564ceabd6e088a5a","modified":1606456707000},{"_id":"themes/hexo-theme-matery-master/source/libs/scrollprogress/scrollProgress.min.js","hash":"777ffe5d07e85a14fbe97d846f45ffc0087251cc","modified":1606456707000},{"_id":"themes/hexo-theme-matery-master/source/libs/tocbot/tocbot.css","hash":"9ab8ef576c9a57115194152e79cca79b0a41dd70","modified":1606456707000},{"_id":"themes/hexo-theme-matery-master/source/libs/tocbot/tocbot.min.js","hash":"5ec27317f0270b8cf6b884c6f12025700b9a565c","modified":1606456707000},{"_id":"themes/hexo-theme-matery-master/source/medias/banner/0.jpg","hash":"5abf96d568c40bd6eafd1ab4c77441677bd3bca7","modified":1619771927379},{"_id":"themes/hexo-theme-matery-master/source/medias/featureimages/.DS_Store","hash":"38d9770d8a47dad9987aff1687b9fd5dab1c09d1","modified":1619756058258},{"_id":"themes/hexo-theme-matery-master/source/medias/featureimages/0.jpg","hash":"50ad77d1f1a9c22c35b95fceaae8107bbc51af8f","modified":1618674514108},{"_id":"themes/hexo-theme-matery-master/source/medias/featureimages/10.jpg","hash":"98e7f6fd9c97d4de9044b6871ca08ebf14db11b9","modified":1606456707000},{"_id":"themes/hexo-theme-matery-master/source/medias/featureimages/13.jpg","hash":"35a320174f8e316e3eadaec658024276b651c6e9","modified":1606456707000},{"_id":"themes/hexo-theme-matery-master/source/medias/featureimages/4.jpg","hash":"4e27d2f24a7b4ea54955f5ceba018ea2ef4df702","modified":1618674485594},{"_id":"themes/hexo-theme-matery-master/source/medias/featureimages/5.jpg","hash":"df7a5ea027fd5aa31f740f35db87f26a94c57918","modified":1618674505515},{"_id":"themes/hexo-theme-matery-master/source/libs/aos/aos.js","hash":"02bfb40b0c4b6e9b0b4081218357145cbb327d74","modified":1606456707000},{"_id":"themes/hexo-theme-matery-master/source/medias/featureimages/15.jpg","hash":"da0fbee3b7bde1607eace377ddf834c0be99edfe","modified":1606456707000},{"_id":"themes/hexo-theme-matery-master/source/medias/reward/alipay.jpg","hash":"1abc719b95d1b26f1f898e6b0a9b7609146e332f","modified":1606456707000},{"_id":"themes/hexo-theme-matery-master/source/medias/featureimages/2.jpg","hash":"bf702a9133a27d1e543e2282b3f8405e480bc5da","modified":1618674422162},{"_id":"themes/hexo-theme-matery-master/source/medias/featureimages/16.jpg","hash":"97a829c4bc94f9d2929b20a1a9b798c57b9f7205","modified":1606456707000},{"_id":"themes/hexo-theme-matery-master/source/libs/aplayer/APlayer.min.js","hash":"22caa28ff6b41a16ff40f15d38f1739e22359478","modified":1606456707000},{"_id":"themes/hexo-theme-matery-master/source/medias/reward/wechat.png","hash":"fe93385aa92fe328e01c8221a80b039be9e4e140","modified":1606456707000},{"_id":"themes/hexo-theme-matery-master/source/libs/awesome/webfonts/fa-regular-400.eot","hash":"439c8afd3373acb4a73135a34e220464a89cd5e2","modified":1606456707000},{"_id":"themes/hexo-theme-matery-master/source/libs/awesome/webfonts/fa-regular-400.woff","hash":"59439d3ad31d856d78ec3e2bd9f1eafa2c7a581c","modified":1606456707000},{"_id":"themes/hexo-theme-matery-master/source/libs/awesome/webfonts/fa-regular-400.ttf","hash":"0f4bd02942a54a6b3200d9078adff88c2812e751","modified":1606456707000},{"_id":"themes/hexo-theme-matery-master/source/libs/awesome/webfonts/fa-regular-400.woff2","hash":"f6f653b4ea8fc487bdb590d39d5a726258a55f40","modified":1606456707000},{"_id":"themes/hexo-theme-matery-master/source/libs/lightGallery/fonts/lg.eot","hash":"54caf05a81e33d7bf04f2e420736ce6f1de5f936","modified":1606456707000},{"_id":"themes/hexo-theme-matery-master/source/libs/lightGallery/fonts/lg.ttf","hash":"f6421c0c397311ae09f9257aa58bcd5e9720f493","modified":1606456707000},{"_id":"themes/hexo-theme-matery-master/source/libs/lightGallery/fonts/lg.svg","hash":"9c6632aeec67d3e84a1434884aa801514ff8103b","modified":1606456707000},{"_id":"themes/hexo-theme-matery-master/source/libs/lightGallery/fonts/lg.woff","hash":"3048de344dd5cad4624e0127e58eaae4b576f574","modified":1606456707000},{"_id":"themes/hexo-theme-matery-master/source/libs/lightGallery/img/vimeo-play.png","hash":"9b72fc0f86a01467ed0b68c9cc4d604ec316d517","modified":1606456707000},{"_id":"themes/hexo-theme-matery-master/source/libs/lightGallery/img/video-play.png","hash":"2962e03ddbe04d7e201a5acccac531a2bbccddfc","modified":1606456707000},{"_id":"themes/hexo-theme-matery-master/source/libs/lightGallery/img/loading.gif","hash":"15a76af2739482d8de7354abc6d8dc4fca8d145e","modified":1606456707000},{"_id":"themes/hexo-theme-matery-master/source/libs/lightGallery/img/youtube-play.png","hash":"f8d11384d33b7a79ee2ba8d522844f14d5067a80","modified":1606456707000},{"_id":"themes/hexo-theme-matery-master/source/libs/lightGallery/css/lightgallery.min.css","hash":"1b7227237f9785c66062a4811508916518e4132c","modified":1606456707000},{"_id":"themes/hexo-theme-matery-master/source/libs/lightGallery/js/lightgallery-all.min.js","hash":"9f5ef4bc8a0a3c746ca4f3c3e6d64493b1a977d8","modified":1606456707000},{"_id":"themes/hexo-theme-matery-master/source/libs/share/css/share.min.css","hash":"8a778a86f3ce9a042df6be63a9f1039631e351a5","modified":1606456707000},{"_id":"themes/hexo-theme-matery-master/source/libs/share/fonts/iconfont.svg","hash":"1d56c9d5db0273f07c43cc1397e440f98ba7827a","modified":1606456707000},{"_id":"themes/hexo-theme-matery-master/source/libs/share/fonts/iconfont.woff","hash":"2e3fce1dcfbd6e2114e7bfbeaf72d3c62e15a1bd","modified":1606456707000},{"_id":"themes/hexo-theme-matery-master/source/libs/share/fonts/iconfont.eot","hash":"00ff749c8e202401190cc98d56087cdda716abe4","modified":1606456707000},{"_id":"themes/hexo-theme-matery-master/source/libs/share/fonts/iconfont.ttf","hash":"afd898f59d363887418669520b24d175f966a083","modified":1606456707000},{"_id":"themes/hexo-theme-matery-master/source/libs/share/js/jquery.share.min.js","hash":"41367dcb857e02e3c417ebe68a554ce1d4430806","modified":1606456707000},{"_id":"themes/hexo-theme-matery-master/source/libs/share/js/social-share.min.js","hash":"a3090a02786dcd4efc6355c1c1dc978add8d6827","modified":1606456707000},{"_id":"themes/hexo-theme-matery-master/source/libs/dplayer/DPlayer.min.js","hash":"c3bad7b265574fab0ae4d45867422ea1cb9d6599","modified":1606456707000},{"_id":"themes/hexo-theme-matery-master/source/libs/gitment/gitment.js","hash":"28c02c45ce568e084cd1041dc493f83f9c6c88c6","modified":1606456707000},{"_id":"themes/hexo-theme-matery-master/source/libs/jquery/jquery.min.js","hash":"2115753ca5fb7032aec498db7bb5dca624dbe6be","modified":1606456707000},{"_id":"themes/hexo-theme-matery-master/source/libs/valine/Valine.min.js","hash":"6cbdbf91e1f046dd41267a5ff0691a1fccba99df","modified":1606456707000},{"_id":"themes/hexo-theme-matery-master/source/medias/featureimages/11.jpg","hash":"f55972ce7175684f2b11c3c9fc2b5b14bccbfae8","modified":1606456707000},{"_id":"themes/hexo-theme-matery-master/source/medias/featureimages/12.jpg","hash":"8a4b2e7d92ae95c3b0c921db23c35aa9a41a7d58","modified":1606456707000},{"_id":"themes/hexo-theme-matery-master/source/medias/featureimages/14.jpg","hash":"38e11221406785bcd93aa9cd23e568e164630ef1","modified":1606456707000},{"_id":"themes/hexo-theme-matery-master/source/medias/featureimages/17.jpg","hash":"42d47903551ee81885c1386022982cae165841c5","modified":1606456707000},{"_id":"themes/hexo-theme-matery-master/source/medias/featureimages/9.jpg","hash":"b956a2291a04b2132366b53666cf34858b8bdb1f","modified":1606456707000},{"_id":"themes/hexo-theme-matery-master/source/medias/featureimages/3.jpg","hash":"8ca57ecbbc6ed8e7fc9f8c7a33b571a529b41003","modified":1618674497726},{"_id":"themes/hexo-theme-matery-master/source/medias/featureimages/7.jpg","hash":"64829272ec85bb819d55ff89e5b5fd6f64aa436b","modified":1606456707000},{"_id":"themes/hexo-theme-matery-master/source/libs/awesome/css/all.css","hash":"ecc41e32ad2696877a1656749841f3b5543bbe3d","modified":1606456707000},{"_id":"themes/hexo-theme-matery-master/source/libs/awesome/webfonts/fa-brands-400.eot","hash":"22f9e7d5226408eb2d0a11e118257a3ca22b8670","modified":1606456707000},{"_id":"themes/hexo-theme-matery-master/source/libs/awesome/webfonts/fa-brands-400.woff","hash":"18838f5260317da3c5ed29bf844ac8a4f7ad0529","modified":1606456707000},{"_id":"themes/hexo-theme-matery-master/source/libs/awesome/webfonts/fa-brands-400.woff2","hash":"a46bd47ff0a90b812aafafda587d095cdb844271","modified":1606456707000},{"_id":"themes/hexo-theme-matery-master/source/libs/awesome/webfonts/fa-brands-400.ttf","hash":"91cbeeaceb644a971241c08362898599d6d968ce","modified":1606456707000},{"_id":"themes/hexo-theme-matery-master/source/libs/awesome/webfonts/fa-solid-900.woff","hash":"92803b8753ceda573c6906774677c5a7081d2fbb","modified":1606456707000},{"_id":"themes/hexo-theme-matery-master/source/libs/awesome/webfonts/fa-solid-900.woff2","hash":"9c081b88b106c6c04ecb895ba7ba7d3dcb3b55ac","modified":1606456707000},{"_id":"themes/hexo-theme-matery-master/source/medias/cover.jpg","hash":"d4957ff7cc5e88555cd840f2956ab0561e6f1ccf","modified":1606456707000},{"_id":"themes/hexo-theme-matery-master/source/libs/gitalk/gitalk.min.js","hash":"8fefe38f28804f90116bdcb74a0875c9de9f3b7d","modified":1606456707000},{"_id":"themes/hexo-theme-matery-master/source/libs/materialize/materialize.min.css","hash":"3f6d62fa7cad1a3e795f2d091ef72c42233b4e33","modified":1619761829761},{"_id":"themes/hexo-theme-matery-master/source/libs/materialize/materialize.min.js","hash":"c8b4c65651921d888cf5f27430dfe2ad190d35bf","modified":1606456707000},{"_id":"themes/hexo-theme-matery-master/source/libs/valine/av-min.js","hash":"541efb9edc1ce425cbe3897cfc25803211fe6a05","modified":1606456707000},{"_id":"themes/hexo-theme-matery-master/source/libs/awesome/webfonts/fa-regular-400.svg","hash":"3d3a49445343d80f3b553e3e3425b9a7bd49acaf","modified":1606456707000},{"_id":"themes/hexo-theme-matery-master/source/libs/awesome/webfonts/fa-solid-900.ttf","hash":"9521ed12274c2cbc910cea77657116fcf6545da3","modified":1606456707000},{"_id":"themes/hexo-theme-matery-master/source/medias/featureimages/8.jpg","hash":"284ef1e136207ec7b0e1c0b909b091e506ee8b0d","modified":1618794970386},{"_id":"themes/hexo-theme-matery-master/source/libs/awesome/webfonts/fa-solid-900.eot","hash":"cab8e84ae5682d1d556e234df9c790985888def8","modified":1606456707000},{"_id":"themes/hexo-theme-matery-master/source/medias/featureimages/1.jpg","hash":"7de02626605ab9ece44c5428feccf7c70fa8b1aa","modified":1618674467499},{"_id":"themes/hexo-theme-matery-master/source/medias/featureimages/6.jpg","hash":"6c3e71176eae370598326173e3a83209b781307f","modified":1618674556198},{"_id":"themes/hexo-theme-matery-master/source/libs/awesome/webfonts/fa-brands-400.svg","hash":"5e2d2a159294576bea69cc3360efb5ffe110ab2d","modified":1606456707000},{"_id":"themes/hexo-theme-matery-master/source/libs/echarts/echarts.min.js","hash":"9496f386a0da4601cad22c479cc5543913a4d67f","modified":1606456707000},{"_id":"themes/hexo-theme-matery-master/source/libs/awesome/webfonts/fa-solid-900.svg","hash":"7da88b19e1486f8c968d3cf5ab3f194f01ea17fd","modified":1606456707000},{"_id":"public/search.xml","hash":"84982236d0cd3b88d17212215c00577ef5c58752","modified":1619902386713},{"_id":"public/404/index.html","hash":"2a60ed48ffcfcc6dc8f2b8d2678e3c66cc2ab792","modified":1619902386713},{"_id":"public/about/index.html","hash":"46c9469e59c02f56c9ea8dd6bce305bbb02a57eb","modified":1619902386713},{"_id":"public/categories/index.html","hash":"b510e2385c50c2b1659d62cdc371cf6664de6c5d","modified":1619902386713},{"_id":"public/friends/index.html","hash":"7e4ef7e070908cac2da000c1dda20a50f3865d88","modified":1619902386713},{"_id":"public/tag/index.html","hash":"de0d5b19dc542e674f639ace06c3a121905b1c60","modified":1619902386713},{"_id":"public/2021/05/02/django-kuang-jia-chong-xie-hexo-bo-ke/index.html","hash":"44badd6ddf82a1f101b37578ebd9bdc2fe871da9","modified":1619902386713},{"_id":"public/2021/04/30/hexo-matery-zhu-ti-tui-jian/index.html","hash":"b93e64c593eab27eb0a1bd1da1a2b7601896217d","modified":1619902386713},{"_id":"public/2021/04/30/shen-ru-ren-shi-scrapy-zhong-settings-wen-jian/index.html","hash":"899db666bf92c6abf569fba058e2292c17e497bc","modified":1619902386713},{"_id":"public/archives/index.html","hash":"10d2da37058e8a6eaace339503b7f37aac43aad6","modified":1619902386713},{"_id":"public/archives/2021/index.html","hash":"70340ba5a98c3fa915d060bbdad9e3b9957a6f4f","modified":1619902386713},{"_id":"public/archives/2021/04/index.html","hash":"8a16192d84918478580f48332cc0b4ecc0d949e9","modified":1619902386713},{"_id":"public/archives/2021/05/index.html","hash":"5ce3cb3eae11f03933a940829388eb84a77ca901","modified":1619902386713},{"_id":"public/categories/Python/index.html","hash":"950cc7fe5df7bb6229bd29cd608df17b99cc774b","modified":1619902386713},{"_id":"public/categories/HTML5/index.html","hash":"2cc28f15c053ba307c8a17ebca6504afabf20415","modified":1619902386713},{"_id":"public/index.html","hash":"2850e419e91403f15430954c4f45ee18361637b8","modified":1619902386713},{"_id":"public/tags/Python/index.html","hash":"06112db43c786718d468128fb9113ca15b98c1dc","modified":1619902386713},{"_id":"public/tags/Django/index.html","hash":"8ae942ef70a2436d97115772d5b38718a213f567","modified":1619902386713},{"_id":"public/tags/Scrapy/index.html","hash":"1bb5c56f1a5a99d27f157e5d8b23dc254389eddb","modified":1619902386713},{"_id":"public/tags/Html/index.html","hash":"7f86d6843eb5dcfbf844f0bbef133983223f3e10","modified":1619902386713},{"_id":"public/tags/Hexo/index.html","hash":"b81cc794c741614e9c64395c910a98adcdec00cd","modified":1619902386713},{"_id":"public/tags/Web/index.html","hash":"cc886441f52dad08c5ee6024ddb5e147fad047dc","modified":1619902386713},{"_id":"public/CNAME","hash":"3303f1a32af124fdd06c126e3964e458a2df1650","modified":1619902386713},{"_id":"public/favicon.png","hash":"acc9df0fc97e772afc204d79f96d2877ae011b1e","modified":1619902386713},{"_id":"public/medias/icp.png","hash":"27a96f31f7d0413c6ade6f40e06f021f501151c7","modified":1619902386713},{"_id":"public/medias/logo.png","hash":"acc9df0fc97e772afc204d79f96d2877ae011b1e","modified":1619902386713},{"_id":"public/medias/contact.png","hash":"443ea472dd49b74d9d70295837eb381c8c64f02c","modified":1619902386713},{"_id":"public/medias/comment_bg.png","hash":"dfc93d24081884fbc58cab0f8fd19e77d31d6123","modified":1619902386713},{"_id":"public/medias/avatar.jpg","hash":"2a6287308628881ce27b9a7de53ba15c2be00d02","modified":1619902386713},{"_id":"public/medias/featureimages/0.jpg","hash":"50ad77d1f1a9c22c35b95fceaae8107bbc51af8f","modified":1619902386713},{"_id":"public/medias/featureimages/10.jpg","hash":"98e7f6fd9c97d4de9044b6871ca08ebf14db11b9","modified":1619902386713},{"_id":"public/medias/featureimages/13.jpg","hash":"35a320174f8e316e3eadaec658024276b651c6e9","modified":1619902386713},{"_id":"public/medias/featureimages/2.jpg","hash":"bf702a9133a27d1e543e2282b3f8405e480bc5da","modified":1619902386713},{"_id":"public/medias/featureimages/15.jpg","hash":"da0fbee3b7bde1607eace377ddf834c0be99edfe","modified":1619902386713},{"_id":"public/medias/featureimages/4.jpg","hash":"4e27d2f24a7b4ea54955f5ceba018ea2ef4df702","modified":1619902386713},{"_id":"public/medias/reward/alipay.jpg","hash":"1abc719b95d1b26f1f898e6b0a9b7609146e332f","modified":1619902386713},{"_id":"public/medias/reward/wechat.png","hash":"fe93385aa92fe328e01c8221a80b039be9e4e140","modified":1619902386713},{"_id":"public/medias/featureimages/16.jpg","hash":"97a829c4bc94f9d2929b20a1a9b798c57b9f7205","modified":1619902386713},{"_id":"public/libs/awesome/webfonts/fa-regular-400.eot","hash":"439c8afd3373acb4a73135a34e220464a89cd5e2","modified":1619902386713},{"_id":"public/libs/awesome/webfonts/fa-regular-400.ttf","hash":"0f4bd02942a54a6b3200d9078adff88c2812e751","modified":1619902386713},{"_id":"public/libs/awesome/webfonts/fa-regular-400.woff","hash":"59439d3ad31d856d78ec3e2bd9f1eafa2c7a581c","modified":1619902386713},{"_id":"public/libs/awesome/webfonts/fa-regular-400.woff2","hash":"f6f653b4ea8fc487bdb590d39d5a726258a55f40","modified":1619902386713},{"_id":"public/libs/lightGallery/fonts/lg.eot","hash":"54caf05a81e33d7bf04f2e420736ce6f1de5f936","modified":1619902386713},{"_id":"public/libs/lightGallery/fonts/lg.svg","hash":"9c6632aeec67d3e84a1434884aa801514ff8103b","modified":1619902386713},{"_id":"public/libs/lightGallery/fonts/lg.ttf","hash":"f6421c0c397311ae09f9257aa58bcd5e9720f493","modified":1619902386713},{"_id":"public/libs/lightGallery/fonts/lg.woff","hash":"3048de344dd5cad4624e0127e58eaae4b576f574","modified":1619902386713},{"_id":"public/libs/lightGallery/img/loading.gif","hash":"15a76af2739482d8de7354abc6d8dc4fca8d145e","modified":1619902386713},{"_id":"public/libs/lightGallery/img/video-play.png","hash":"2962e03ddbe04d7e201a5acccac531a2bbccddfc","modified":1619902386713},{"_id":"public/libs/lightGallery/img/vimeo-play.png","hash":"9b72fc0f86a01467ed0b68c9cc4d604ec316d517","modified":1619902386713},{"_id":"public/libs/lightGallery/img/youtube-play.png","hash":"f8d11384d33b7a79ee2ba8d522844f14d5067a80","modified":1619902386713},{"_id":"public/libs/share/fonts/iconfont.eot","hash":"00ff749c8e202401190cc98d56087cdda716abe4","modified":1619902386713},{"_id":"public/libs/share/fonts/iconfont.svg","hash":"1d56c9d5db0273f07c43cc1397e440f98ba7827a","modified":1619902386713},{"_id":"public/libs/share/fonts/iconfont.ttf","hash":"afd898f59d363887418669520b24d175f966a083","modified":1619902386713},{"_id":"public/libs/share/fonts/iconfont.woff","hash":"2e3fce1dcfbd6e2114e7bfbeaf72d3c62e15a1bd","modified":1619902386713},{"_id":"public/medias/banner/0.jpg","hash":"5abf96d568c40bd6eafd1ab4c77441677bd3bca7","modified":1619902386713},{"_id":"public/medias/featureimages/12.jpg","hash":"8a4b2e7d92ae95c3b0c921db23c35aa9a41a7d58","modified":1619902386713},{"_id":"public/medias/featureimages/14.jpg","hash":"38e11221406785bcd93aa9cd23e568e164630ef1","modified":1619902386713},{"_id":"public/medias/featureimages/17.jpg","hash":"42d47903551ee81885c1386022982cae165841c5","modified":1619902386713},{"_id":"public/medias/featureimages/3.jpg","hash":"8ca57ecbbc6ed8e7fc9f8c7a33b571a529b41003","modified":1619902386713},{"_id":"public/medias/featureimages/5.jpg","hash":"df7a5ea027fd5aa31f740f35db87f26a94c57918","modified":1619902386713},{"_id":"public/medias/featureimages/9.jpg","hash":"b956a2291a04b2132366b53666cf34858b8bdb1f","modified":1619902386713},{"_id":"public/medias/featureimages/7.jpg","hash":"64829272ec85bb819d55ff89e5b5fd6f64aa436b","modified":1619902386713},{"_id":"public/libs/awesome/webfonts/fa-brands-400.woff","hash":"18838f5260317da3c5ed29bf844ac8a4f7ad0529","modified":1619902386713},{"_id":"public/libs/awesome/webfonts/fa-brands-400.woff2","hash":"a46bd47ff0a90b812aafafda587d095cdb844271","modified":1619902386713},{"_id":"public/medias/featureimages/11.jpg","hash":"f55972ce7175684f2b11c3c9fc2b5b14bccbfae8","modified":1619902386713},{"_id":"public/libs/awesome/webfonts/fa-solid-900.woff2","hash":"9c081b88b106c6c04ecb895ba7ba7d3dcb3b55ac","modified":1619902386713},{"_id":"public/libs/awesome/webfonts/fa-solid-900.woff","hash":"92803b8753ceda573c6906774677c5a7081d2fbb","modified":1619902386713},{"_id":"public/medias/cover.jpg","hash":"d4957ff7cc5e88555cd840f2956ab0561e6f1ccf","modified":1619902386713},{"_id":"public/libs/awesome/webfonts/fa-brands-400.ttf","hash":"91cbeeaceb644a971241c08362898599d6d968ce","modified":1619902386713},{"_id":"public/libs/awesome/webfonts/fa-regular-400.svg","hash":"3d3a49445343d80f3b553e3e3425b9a7bd49acaf","modified":1619902386713},{"_id":"public/css/bb.css","hash":"aa15633888c7cf9baea8bb48d796c68b57cf14bf","modified":1619902386713},{"_id":"public/css/gitment.css","hash":"2bd15cc17dca35ac3ecc0acf167a23a1dd362acd","modified":1619902386713},{"_id":"public/css/my.css","hash":"497e50351f7838f8546cac76850a42e7e380a110","modified":1619902386713},{"_id":"public/js/matery.js","hash":"b86de5fe3e9766b7ff80df12ea41c3a9e30825f7","modified":1619902386713},{"_id":"public/js/search.js","hash":"e1482406c58ea2a0eb178d7e4efb2c879cdddc80","modified":1619902386713},{"_id":"public/css/my-gitalk.css","hash":"af18dd29e58642c18bab9b89541767b494c468dd","modified":1619902386713},{"_id":"public/libs/aplayer/APlayer.min.css","hash":"07372a2ba507388d0fed166d761b1c2c2a659dce","modified":1619902386713},{"_id":"public/libs/background/canvas-nest.js","hash":"65333d0dbb9c1173a1b13031b230161fc42c8b2f","modified":1619902386713},{"_id":"public/libs/background/ribbon-refresh.min.js","hash":"6d98692b2cad8c746a562db18b170b35c24402f4","modified":1619902386713},{"_id":"public/libs/background/ribbon.min.js","hash":"6a99d494c030388f96f6086a7aaa0f03f3fe532e","modified":1619902386713},{"_id":"public/libs/background/ribbon-dynamic.js","hash":"052b80c29e6bc585aa28d4504b743bdbac220a88","modified":1619902386713},{"_id":"public/libs/codeBlock/codeBlockFuction.js","hash":"c7ab06d27a525b15b1eb69027135269e9b9132fb","modified":1619902386713},{"_id":"public/libs/codeBlock/codeCopy.js","hash":"6d39a766af62e625f177c4d5cf3adc35eed71e61","modified":1619902386713},{"_id":"public/libs/codeBlock/codeShrink.js","hash":"201e8cd761b4be557247bdaf1ebc7c11c83194f6","modified":1619902386713},{"_id":"public/libs/codeBlock/codeLang.js","hash":"bac88b4d4e3679732d29bd037c34f089cf27cf05","modified":1619902386713},{"_id":"public/libs/jqcloud/jqcloud-1.0.4.min.js","hash":"257eaae3020599e4939f50d5008a743827f25b8c","modified":1619902386713},{"_id":"public/libs/jqcloud/jqcloud.css","hash":"20d9f11a19d95c70e27cb922e0d6dccbec4eae89","modified":1619902386713},{"_id":"public/libs/instantpage/instantpage.js","hash":"83ce8919b1a69b2f1809ffaf99b52a8627e650e9","modified":1619902386713},{"_id":"public/libs/others/busuanzi.pure.mini.js","hash":"6e41f31100ae7eb3a6f23f2c168f6dd56e7f7a9a","modified":1619902386713},{"_id":"public/libs/others/clicklove.js","hash":"6a39b8c683ba5dcd92f70c6ab45d1cfac3213e8e","modified":1619902386713},{"_id":"public/libs/prism/prism.css","hash":"62e5474893dece076534352f564ceabd6e088a5a","modified":1619902386713},{"_id":"public/libs/scrollprogress/scrollProgress.min.js","hash":"777ffe5d07e85a14fbe97d846f45ffc0087251cc","modified":1619902386713},{"_id":"public/libs/tocbot/tocbot.css","hash":"9ab8ef576c9a57115194152e79cca79b0a41dd70","modified":1619902386713},{"_id":"public/libs/tocbot/tocbot.min.js","hash":"5ec27317f0270b8cf6b884c6f12025700b9a565c","modified":1619902386713},{"_id":"public/libs/aos/aos.js","hash":"02bfb40b0c4b6e9b0b4081218357145cbb327d74","modified":1619902386713},{"_id":"public/libs/share/css/share.min.css","hash":"8a778a86f3ce9a042df6be63a9f1039631e351a5","modified":1619902386713},{"_id":"public/medias/featureimages/8.jpg","hash":"284ef1e136207ec7b0e1c0b909b091e506ee8b0d","modified":1619902386713},{"_id":"public/libs/awesome/webfonts/fa-brands-400.eot","hash":"22f9e7d5226408eb2d0a11e118257a3ca22b8670","modified":1619902386713},{"_id":"public/libs/awesome/webfonts/fa-solid-900.eot","hash":"cab8e84ae5682d1d556e234df9c790985888def8","modified":1619902386713},{"_id":"public/libs/awesome/webfonts/fa-solid-900.ttf","hash":"9521ed12274c2cbc910cea77657116fcf6545da3","modified":1619902386713},{"_id":"public/libs/aos/aos.css","hash":"191a3705a8f63e589a50a0ff2f2c5559f1a1b6b2","modified":1619902386713},{"_id":"public/libs/gitalk/gitalk.css","hash":"940ded3ea12c2fe1ab0820d2831ec405f3f1fe9f","modified":1619902386713},{"_id":"public/libs/gitment/gitment-default.css","hash":"2903c59ee06b965bef32e937bd69f5b0b2190717","modified":1619902386713},{"_id":"public/libs/masonry/masonry.pkgd.min.js","hash":"ff940b4ea68368ca0e4d5560cbb79fb147dfc3c5","modified":1619902386713},{"_id":"public/libs/lightGallery/css/lightgallery.min.css","hash":"1b7227237f9785c66062a4811508916518e4132c","modified":1619902386713},{"_id":"public/libs/share/js/jquery.share.min.js","hash":"41367dcb857e02e3c417ebe68a554ce1d4430806","modified":1619902386713},{"_id":"public/libs/share/js/social-share.min.js","hash":"a3090a02786dcd4efc6355c1c1dc978add8d6827","modified":1619902386713},{"_id":"public/css/matery.css","hash":"2f40d1824a7bc1e3c6fd5c68c9bfaa45bccc26a1","modified":1619902386713},{"_id":"public/libs/cryptojs/crypto-js.min.js","hash":"5989527a378b55011a59522f41eeb3981518325c","modified":1619902386713},{"_id":"public/libs/dplayer/DPlayer.min.css","hash":"f7d19655f873b813ffba5d1a17145c91f82631b8","modified":1619902386713},{"_id":"public/libs/minivaline/MiniValine.js","hash":"fbb58c37e2c74f127ae0c566afa9b48889aab79f","modified":1619902386713},{"_id":"public/libs/animate/animate.min.css","hash":"97afa151569f046b2e01f27c1871646e9cd87caf","modified":1619902386713},{"_id":"public/libs/aplayer/APlayer.min.js","hash":"22caa28ff6b41a16ff40f15d38f1739e22359478","modified":1619902386713},{"_id":"public/libs/lightGallery/js/lightgallery-all.min.js","hash":"9f5ef4bc8a0a3c746ca4f3c3e6d64493b1a977d8","modified":1619902386713},{"_id":"public/libs/gitment/gitment.js","hash":"28c02c45ce568e084cd1041dc493f83f9c6c88c6","modified":1619902386713},{"_id":"public/libs/valine/Valine.min.js","hash":"6cbdbf91e1f046dd41267a5ff0691a1fccba99df","modified":1619902386713},{"_id":"public/libs/awesome/css/all.css","hash":"ecc41e32ad2696877a1656749841f3b5543bbe3d","modified":1619902386713},{"_id":"public/libs/jquery/jquery.min.js","hash":"2115753ca5fb7032aec498db7bb5dca624dbe6be","modified":1619902386713},{"_id":"public/medias/featureimages/1.jpg","hash":"7de02626605ab9ece44c5428feccf7c70fa8b1aa","modified":1619902386713},{"_id":"public/libs/dplayer/DPlayer.min.js","hash":"c3bad7b265574fab0ae4d45867422ea1cb9d6599","modified":1619902386713},{"_id":"public/libs/materialize/materialize.min.css","hash":"c765f851ed74477d645492b5fdd497d7835c33a3","modified":1619902386713},{"_id":"public/medias/featureimages/6.jpg","hash":"6c3e71176eae370598326173e3a83209b781307f","modified":1619902386713},{"_id":"public/libs/gitalk/gitalk.min.js","hash":"8fefe38f28804f90116bdcb74a0875c9de9f3b7d","modified":1619902386713},{"_id":"public/libs/valine/av-min.js","hash":"541efb9edc1ce425cbe3897cfc25803211fe6a05","modified":1619902386713},{"_id":"public/libs/materialize/materialize.min.js","hash":"c8b4c65651921d888cf5f27430dfe2ad190d35bf","modified":1619902386713},{"_id":"public/libs/awesome/webfonts/fa-brands-400.svg","hash":"5e2d2a159294576bea69cc3360efb5ffe110ab2d","modified":1619902386713},{"_id":"public/libs/awesome/webfonts/fa-solid-900.svg","hash":"7da88b19e1486f8c968d3cf5ab3f194f01ea17fd","modified":1619902386713},{"_id":"public/libs/echarts/echarts.min.js","hash":"9496f386a0da4601cad22c479cc5543913a4d67f","modified":1619902386713}],"Category":[{"name":"Python","_id":"cko6821ih0004v2t8e7kb5yyg"},{"name":"HTML5","_id":"cko6821jk000kv2t85zsodxbc"}],"Data":[{"_id":"friends","data":[{"avatar":"http://image.luokangyuan.com/1_qq_27922023.jpg","name":"码酱","introduction":"我不是大佬，只是在追寻大佬的脚步","url":"http://luokangyuan.com/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/4027734.jpeg","name":"闪烁之狐","introduction":"编程界大佬，技术牛，人还特别好，不懂的都可以请教大佬","url":"https://blinkfox.github.io/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/avatar.jpg","name":"ja_rome","introduction":"平凡的脚步也可以走出伟大的行程","url":"https://me.csdn.net/jlh912008548","title":"前去学习"},{"avatar":"https://image.3001.net/images/20200920/16006077095413.png","name":"国光","introduction":"逆水行舟，不进则退。","url":"https://www.sqlsec.com/","title":"前去学习"}]}],"Page":[{"title":"404","date":"2021-04-30T01:43:18.000Z","type":"404","layout":"404","description":"Oops～，我崩溃了！找不到你想要的页面 :(","_content":"","source":"404/index.md","raw":"---\ntitle: 404\ndate: 2021-04-30 09:43:18\ntype: \"404\"\nlayout: \"404\"\ndescription: \"Oops～，我崩溃了！找不到你想要的页面 :(\"\n---","updated":"2021-04-30T01:44:19.158Z","path":"404/index.html","comments":1,"_id":"cko6821i10000v2t8c4aa1etx","content":"","site":{"data":{"friends":[{"avatar":"http://image.luokangyuan.com/1_qq_27922023.jpg","name":"码酱","introduction":"我不是大佬，只是在追寻大佬的脚步","url":"http://luokangyuan.com/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/4027734.jpeg","name":"闪烁之狐","introduction":"编程界大佬，技术牛，人还特别好，不懂的都可以请教大佬","url":"https://blinkfox.github.io/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/avatar.jpg","name":"ja_rome","introduction":"平凡的脚步也可以走出伟大的行程","url":"https://me.csdn.net/jlh912008548","title":"前去学习"},{"avatar":"https://image.3001.net/images/20200920/16006077095413.png","name":"国光","introduction":"逆水行舟，不进则退。","url":"https://www.sqlsec.com/","title":"前去学习"}]}},"excerpt":"","more":""},{"title":"向往自由的人在路上总不会寂寞","date":"2021-04-30T01:39:07.000Z","type":"about","layout":"about","_content":"","source":"about/index.md","raw":"---\ntitle: 向往自由的人在路上总不会寂寞\ndate: 2021-04-30 09:39:07\ntype: \"about\"\nlayout: \"about\"\n---\n","updated":"2021-04-30T09:26:31.788Z","path":"about/index.html","comments":1,"_id":"cko6821ie0002v2t84b6wc7xu","content":"","site":{"data":{"friends":[{"avatar":"http://image.luokangyuan.com/1_qq_27922023.jpg","name":"码酱","introduction":"我不是大佬，只是在追寻大佬的脚步","url":"http://luokangyuan.com/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/4027734.jpeg","name":"闪烁之狐","introduction":"编程界大佬，技术牛，人还特别好，不懂的都可以请教大佬","url":"https://blinkfox.github.io/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/avatar.jpg","name":"ja_rome","introduction":"平凡的脚步也可以走出伟大的行程","url":"https://me.csdn.net/jlh912008548","title":"前去学习"},{"avatar":"https://image.3001.net/images/20200920/16006077095413.png","name":"国光","introduction":"逆水行舟，不进则退。","url":"https://www.sqlsec.com/","title":"前去学习"}]}},"excerpt":"","more":""},{"title":"categories","date":"2021-04-30T01:22:39.000Z","type":"categories","layout":"categories","_content":"","source":"categories/index.md","raw":"---\ntitle: categories\ndate: 2021-04-30 09:22:39\ntype: \"categories\"\nlayout: \"categories\"\n---","updated":"2021-04-30T02:32:49.806Z","path":"categories/index.html","comments":1,"_id":"cko6821ik0006v2t81wvmf1k4","content":"","site":{"data":{"friends":[{"avatar":"http://image.luokangyuan.com/1_qq_27922023.jpg","name":"码酱","introduction":"我不是大佬，只是在追寻大佬的脚步","url":"http://luokangyuan.com/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/4027734.jpeg","name":"闪烁之狐","introduction":"编程界大佬，技术牛，人还特别好，不懂的都可以请教大佬","url":"https://blinkfox.github.io/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/avatar.jpg","name":"ja_rome","introduction":"平凡的脚步也可以走出伟大的行程","url":"https://me.csdn.net/jlh912008548","title":"前去学习"},{"avatar":"https://image.3001.net/images/20200920/16006077095413.png","name":"国光","introduction":"逆水行舟，不进则退。","url":"https://www.sqlsec.com/","title":"前去学习"}]}},"excerpt":"","more":""},{"title":"向各位大佬学习","date":"2021-04-30T01:39:51.000Z","type":"friends","layout":"friends","_content":"","source":"friends/index.md","raw":"---\ntitle: 向各位大佬学习\ndate: 2021-04-30 09:39:51\ntype: \"friends\"\nlayout: \"friends\"\n---\n","updated":"2021-04-30T09:27:54.445Z","path":"friends/index.html","comments":1,"_id":"cko6821il0007v2t8gt893ndt","content":"","site":{"data":{"friends":[{"avatar":"http://image.luokangyuan.com/1_qq_27922023.jpg","name":"码酱","introduction":"我不是大佬，只是在追寻大佬的脚步","url":"http://luokangyuan.com/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/4027734.jpeg","name":"闪烁之狐","introduction":"编程界大佬，技术牛，人还特别好，不懂的都可以请教大佬","url":"https://blinkfox.github.io/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/avatar.jpg","name":"ja_rome","introduction":"平凡的脚步也可以走出伟大的行程","url":"https://me.csdn.net/jlh912008548","title":"前去学习"},{"avatar":"https://image.3001.net/images/20200920/16006077095413.png","name":"国光","introduction":"逆水行舟，不进则退。","url":"https://www.sqlsec.com/","title":"前去学习"}]}},"excerpt":"","more":""},{"title":"归档","date":"2018-09-30T10:23:38.000Z","type":"tags","layout":"tags","_content":"","source":"tag/index.md","raw":"---\ntitle: 归档\ndate: 2018-09-30 18:23:38\ntype: \"tags\"\nlayout: \"tags\"\n---","updated":"2021-04-30T14:47:57.053Z","path":"tag/index.html","comments":1,"_id":"cko6821im0008v2t8egzh9b25","content":"","site":{"data":{"friends":[{"avatar":"http://image.luokangyuan.com/1_qq_27922023.jpg","name":"码酱","introduction":"我不是大佬，只是在追寻大佬的脚步","url":"http://luokangyuan.com/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/4027734.jpeg","name":"闪烁之狐","introduction":"编程界大佬，技术牛，人还特别好，不懂的都可以请教大佬","url":"https://blinkfox.github.io/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/avatar.jpg","name":"ja_rome","introduction":"平凡的脚步也可以走出伟大的行程","url":"https://me.csdn.net/jlh912008548","title":"前去学习"},{"avatar":"https://image.3001.net/images/20200920/16006077095413.png","name":"国光","introduction":"逆水行舟，不进则退。","url":"https://www.sqlsec.com/","title":"前去学习"}]}},"excerpt":"","more":""}],"Post":[{"title":"Django框架重写Hexo博客","top":true,"cover":false,"toc":true,"mathjax":false,"date":"2021-05-01T16:29:26.000Z","author":"栗子","img":"https://www.ipicbed.com/images/2021/05/02/django.jpg","_content":"\n##  安装Django框架\n\n如果是Mac系统的话，在系统上会自带python2版本，本次使用python3环境进行安装所以需要指定pip安装到python3 环境上。\n\n```bash\n# 安装Django框架至python3\npip3 install django\n# python2环境使用\npip install django\n```\n\n###  验证\n若要验证 Django 是否能被 Python 识别，可以在 shell 中输入 python。 然后在 Python 提示符下，尝试导入 Django：\n\n```bash\npython3\n>>> import django\n>>> print(django.get_version())\n3.2\n```\n当然了，你也可能安装的是其它版本的 Django。\n\n## 创建项目\n如果这是你第一次使用 Django 的话，你需要一些初始化设置。也就是说，你需要用一些自动生成的代码配置一个 Django project —— 即一个 Django 项目实例需要的设置项集合，包括数据库配置、Django 配置和应用程序配置。\n\n打开命令行，cd 到一个你想放置你代码的目录，然后运行以下命令：\n\n```bash\ndjango-admin startproject mysite\n```\n\n让我们看看 startproject 创建了些什么:\n\n```bash\nmysite/\n    manage.py\n    mysite/\n        __init__.py\n        settings.py\n        urls.py\n        asgi.py\n        wsgi.py\n```\n\n#### 这些目录和文件的用处是：\n\n - 最外层的 mysite/ 根目录只是你项目的容器， 根目录名称对 Django 没有影响，你可以将它重命名为任何你喜欢的名称。\n - `manage.py`: 一个让你用各种方式管理 Django 项目的命令行工具。\n - 里面一层的 mysite/ 目录包含你的项目，它是一个纯 Python 包。它的名字就是当你引用它内部任何东西时需要用到的 Python 包名。 (比如 mysite.urls).\n - `mysite/__init__.py`：一个空文件，告诉 Python 这个目录应该被认为是一个 Python 包。\n - `mysite/settings.py`：Django 项目的配置文件。\n - `mysite/urls.py`：Django 项目的 URL 声明，就像你网站的“目录”。\n - `mysite/asgi.py`：作为你的项目的运行在 ASGI 兼容的 Web 服务器上的入口。\n - `mysite/wsgi.py`：作为你的项目的运行在 WSGI 兼容的Web服务器上的入口。\n\n####  启动简易服务器\n\n```\npython3 managoe.py runserver\n```\n\n## 创建APP应用\n\n```\npython3 manage.py startapp index\n```\n","source":"_posts/Django框架重写Hexo博客.md","raw":"---\ntitle: Django框架重写Hexo博客\ntop: true\ncover: false\ntoc: true\nmathjax: false\ndate: 2021-05-02 00:29:26\nauthor: 栗子\nimg: https://www.ipicbed.com/images/2021/05/02/django.jpg\ncategories: Python\ntags: \n  - Python\n  - Django\n---\n\n##  安装Django框架\n\n如果是Mac系统的话，在系统上会自带python2版本，本次使用python3环境进行安装所以需要指定pip安装到python3 环境上。\n\n```bash\n# 安装Django框架至python3\npip3 install django\n# python2环境使用\npip install django\n```\n\n###  验证\n若要验证 Django 是否能被 Python 识别，可以在 shell 中输入 python。 然后在 Python 提示符下，尝试导入 Django：\n\n```bash\npython3\n>>> import django\n>>> print(django.get_version())\n3.2\n```\n当然了，你也可能安装的是其它版本的 Django。\n\n## 创建项目\n如果这是你第一次使用 Django 的话，你需要一些初始化设置。也就是说，你需要用一些自动生成的代码配置一个 Django project —— 即一个 Django 项目实例需要的设置项集合，包括数据库配置、Django 配置和应用程序配置。\n\n打开命令行，cd 到一个你想放置你代码的目录，然后运行以下命令：\n\n```bash\ndjango-admin startproject mysite\n```\n\n让我们看看 startproject 创建了些什么:\n\n```bash\nmysite/\n    manage.py\n    mysite/\n        __init__.py\n        settings.py\n        urls.py\n        asgi.py\n        wsgi.py\n```\n\n#### 这些目录和文件的用处是：\n\n - 最外层的 mysite/ 根目录只是你项目的容器， 根目录名称对 Django 没有影响，你可以将它重命名为任何你喜欢的名称。\n - `manage.py`: 一个让你用各种方式管理 Django 项目的命令行工具。\n - 里面一层的 mysite/ 目录包含你的项目，它是一个纯 Python 包。它的名字就是当你引用它内部任何东西时需要用到的 Python 包名。 (比如 mysite.urls).\n - `mysite/__init__.py`：一个空文件，告诉 Python 这个目录应该被认为是一个 Python 包。\n - `mysite/settings.py`：Django 项目的配置文件。\n - `mysite/urls.py`：Django 项目的 URL 声明，就像你网站的“目录”。\n - `mysite/asgi.py`：作为你的项目的运行在 ASGI 兼容的 Web 服务器上的入口。\n - `mysite/wsgi.py`：作为你的项目的运行在 WSGI 兼容的Web服务器上的入口。\n\n####  启动简易服务器\n\n```\npython3 managoe.py runserver\n```\n\n## 创建APP应用\n\n```\npython3 manage.py startapp index\n```\n","slug":"Django框架重写Hexo博客","published":1,"updated":"2021-05-01T19:55:51.165Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cko6821i70001v2t82699hstj","content":"<h2 id=\"安装Django框架\"><a href=\"#安装Django框架\" class=\"headerlink\" title=\"安装Django框架\"></a>安装Django框架</h2><p>如果是Mac系统的话，在系统上会自带python2版本，本次使用python3环境进行安装所以需要指定pip安装到python3 环境上。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 安装Django框架至python3</span>\npip3 <span class=\"token function\">install</span> django\n<span class=\"token comment\"># python2环境使用</span>\npip <span class=\"token function\">install</span> django<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"验证\"><a href=\"#验证\" class=\"headerlink\" title=\"验证\"></a>验证</h3><p>若要验证 Django 是否能被 Python 识别，可以在 shell 中输入 python。 然后在 Python 提示符下，尝试导入 Django：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">python3\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token function\">import</span> django\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> print<span class=\"token punctuation\">(</span>django.get_version<span class=\"token punctuation\">(</span><span class=\"token punctuation\">))</span>\n<span class=\"token number\">3.2</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<p>当然了，你也可能安装的是其它版本的 Django。</p>\n<h2 id=\"创建项目\"><a href=\"#创建项目\" class=\"headerlink\" title=\"创建项目\"></a>创建项目</h2><p>如果这是你第一次使用 Django 的话，你需要一些初始化设置。也就是说，你需要用一些自动生成的代码配置一个 Django project —— 即一个 Django 项目实例需要的设置项集合，包括数据库配置、Django 配置和应用程序配置。</p>\n<p>打开命令行，cd 到一个你想放置你代码的目录，然后运行以下命令：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">django-admin startproject mysite<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>让我们看看 startproject 创建了些什么:</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">mysite/\n    manage.py\n    mysite/\n        __init__.py\n        settings.py\n        urls.py\n        asgi.py\n        wsgi.py<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"这些目录和文件的用处是：\"><a href=\"#这些目录和文件的用处是：\" class=\"headerlink\" title=\"这些目录和文件的用处是：\"></a>这些目录和文件的用处是：</h4><ul>\n<li>最外层的 mysite/ 根目录只是你项目的容器， 根目录名称对 Django 没有影响，你可以将它重命名为任何你喜欢的名称。</li>\n<li><code>manage.py</code>: 一个让你用各种方式管理 Django 项目的命令行工具。</li>\n<li>里面一层的 mysite/ 目录包含你的项目，它是一个纯 Python 包。它的名字就是当你引用它内部任何东西时需要用到的 Python 包名。 (比如 mysite.urls).</li>\n<li><code>mysite/__init__.py</code>：一个空文件，告诉 Python 这个目录应该被认为是一个 Python 包。</li>\n<li><code>mysite/settings.py</code>：Django 项目的配置文件。</li>\n<li><code>mysite/urls.py</code>：Django 项目的 URL 声明，就像你网站的“目录”。</li>\n<li><code>mysite/asgi.py</code>：作为你的项目的运行在 ASGI 兼容的 Web 服务器上的入口。</li>\n<li><code>mysite/wsgi.py</code>：作为你的项目的运行在 WSGI 兼容的Web服务器上的入口。</li>\n</ul>\n<h4 id=\"启动简易服务器\"><a href=\"#启动简易服务器\" class=\"headerlink\" title=\"启动简易服务器\"></a>启动简易服务器</h4><pre class=\"line-numbers language-none\"><code class=\"language-none\">python3 managoe.py runserver<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h2 id=\"创建APP应用\"><a href=\"#创建APP应用\" class=\"headerlink\" title=\"创建APP应用\"></a>创建APP应用</h2><pre class=\"line-numbers language-none\"><code class=\"language-none\">python3 manage.py startapp index<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n","site":{"data":{"friends":[{"avatar":"http://image.luokangyuan.com/1_qq_27922023.jpg","name":"码酱","introduction":"我不是大佬，只是在追寻大佬的脚步","url":"http://luokangyuan.com/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/4027734.jpeg","name":"闪烁之狐","introduction":"编程界大佬，技术牛，人还特别好，不懂的都可以请教大佬","url":"https://blinkfox.github.io/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/avatar.jpg","name":"ja_rome","introduction":"平凡的脚步也可以走出伟大的行程","url":"https://me.csdn.net/jlh912008548","title":"前去学习"},{"avatar":"https://image.3001.net/images/20200920/16006077095413.png","name":"国光","introduction":"逆水行舟，不进则退。","url":"https://www.sqlsec.com/","title":"前去学习"}]}},"excerpt":"","more":"<h2 id=\"安装Django框架\"><a href=\"#安装Django框架\" class=\"headerlink\" title=\"安装Django框架\"></a>安装Django框架</h2><p>如果是Mac系统的话，在系统上会自带python2版本，本次使用python3环境进行安装所以需要指定pip安装到python3 环境上。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 安装Django框架至python3</span>\npip3 <span class=\"token function\">install</span> django\n<span class=\"token comment\"># python2环境使用</span>\npip <span class=\"token function\">install</span> django<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"验证\"><a href=\"#验证\" class=\"headerlink\" title=\"验证\"></a>验证</h3><p>若要验证 Django 是否能被 Python 识别，可以在 shell 中输入 python。 然后在 Python 提示符下，尝试导入 Django：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">python3\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token function\">import</span> django\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> print<span class=\"token punctuation\">(</span>django.get_version<span class=\"token punctuation\">(</span><span class=\"token punctuation\">))</span>\n<span class=\"token number\">3.2</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<p>当然了，你也可能安装的是其它版本的 Django。</p>\n<h2 id=\"创建项目\"><a href=\"#创建项目\" class=\"headerlink\" title=\"创建项目\"></a>创建项目</h2><p>如果这是你第一次使用 Django 的话，你需要一些初始化设置。也就是说，你需要用一些自动生成的代码配置一个 Django project —— 即一个 Django 项目实例需要的设置项集合，包括数据库配置、Django 配置和应用程序配置。</p>\n<p>打开命令行，cd 到一个你想放置你代码的目录，然后运行以下命令：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">django-admin startproject mysite<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>让我们看看 startproject 创建了些什么:</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">mysite/\n    manage.py\n    mysite/\n        __init__.py\n        settings.py\n        urls.py\n        asgi.py\n        wsgi.py<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"这些目录和文件的用处是：\"><a href=\"#这些目录和文件的用处是：\" class=\"headerlink\" title=\"这些目录和文件的用处是：\"></a>这些目录和文件的用处是：</h4><ul>\n<li>最外层的 mysite/ 根目录只是你项目的容器， 根目录名称对 Django 没有影响，你可以将它重命名为任何你喜欢的名称。</li>\n<li><code>manage.py</code>: 一个让你用各种方式管理 Django 项目的命令行工具。</li>\n<li>里面一层的 mysite/ 目录包含你的项目，它是一个纯 Python 包。它的名字就是当你引用它内部任何东西时需要用到的 Python 包名。 (比如 mysite.urls).</li>\n<li><code>mysite/__init__.py</code>：一个空文件，告诉 Python 这个目录应该被认为是一个 Python 包。</li>\n<li><code>mysite/settings.py</code>：Django 项目的配置文件。</li>\n<li><code>mysite/urls.py</code>：Django 项目的 URL 声明，就像你网站的“目录”。</li>\n<li><code>mysite/asgi.py</code>：作为你的项目的运行在 ASGI 兼容的 Web 服务器上的入口。</li>\n<li><code>mysite/wsgi.py</code>：作为你的项目的运行在 WSGI 兼容的Web服务器上的入口。</li>\n</ul>\n<h4 id=\"启动简易服务器\"><a href=\"#启动简易服务器\" class=\"headerlink\" title=\"启动简易服务器\"></a>启动简易服务器</h4><pre class=\"line-numbers language-none\"><code class=\"language-none\">python3 managoe.py runserver<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h2 id=\"创建APP应用\"><a href=\"#创建APP应用\" class=\"headerlink\" title=\"创建APP应用\"></a>创建APP应用</h2><pre class=\"line-numbers language-none\"><code class=\"language-none\">python3 manage.py startapp index<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n"},{"title":"深入认识 Scrapy框架中settings文件","date":"2021-04-30T02:08:37.000Z","author":"Tanmy","img":"https://www.ipicbed.com/images/2021/04/30/6.png","top":true,"cover":false,"toc":true,"mathjax":false,"_content":"\n##  深入认识 Scrapy框架中settings文件\n\n###  为什么Scrapy项目中会存在settings文件呢，他到底是什么？\n\n- 配置文件存放一些公共的变量（比如数据库的地址、账号+密码等），方便自己和别人修改\n- 一般使用全大写字母命名变量名，例如 `LOG_LEVEL=\"WARN\"`\n\n##  settings文件详细解读\n\n\n\n```python\nBOT_NAME = 'Sun'  # 项目名\n\nSPIDER_MODULES = ['Sun.spiders']  # 爬虫的位置\nNEWSPIDER_MODULE = 'Sun.spiders'  # 如果我们新建一个爬虫，这个新建爬虫的位置\n\nLOG_LEVEL=\"WARN\"  # log日志显示的最低等级，只有等级大于或等于LOG_LEVEL的才会在终端中显示\n\n# Crawl responsibly by identifying yourself (and your website) on the user-agent\nUSER_AGENT = \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.89 Safari/537.36\"\n# 浏览器的身份标识，即是\"User-Agent\"\n\n# Obey robots.txt rules\nROBOTSTXT_OBEY = True\n# 默认情况下为True，表示遵守这个网站的robots协议\n# 如果我们设置\n# ROBOTSTXT_OBEY = True  # 不遵守robots协议\n# 遵守robots协议的体现：最开始请求url地址的时候会先请求对应的robots.txt，如果我们不遵守robots协议，就不会请求\n\n# Configure maximum concurrent requests performed by Scrapy (default: 16)\n#CONCURRENT_REQUESTS = 32  # 设置最大并发请求\n# scrapy中封装了一个twisted异步网络框架，在发送网络请求的时候不会说等一个请求请求成功之后再去发送下一个请求，而是同时去发送很多个请求\n# 大概有多少个请求可以同时被发送呢？我们可以在这里自定义数量\n# 注意：默认是16个，我们可以根据自己的爬虫项目需要自定义CONCURRENT_REQUESTS的数量\n# CONCURRENT_REQUESTS的值越大，爬虫爬取的速度越快\n# 但是注意，CONCURRENT_REQUESTS的值越大，越有可能被对方的服务器识别为一个爬虫程序\n# 所以说，要适当设置CONCURRENT_REQUESTS的数量\n\n#DOWNLOAD_DELAY = 3  # 下载延迟\n# 每次请求之前，休眠3秒\n# 可以让我们的爬虫请求速度变慢一些\n# The download delay setting will honor only one of:\n# 就是说我们的DOWNLOAD_DELAY参数可以配合着下面的CONCURRENT_REQUESTS_PER_DOMAIN参数和CONCURRENT_REQUESTS_PER_IP参数来使用\n#CONCURRENT_REQUESTS_PER_DOMAIN = 16  # 每一个域名的最大并发请求数目\n#CONCURRENT_REQUESTS_PER_IP = 16  # 每一个IP的最大并发请求数目\n\n# Disable cookies (enabled by default)\n#COOKIES_ENABLED = False  # cookie是否开启\n# 默认情况下是开启的，也就是说我们请求完一个url地址之后，去请求下一个url地址的时候，scrapy默认是带上前一次请求对方服务器设置在我们本地的cookie信息\n# 很重要\n\n# Disable Telnet Console (enabled by default)\n#TELNETCONSOLE_ENABLED = False\n# 这是我们scrapy框架的一个插件\n# 默认是开启的状态\n\n# Override the default request headers:\n#DEFAULT_REQUEST_HEADERS = {\n#   'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8',\n#   'Accept-Language': 'en',\n#}\n# 默认的请求头，默认是关闭的状态\n# 开启之后，scrapy就会用这个请求头去发送请求\n# 注意：如果我们将\"User-Agent\"参数放在这里，是没有任何效果的，因为专门有一个参数接收\"User-Agent\"对应的值\n\n# Enable or disable spider middlewares\n# See https://docs.scrapy.org/en/latest/topics/spider-middleware.html\n# SPIDER_MIDDLEWARES = {\n#    'Sun.middlewares.SunSpiderMiddleware': 543,\n# }\n# 爬虫中间件\n\n# Enable or disable downloader middlewares\n# See https://docs.scrapy.org/en/latest/topics/downloader-middleware.html\n#DOWNLOADER_MIDDLEWARES = {\n#    'Sun.middlewares.SunDownloaderMiddleware': 543,\n#}\n# 下载中间件\n\n# Enable or disable extensions\n# See https://docs.scrapy.org/en/latest/topics/extensions.html\n#EXTENSIONS = {\n#    'scrapy.extensions.telnet.TelnetConsole': None,\n#}\n# 插件\n\n# Configure item pipelines\n# See https://docs.scrapy.org/en/latest/topics/item-pipeline.html\nITEM_PIPELINES = {\n   'Sun.pipelines.SunPipeline': 300,\n}\n# 管道\n\n# 爬虫中间件、下载中间件、插件、管道的使用方法：\n# 类似于ITEM_PIPELINES管道的使用方法\n# 开启之后，键--位置，值--和引擎之间的距离（注意：值越大，权重越低；值越小，权重越高）\n\n# Enable and configure the AutoThrottle extension (disabled by default)\n# See https://docs.scrapy.org/en/latest/topics/autothrottle.html\n#AUTOTHROTTLE_ENABLED = True\n# AUTOTHROTTLE--自动限速\n# 比如说我们通过scrapy爬取对方的网站，可能会由于我们的scrapy爬虫速度太快导致把对方的网站“抓崩了”\n# “抓崩了”并不是我们想要的结果，因为“抓崩了”之后我们就没有办法再在对方的网站上爬取数据了\n# 我们可以根据对方网站的情况让我们的scrapy爬虫速度变慢一些\n# 通过调节下面的参数我们可以达到这个自动限速的目的\n# 但是往往我们是不需要这样操作的\n# The initial download delay\n#AUTOTHROTTLE_START_DELAY = 5\n# The maximum download delay to be set in case of high latencies\n#AUTOTHROTTLE_MAX_DELAY = 60\n# The average number of requests Scrapy should be sending in parallel to\n# each remote server\n#AUTOTHROTTLE_TARGET_CONCURRENCY = 1.0\n# Enable showing throttling stats for every response received:\n#AUTOTHROTTLE_DEBUG = False\n\n# Enable and configure HTTP caching (disabled by default)\n# 关于HTTP的缓存，默认是关闭的\n# See https://docs.scrapy.org/en/latest/topics/downloader-middleware.html#httpcache-middleware-settings\n#HTTPCACHE_ENABLED = True\n#HTTPCACHE_EXPIRATION_SECS = 0\n#HTTPCACHE_DIR = 'httpcache'\n#HTTPCACHE_IGNORE_HTTP_CODES = []\n#HTTPCACHE_STORAGE = 'scrapy.extensions.httpcache.FilesystemCacheStorage'\n# 如果我们想要开启HTTP缓存就可以将其打开\n# 它会将我们的HTTP缓存至设置的位置，实现对应的功能\n# 不常用\n\n# 每一块内容都是有对应的官方文档的\n```\n\n\n\n## **如何在代码中使用我们在settings.py文件中所做的设置**\n\n现在，我们在`settings.py`文件中做了一些设置\n\n[![ ](https://www.ipicbed.com/images/2021/04/30/1.md.png)](https://www.ipicbed.com/image/n4mz)\n\n`settings.py`文件中有一个`MONGO_HOST`，我们应该如何在spider中使用呢？\n\n### 第一种方法：导入\n\n1.导入\n\n[![ ](https://www.ipicbed.com/images/2021/04/30/2.md.png)](https://www.ipicbed.com/image/n8n8)\n\n2.现在我们就可以使用我们在`settings.py`文件中定义的这个`MONGO_HOST`参数了\n\n3.如果我们想要在其他文件中使用`MONGO_HOST`这个参数也是一样方法：导入\n\n以` pipelines.py` 为例，\n\n`from .settings import MONGO_HOST`\n\n[![ ](https://www.ipicbed.com/images/2021/04/30/3.md.png)](https://www.ipicbed.com/image/ntWC)\n\n### 第二种方法：属性\n\n其实我们的spider本身就有一个属性就是settings\n\n#### **1.如何在爬虫中使用settings属性**\n\n[![ ](https://www.ipicbed.com/images/2021/04/30/4.md.png)](https://www.ipicbed.com/image/nYJE)\n\n\n\n```python\n# -*- coding: utf-8 -*-\nimport scrapy\nfrom ..items import SunItem\n# from ..settings import MONGO_HOST\n\nclass SunSpider(scrapy.Spider):\n    name = 'sun'\n    allowed_domains = ['sun0769.com']\n    start_urls = ['http://wz.sun0769.com/political/index/politicsNewest?id=1&page=1']\n\n    def parse(self, response):\n        # # spider本身就有一个属性叫做settings\n        # self.settings[\"MONGO_HOST\"]  # self.settings是一个字典\n        # self.settings.get(\"MONGO_HOST\",\"指定的MONGO_HOST的值\")\n        \"\"\"\n        由于self.settings是一个字典。所以我们可以对其使用\n        self.settings.get(\"MONGO_HOST\")  # 如果MONGO_HOST不存在，返回的就是一个None值\n        # 或者是返回我们在get方法中给MONGO_HOST手动指定的值\n        self.settings.get(\"MONGO_HOST\",\"指定的MONGO_HOST的值\")\n        \"\"\"\n\n\n        # 分组\n        li_list=response.xpath('//div[@class=\"width-12\"]/ul[@class=\"title-state-ul\"]//li[@class=\"clear\"]')\n        for li in li_list:\n            item=SunItem()\n            item[\"num\"]=li.xpath('.//span[@class=\"state1\"]/text()').extract_first()\n            item[\"title\"]=li.xpath('.//span[@class=\"state3\"]/a[1]/text()').extract_first()\n            item[\"response_time\"]=li.xpath('.//span[@class=\"state4\"]/text()').extract_first().strip()\n            item[\"response_time\"]=item[\"response_time\"].split(\"：\")[-1]\n            item[\"ask_time\"]=li.xpath('.//span[@class=\"state5 \"]/text()').extract_first()\n            item[\"detail_url\"]=\"http://wz.sun0769.com\"+li.xpath('.//span[@class=\"state3\"]/a[1]/@href').extract_first()\n\n            yield scrapy.Request(item[\"detail_url\"],\n                                 callback=self.parse_detail_url,\n                                 meta={\"item\":item}  # 通过meta传递数据\n                                 )\n\n        # 实现翻页操作\n        for page in range(2, 4):\n            next_url = f\"http://wz.sun0769.com/political/index/politicsNewest?id=1&page={page}\"\n            yield scrapy.Request(next_url,\n                                 callback=self.parse\n                                 )\n\n    def parse_detail_url(self,response):\n        \"\"\"处理详情页的数据\"\"\"\n        item=response.meta[\"item\"]  # 取出数据\n\n        # 注意：这样获得的内容是混杂的，包含了很多的占位符等垃圾符号\n        item[\"content\"]=response.xpath('//div[@class=\"details-box\"]/pre/text()').extract_first()\n\n        # 注意：图片和视频可能不止一个，也可能没有\n        item[\"img\"]=response.xpath('//div[@class=\"clear details-img-list Picture-img\"]/img/@src').extract()\n        item[\"video\"]=response.xpath('//div[@class=\"vcp-player\"]/video/@src').extract()\n\n        yield item\n```\n\n\n\n#### **2.如何在其他文件中使用settings属性**\n\n> *以pipelines.py为例*\n>\n> [![ ](https://www.ipicbed.com/images/2021/04/30/5.md.png)](https://www.ipicbed.com/image/nf3N)\n\n\n```python\n# -*- coding: utf-8 -*-\n\n# Define your item pipelines here\n#\n# Don't forget to add your pipeline to the ITEM_PIPELINES setting\n# See: https://docs.scrapy.org/en/latest/topics/item-pipeline.html\n\nimport logging\n# from .settings import MONGO_HOST\n\nlogger=logging.getLogger(__name__)\n\nclass SunPipeline:\n    def process_item(self, item, spider):\n        # spider.settings\n        # spider.settings就是self.settings\n        \"\"\"\n        spider.settings[\"MONGO_HOST\"]\n        spider.settings.get(\"MONGO_HOST\",\"指定的MONGO_HOST的值\")\n        \"\"\"\n\n        item[\"content\"]=self.process_content(item[\"content\"])\n        # logger.warning(item)\n        return item\n\n    def process_content(self,content):\n        \"\"\"处理item中的字符串\"\"\"\n        new_content=content.replace(\"\\r\\n\",\"\").replace(\"\\xa0\",\"\")\n        return new_content\n```\n\n**scrapy深入之pipeline的使用**\n\n\n```python\nclass JsonWriterPipeline(object):\n    def open(self,spider):\n        \"\"\"在爬虫开启的时候执行，仅执行一次\"\"\"\n        self.file=open(spider.setting.get(\"SAVE_FILE\",\"./temp.json\"),\"w\")\n    \n    def close(self,spider):\n        \"\"\"在爬虫关闭的时候执行，仅执行一次\"\"\"\n        self.file.close()\n    \n    def process_item(self,item,spider):\n        line=json.dumps(dict(item))+\"\\n\"  # 将字典转化为json字符串\n        self.file.write(line)\n        return item  # 如果不return的情况下，另一个权重较低的pipeline就不会获取到该item\n```\n\n\n\n- open_spider`在爬虫开启的时候执行一次\n- `close_spider`在爬虫关闭的时候执行一次\n\n**好处1：数据库的处理：**\n\n- 建立连接的过程就可以放在`open_spider`中\n- 断开连接的过程就放在`close_spider`中\n\n**好处2：在爬虫开始时为爬虫添加一些属性**\n\n1. 在爬虫开始的时候为爬虫添加了一个新的属性`hello`，值为`\"world\"`\n\n   位置：`pipelines.SunPipeline`\n\n[![ ](https://www.ipicbed.com/images/2021/04/30/6.md.png)](https://www.ipicbed.com/image/nQfu)\n\n```python\ndef open_spider(self,spider):\n        spider.hello=\"world\"  # 为spider创建一个新的属性叫做\"hello\"，值为\"world\"\n```\n\n2. 在爬虫中调用这个属性\n\n[![ ](https://www.ipicbed.com/images/2021/04/30/7.md.png)](https://www.ipicbed.com/image/npoT)\n\n注意：现在我们至是想要看见`scrapy`在爬虫启动的时候是否执行了open_spider这个方法，不需要爬取网站的信息，所以我们修改爬取的范围，即是 `allowed_domains`\n\n2. 启动我们的爬虫程序\n\n`scrapy crawl sun`\n\n[![ ](https://www.ipicbed.com/images/2021/04/30/8.md.png)](https://www.ipicbed.com/image/nq1b)\n\n发现确实是输出了`hello`属性对应的值，说明我们的爬虫在开始的时候的确是调用了open_spider这个函数\n\n\n\n## **pipeline中对数据库的处理**\n\n```python\n# 对数据库进行处理\nfrom pymongo import MongoClient\n\n\nclass SunPipeline:\n    def open_spider(self,spider):\n        client=MongoClient()  # 实例化一下client\n        self.collection=client[\"test\"][\"test\"]\n\n    def process_item(self, item, spider):\n        # 调用self.collection，直接insert\n        self.collection.insert(dict(item))\n```\n\n**当我们需要把文件写在本地的时候**\n\n```python\nclass JsonWriterPipeline(object):\n    def open(self,spider):\n        \"\"\"在爬虫开启的时候执行，仅执行一次\"\"\"\n        self.file=open(spider.setting.get(\"SAVE_FILE\",\"./temp.json\"),\"w\")\n    \n    def close(self,spider):\n        \"\"\"在爬虫关闭的时候执行，仅执行一次\"\"\"\n        self.file.close()\n    \n    def process_item(self,item,spider):\n        line=json.dumps(dict(item))+\"\\n\"  # 将字典转化为json字符串\n        self.file.write(line)\n        return item  # 如果不return的情况下，另一个权重较低的pipeline就不会获取到该item\n```\n\n**思路：**\n\n- 在`open_spider`中打开一次\n- 在`close_spider`中关闭一次\n- 中间不停地往文件中写入数据\n\n这种方式是可以的，但是会有问题\n\n**问题：**\n\n如果我们的爬虫在爬取网站的时候爬取到第3页的时候程序突然报错了，然后爬虫终止执行，这时候，前2页的数据能够保存在我们的文件中吗？\n\n**不会**\n\n**为什么？**\n\n因为我们的文件打开之后写入数据只有在close之后数据才会写进去，如果我们不close的话，数据是不会写入的。","source":"_posts/深入认识-Scrapy中settings文件.md","raw":"---\ntitle: 深入认识 Scrapy框架中settings文件\ndate: 2021-04-30 10:08:37\nauthor: Tanmy\nimg: https://www.ipicbed.com/images/2021/04/30/6.png\ntop: true\ncover: false\n# coverImg: /images/1.jpg\ntoc: true\nmathjax: false\ncategories: Python\ntags:\n  - Scrapy\n  - Python\n---\n\n##  深入认识 Scrapy框架中settings文件\n\n###  为什么Scrapy项目中会存在settings文件呢，他到底是什么？\n\n- 配置文件存放一些公共的变量（比如数据库的地址、账号+密码等），方便自己和别人修改\n- 一般使用全大写字母命名变量名，例如 `LOG_LEVEL=\"WARN\"`\n\n##  settings文件详细解读\n\n\n\n```python\nBOT_NAME = 'Sun'  # 项目名\n\nSPIDER_MODULES = ['Sun.spiders']  # 爬虫的位置\nNEWSPIDER_MODULE = 'Sun.spiders'  # 如果我们新建一个爬虫，这个新建爬虫的位置\n\nLOG_LEVEL=\"WARN\"  # log日志显示的最低等级，只有等级大于或等于LOG_LEVEL的才会在终端中显示\n\n# Crawl responsibly by identifying yourself (and your website) on the user-agent\nUSER_AGENT = \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.89 Safari/537.36\"\n# 浏览器的身份标识，即是\"User-Agent\"\n\n# Obey robots.txt rules\nROBOTSTXT_OBEY = True\n# 默认情况下为True，表示遵守这个网站的robots协议\n# 如果我们设置\n# ROBOTSTXT_OBEY = True  # 不遵守robots协议\n# 遵守robots协议的体现：最开始请求url地址的时候会先请求对应的robots.txt，如果我们不遵守robots协议，就不会请求\n\n# Configure maximum concurrent requests performed by Scrapy (default: 16)\n#CONCURRENT_REQUESTS = 32  # 设置最大并发请求\n# scrapy中封装了一个twisted异步网络框架，在发送网络请求的时候不会说等一个请求请求成功之后再去发送下一个请求，而是同时去发送很多个请求\n# 大概有多少个请求可以同时被发送呢？我们可以在这里自定义数量\n# 注意：默认是16个，我们可以根据自己的爬虫项目需要自定义CONCURRENT_REQUESTS的数量\n# CONCURRENT_REQUESTS的值越大，爬虫爬取的速度越快\n# 但是注意，CONCURRENT_REQUESTS的值越大，越有可能被对方的服务器识别为一个爬虫程序\n# 所以说，要适当设置CONCURRENT_REQUESTS的数量\n\n#DOWNLOAD_DELAY = 3  # 下载延迟\n# 每次请求之前，休眠3秒\n# 可以让我们的爬虫请求速度变慢一些\n# The download delay setting will honor only one of:\n# 就是说我们的DOWNLOAD_DELAY参数可以配合着下面的CONCURRENT_REQUESTS_PER_DOMAIN参数和CONCURRENT_REQUESTS_PER_IP参数来使用\n#CONCURRENT_REQUESTS_PER_DOMAIN = 16  # 每一个域名的最大并发请求数目\n#CONCURRENT_REQUESTS_PER_IP = 16  # 每一个IP的最大并发请求数目\n\n# Disable cookies (enabled by default)\n#COOKIES_ENABLED = False  # cookie是否开启\n# 默认情况下是开启的，也就是说我们请求完一个url地址之后，去请求下一个url地址的时候，scrapy默认是带上前一次请求对方服务器设置在我们本地的cookie信息\n# 很重要\n\n# Disable Telnet Console (enabled by default)\n#TELNETCONSOLE_ENABLED = False\n# 这是我们scrapy框架的一个插件\n# 默认是开启的状态\n\n# Override the default request headers:\n#DEFAULT_REQUEST_HEADERS = {\n#   'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8',\n#   'Accept-Language': 'en',\n#}\n# 默认的请求头，默认是关闭的状态\n# 开启之后，scrapy就会用这个请求头去发送请求\n# 注意：如果我们将\"User-Agent\"参数放在这里，是没有任何效果的，因为专门有一个参数接收\"User-Agent\"对应的值\n\n# Enable or disable spider middlewares\n# See https://docs.scrapy.org/en/latest/topics/spider-middleware.html\n# SPIDER_MIDDLEWARES = {\n#    'Sun.middlewares.SunSpiderMiddleware': 543,\n# }\n# 爬虫中间件\n\n# Enable or disable downloader middlewares\n# See https://docs.scrapy.org/en/latest/topics/downloader-middleware.html\n#DOWNLOADER_MIDDLEWARES = {\n#    'Sun.middlewares.SunDownloaderMiddleware': 543,\n#}\n# 下载中间件\n\n# Enable or disable extensions\n# See https://docs.scrapy.org/en/latest/topics/extensions.html\n#EXTENSIONS = {\n#    'scrapy.extensions.telnet.TelnetConsole': None,\n#}\n# 插件\n\n# Configure item pipelines\n# See https://docs.scrapy.org/en/latest/topics/item-pipeline.html\nITEM_PIPELINES = {\n   'Sun.pipelines.SunPipeline': 300,\n}\n# 管道\n\n# 爬虫中间件、下载中间件、插件、管道的使用方法：\n# 类似于ITEM_PIPELINES管道的使用方法\n# 开启之后，键--位置，值--和引擎之间的距离（注意：值越大，权重越低；值越小，权重越高）\n\n# Enable and configure the AutoThrottle extension (disabled by default)\n# See https://docs.scrapy.org/en/latest/topics/autothrottle.html\n#AUTOTHROTTLE_ENABLED = True\n# AUTOTHROTTLE--自动限速\n# 比如说我们通过scrapy爬取对方的网站，可能会由于我们的scrapy爬虫速度太快导致把对方的网站“抓崩了”\n# “抓崩了”并不是我们想要的结果，因为“抓崩了”之后我们就没有办法再在对方的网站上爬取数据了\n# 我们可以根据对方网站的情况让我们的scrapy爬虫速度变慢一些\n# 通过调节下面的参数我们可以达到这个自动限速的目的\n# 但是往往我们是不需要这样操作的\n# The initial download delay\n#AUTOTHROTTLE_START_DELAY = 5\n# The maximum download delay to be set in case of high latencies\n#AUTOTHROTTLE_MAX_DELAY = 60\n# The average number of requests Scrapy should be sending in parallel to\n# each remote server\n#AUTOTHROTTLE_TARGET_CONCURRENCY = 1.0\n# Enable showing throttling stats for every response received:\n#AUTOTHROTTLE_DEBUG = False\n\n# Enable and configure HTTP caching (disabled by default)\n# 关于HTTP的缓存，默认是关闭的\n# See https://docs.scrapy.org/en/latest/topics/downloader-middleware.html#httpcache-middleware-settings\n#HTTPCACHE_ENABLED = True\n#HTTPCACHE_EXPIRATION_SECS = 0\n#HTTPCACHE_DIR = 'httpcache'\n#HTTPCACHE_IGNORE_HTTP_CODES = []\n#HTTPCACHE_STORAGE = 'scrapy.extensions.httpcache.FilesystemCacheStorage'\n# 如果我们想要开启HTTP缓存就可以将其打开\n# 它会将我们的HTTP缓存至设置的位置，实现对应的功能\n# 不常用\n\n# 每一块内容都是有对应的官方文档的\n```\n\n\n\n## **如何在代码中使用我们在settings.py文件中所做的设置**\n\n现在，我们在`settings.py`文件中做了一些设置\n\n[![ ](https://www.ipicbed.com/images/2021/04/30/1.md.png)](https://www.ipicbed.com/image/n4mz)\n\n`settings.py`文件中有一个`MONGO_HOST`，我们应该如何在spider中使用呢？\n\n### 第一种方法：导入\n\n1.导入\n\n[![ ](https://www.ipicbed.com/images/2021/04/30/2.md.png)](https://www.ipicbed.com/image/n8n8)\n\n2.现在我们就可以使用我们在`settings.py`文件中定义的这个`MONGO_HOST`参数了\n\n3.如果我们想要在其他文件中使用`MONGO_HOST`这个参数也是一样方法：导入\n\n以` pipelines.py` 为例，\n\n`from .settings import MONGO_HOST`\n\n[![ ](https://www.ipicbed.com/images/2021/04/30/3.md.png)](https://www.ipicbed.com/image/ntWC)\n\n### 第二种方法：属性\n\n其实我们的spider本身就有一个属性就是settings\n\n#### **1.如何在爬虫中使用settings属性**\n\n[![ ](https://www.ipicbed.com/images/2021/04/30/4.md.png)](https://www.ipicbed.com/image/nYJE)\n\n\n\n```python\n# -*- coding: utf-8 -*-\nimport scrapy\nfrom ..items import SunItem\n# from ..settings import MONGO_HOST\n\nclass SunSpider(scrapy.Spider):\n    name = 'sun'\n    allowed_domains = ['sun0769.com']\n    start_urls = ['http://wz.sun0769.com/political/index/politicsNewest?id=1&page=1']\n\n    def parse(self, response):\n        # # spider本身就有一个属性叫做settings\n        # self.settings[\"MONGO_HOST\"]  # self.settings是一个字典\n        # self.settings.get(\"MONGO_HOST\",\"指定的MONGO_HOST的值\")\n        \"\"\"\n        由于self.settings是一个字典。所以我们可以对其使用\n        self.settings.get(\"MONGO_HOST\")  # 如果MONGO_HOST不存在，返回的就是一个None值\n        # 或者是返回我们在get方法中给MONGO_HOST手动指定的值\n        self.settings.get(\"MONGO_HOST\",\"指定的MONGO_HOST的值\")\n        \"\"\"\n\n\n        # 分组\n        li_list=response.xpath('//div[@class=\"width-12\"]/ul[@class=\"title-state-ul\"]//li[@class=\"clear\"]')\n        for li in li_list:\n            item=SunItem()\n            item[\"num\"]=li.xpath('.//span[@class=\"state1\"]/text()').extract_first()\n            item[\"title\"]=li.xpath('.//span[@class=\"state3\"]/a[1]/text()').extract_first()\n            item[\"response_time\"]=li.xpath('.//span[@class=\"state4\"]/text()').extract_first().strip()\n            item[\"response_time\"]=item[\"response_time\"].split(\"：\")[-1]\n            item[\"ask_time\"]=li.xpath('.//span[@class=\"state5 \"]/text()').extract_first()\n            item[\"detail_url\"]=\"http://wz.sun0769.com\"+li.xpath('.//span[@class=\"state3\"]/a[1]/@href').extract_first()\n\n            yield scrapy.Request(item[\"detail_url\"],\n                                 callback=self.parse_detail_url,\n                                 meta={\"item\":item}  # 通过meta传递数据\n                                 )\n\n        # 实现翻页操作\n        for page in range(2, 4):\n            next_url = f\"http://wz.sun0769.com/political/index/politicsNewest?id=1&page={page}\"\n            yield scrapy.Request(next_url,\n                                 callback=self.parse\n                                 )\n\n    def parse_detail_url(self,response):\n        \"\"\"处理详情页的数据\"\"\"\n        item=response.meta[\"item\"]  # 取出数据\n\n        # 注意：这样获得的内容是混杂的，包含了很多的占位符等垃圾符号\n        item[\"content\"]=response.xpath('//div[@class=\"details-box\"]/pre/text()').extract_first()\n\n        # 注意：图片和视频可能不止一个，也可能没有\n        item[\"img\"]=response.xpath('//div[@class=\"clear details-img-list Picture-img\"]/img/@src').extract()\n        item[\"video\"]=response.xpath('//div[@class=\"vcp-player\"]/video/@src').extract()\n\n        yield item\n```\n\n\n\n#### **2.如何在其他文件中使用settings属性**\n\n> *以pipelines.py为例*\n>\n> [![ ](https://www.ipicbed.com/images/2021/04/30/5.md.png)](https://www.ipicbed.com/image/nf3N)\n\n\n```python\n# -*- coding: utf-8 -*-\n\n# Define your item pipelines here\n#\n# Don't forget to add your pipeline to the ITEM_PIPELINES setting\n# See: https://docs.scrapy.org/en/latest/topics/item-pipeline.html\n\nimport logging\n# from .settings import MONGO_HOST\n\nlogger=logging.getLogger(__name__)\n\nclass SunPipeline:\n    def process_item(self, item, spider):\n        # spider.settings\n        # spider.settings就是self.settings\n        \"\"\"\n        spider.settings[\"MONGO_HOST\"]\n        spider.settings.get(\"MONGO_HOST\",\"指定的MONGO_HOST的值\")\n        \"\"\"\n\n        item[\"content\"]=self.process_content(item[\"content\"])\n        # logger.warning(item)\n        return item\n\n    def process_content(self,content):\n        \"\"\"处理item中的字符串\"\"\"\n        new_content=content.replace(\"\\r\\n\",\"\").replace(\"\\xa0\",\"\")\n        return new_content\n```\n\n**scrapy深入之pipeline的使用**\n\n\n```python\nclass JsonWriterPipeline(object):\n    def open(self,spider):\n        \"\"\"在爬虫开启的时候执行，仅执行一次\"\"\"\n        self.file=open(spider.setting.get(\"SAVE_FILE\",\"./temp.json\"),\"w\")\n    \n    def close(self,spider):\n        \"\"\"在爬虫关闭的时候执行，仅执行一次\"\"\"\n        self.file.close()\n    \n    def process_item(self,item,spider):\n        line=json.dumps(dict(item))+\"\\n\"  # 将字典转化为json字符串\n        self.file.write(line)\n        return item  # 如果不return的情况下，另一个权重较低的pipeline就不会获取到该item\n```\n\n\n\n- open_spider`在爬虫开启的时候执行一次\n- `close_spider`在爬虫关闭的时候执行一次\n\n**好处1：数据库的处理：**\n\n- 建立连接的过程就可以放在`open_spider`中\n- 断开连接的过程就放在`close_spider`中\n\n**好处2：在爬虫开始时为爬虫添加一些属性**\n\n1. 在爬虫开始的时候为爬虫添加了一个新的属性`hello`，值为`\"world\"`\n\n   位置：`pipelines.SunPipeline`\n\n[![ ](https://www.ipicbed.com/images/2021/04/30/6.md.png)](https://www.ipicbed.com/image/nQfu)\n\n```python\ndef open_spider(self,spider):\n        spider.hello=\"world\"  # 为spider创建一个新的属性叫做\"hello\"，值为\"world\"\n```\n\n2. 在爬虫中调用这个属性\n\n[![ ](https://www.ipicbed.com/images/2021/04/30/7.md.png)](https://www.ipicbed.com/image/npoT)\n\n注意：现在我们至是想要看见`scrapy`在爬虫启动的时候是否执行了open_spider这个方法，不需要爬取网站的信息，所以我们修改爬取的范围，即是 `allowed_domains`\n\n2. 启动我们的爬虫程序\n\n`scrapy crawl sun`\n\n[![ ](https://www.ipicbed.com/images/2021/04/30/8.md.png)](https://www.ipicbed.com/image/nq1b)\n\n发现确实是输出了`hello`属性对应的值，说明我们的爬虫在开始的时候的确是调用了open_spider这个函数\n\n\n\n## **pipeline中对数据库的处理**\n\n```python\n# 对数据库进行处理\nfrom pymongo import MongoClient\n\n\nclass SunPipeline:\n    def open_spider(self,spider):\n        client=MongoClient()  # 实例化一下client\n        self.collection=client[\"test\"][\"test\"]\n\n    def process_item(self, item, spider):\n        # 调用self.collection，直接insert\n        self.collection.insert(dict(item))\n```\n\n**当我们需要把文件写在本地的时候**\n\n```python\nclass JsonWriterPipeline(object):\n    def open(self,spider):\n        \"\"\"在爬虫开启的时候执行，仅执行一次\"\"\"\n        self.file=open(spider.setting.get(\"SAVE_FILE\",\"./temp.json\"),\"w\")\n    \n    def close(self,spider):\n        \"\"\"在爬虫关闭的时候执行，仅执行一次\"\"\"\n        self.file.close()\n    \n    def process_item(self,item,spider):\n        line=json.dumps(dict(item))+\"\\n\"  # 将字典转化为json字符串\n        self.file.write(line)\n        return item  # 如果不return的情况下，另一个权重较低的pipeline就不会获取到该item\n```\n\n**思路：**\n\n- 在`open_spider`中打开一次\n- 在`close_spider`中关闭一次\n- 中间不停地往文件中写入数据\n\n这种方式是可以的，但是会有问题\n\n**问题：**\n\n如果我们的爬虫在爬取网站的时候爬取到第3页的时候程序突然报错了，然后爬虫终止执行，这时候，前2页的数据能够保存在我们的文件中吗？\n\n**不会**\n\n**为什么？**\n\n因为我们的文件打开之后写入数据只有在close之后数据才会写进去，如果我们不close的话，数据是不会写入的。","slug":"深入认识-Scrapy中settings文件","published":1,"updated":"2021-04-30T08:48:12.044Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cko6821if0003v2t86gv3fevy","content":"<h2 id=\"深入认识-Scrapy框架中settings文件\"><a href=\"#深入认识-Scrapy框架中settings文件\" class=\"headerlink\" title=\"深入认识 Scrapy框架中settings文件\"></a>深入认识 Scrapy框架中settings文件</h2><h3 id=\"为什么Scrapy项目中会存在settings文件呢，他到底是什么？\"><a href=\"#为什么Scrapy项目中会存在settings文件呢，他到底是什么？\" class=\"headerlink\" title=\"为什么Scrapy项目中会存在settings文件呢，他到底是什么？\"></a>为什么Scrapy项目中会存在settings文件呢，他到底是什么？</h3><ul>\n<li>配置文件存放一些公共的变量（比如数据库的地址、账号+密码等），方便自己和别人修改</li>\n<li>一般使用全大写字母命名变量名，例如 <code>LOG_LEVEL=&quot;WARN&quot;</code></li>\n</ul>\n<h2 id=\"settings文件详细解读\"><a href=\"#settings文件详细解读\" class=\"headerlink\" title=\"settings文件详细解读\"></a>settings文件详细解读</h2><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">BOT_NAME <span class=\"token operator\">=</span> <span class=\"token string\">'Sun'</span>  <span class=\"token comment\"># 项目名</span>\n\nSPIDER_MODULES <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'Sun.spiders'</span><span class=\"token punctuation\">]</span>  <span class=\"token comment\"># 爬虫的位置</span>\nNEWSPIDER_MODULE <span class=\"token operator\">=</span> <span class=\"token string\">'Sun.spiders'</span>  <span class=\"token comment\"># 如果我们新建一个爬虫，这个新建爬虫的位置</span>\n\nLOG_LEVEL<span class=\"token operator\">=</span><span class=\"token string\">\"WARN\"</span>  <span class=\"token comment\"># log日志显示的最低等级，只有等级大于或等于LOG_LEVEL的才会在终端中显示</span>\n\n<span class=\"token comment\"># Crawl responsibly by identifying yourself (and your website) on the user-agent</span>\nUSER_AGENT <span class=\"token operator\">=</span> <span class=\"token string\">\"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.89 Safari/537.36\"</span>\n<span class=\"token comment\"># 浏览器的身份标识，即是\"User-Agent\"</span>\n\n<span class=\"token comment\"># Obey robots.txt rules</span>\nROBOTSTXT_OBEY <span class=\"token operator\">=</span> <span class=\"token boolean\">True</span>\n<span class=\"token comment\"># 默认情况下为True，表示遵守这个网站的robots协议</span>\n<span class=\"token comment\"># 如果我们设置</span>\n<span class=\"token comment\"># ROBOTSTXT_OBEY = True  # 不遵守robots协议</span>\n<span class=\"token comment\"># 遵守robots协议的体现：最开始请求url地址的时候会先请求对应的robots.txt，如果我们不遵守robots协议，就不会请求</span>\n\n<span class=\"token comment\"># Configure maximum concurrent requests performed by Scrapy (default: 16)</span>\n<span class=\"token comment\">#CONCURRENT_REQUESTS = 32  # 设置最大并发请求</span>\n<span class=\"token comment\"># scrapy中封装了一个twisted异步网络框架，在发送网络请求的时候不会说等一个请求请求成功之后再去发送下一个请求，而是同时去发送很多个请求</span>\n<span class=\"token comment\"># 大概有多少个请求可以同时被发送呢？我们可以在这里自定义数量</span>\n<span class=\"token comment\"># 注意：默认是16个，我们可以根据自己的爬虫项目需要自定义CONCURRENT_REQUESTS的数量</span>\n<span class=\"token comment\"># CONCURRENT_REQUESTS的值越大，爬虫爬取的速度越快</span>\n<span class=\"token comment\"># 但是注意，CONCURRENT_REQUESTS的值越大，越有可能被对方的服务器识别为一个爬虫程序</span>\n<span class=\"token comment\"># 所以说，要适当设置CONCURRENT_REQUESTS的数量</span>\n\n<span class=\"token comment\">#DOWNLOAD_DELAY = 3  # 下载延迟</span>\n<span class=\"token comment\"># 每次请求之前，休眠3秒</span>\n<span class=\"token comment\"># 可以让我们的爬虫请求速度变慢一些</span>\n<span class=\"token comment\"># The download delay setting will honor only one of:</span>\n<span class=\"token comment\"># 就是说我们的DOWNLOAD_DELAY参数可以配合着下面的CONCURRENT_REQUESTS_PER_DOMAIN参数和CONCURRENT_REQUESTS_PER_IP参数来使用</span>\n<span class=\"token comment\">#CONCURRENT_REQUESTS_PER_DOMAIN = 16  # 每一个域名的最大并发请求数目</span>\n<span class=\"token comment\">#CONCURRENT_REQUESTS_PER_IP = 16  # 每一个IP的最大并发请求数目</span>\n\n<span class=\"token comment\"># Disable cookies (enabled by default)</span>\n<span class=\"token comment\">#COOKIES_ENABLED = False  # cookie是否开启</span>\n<span class=\"token comment\"># 默认情况下是开启的，也就是说我们请求完一个url地址之后，去请求下一个url地址的时候，scrapy默认是带上前一次请求对方服务器设置在我们本地的cookie信息</span>\n<span class=\"token comment\"># 很重要</span>\n\n<span class=\"token comment\"># Disable Telnet Console (enabled by default)</span>\n<span class=\"token comment\">#TELNETCONSOLE_ENABLED = False</span>\n<span class=\"token comment\"># 这是我们scrapy框架的一个插件</span>\n<span class=\"token comment\"># 默认是开启的状态</span>\n\n<span class=\"token comment\"># Override the default request headers:</span>\n<span class=\"token comment\">#DEFAULT_REQUEST_HEADERS = &#123;</span>\n<span class=\"token comment\">#   'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8',</span>\n<span class=\"token comment\">#   'Accept-Language': 'en',</span>\n<span class=\"token comment\">#&#125;</span>\n<span class=\"token comment\"># 默认的请求头，默认是关闭的状态</span>\n<span class=\"token comment\"># 开启之后，scrapy就会用这个请求头去发送请求</span>\n<span class=\"token comment\"># 注意：如果我们将\"User-Agent\"参数放在这里，是没有任何效果的，因为专门有一个参数接收\"User-Agent\"对应的值</span>\n\n<span class=\"token comment\"># Enable or disable spider middlewares</span>\n<span class=\"token comment\"># See https://docs.scrapy.org/en/latest/topics/spider-middleware.html</span>\n<span class=\"token comment\"># SPIDER_MIDDLEWARES = &#123;</span>\n<span class=\"token comment\">#    'Sun.middlewares.SunSpiderMiddleware': 543,</span>\n<span class=\"token comment\"># &#125;</span>\n<span class=\"token comment\"># 爬虫中间件</span>\n\n<span class=\"token comment\"># Enable or disable downloader middlewares</span>\n<span class=\"token comment\"># See https://docs.scrapy.org/en/latest/topics/downloader-middleware.html</span>\n<span class=\"token comment\">#DOWNLOADER_MIDDLEWARES = &#123;</span>\n<span class=\"token comment\">#    'Sun.middlewares.SunDownloaderMiddleware': 543,</span>\n<span class=\"token comment\">#&#125;</span>\n<span class=\"token comment\"># 下载中间件</span>\n\n<span class=\"token comment\"># Enable or disable extensions</span>\n<span class=\"token comment\"># See https://docs.scrapy.org/en/latest/topics/extensions.html</span>\n<span class=\"token comment\">#EXTENSIONS = &#123;</span>\n<span class=\"token comment\">#    'scrapy.extensions.telnet.TelnetConsole': None,</span>\n<span class=\"token comment\">#&#125;</span>\n<span class=\"token comment\"># 插件</span>\n\n<span class=\"token comment\"># Configure item pipelines</span>\n<span class=\"token comment\"># See https://docs.scrapy.org/en/latest/topics/item-pipeline.html</span>\nITEM_PIPELINES <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n   <span class=\"token string\">'Sun.pipelines.SunPipeline'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">300</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token comment\"># 管道</span>\n\n<span class=\"token comment\"># 爬虫中间件、下载中间件、插件、管道的使用方法：</span>\n<span class=\"token comment\"># 类似于ITEM_PIPELINES管道的使用方法</span>\n<span class=\"token comment\"># 开启之后，键--位置，值--和引擎之间的距离（注意：值越大，权重越低；值越小，权重越高）</span>\n\n<span class=\"token comment\"># Enable and configure the AutoThrottle extension (disabled by default)</span>\n<span class=\"token comment\"># See https://docs.scrapy.org/en/latest/topics/autothrottle.html</span>\n<span class=\"token comment\">#AUTOTHROTTLE_ENABLED = True</span>\n<span class=\"token comment\"># AUTOTHROTTLE--自动限速</span>\n<span class=\"token comment\"># 比如说我们通过scrapy爬取对方的网站，可能会由于我们的scrapy爬虫速度太快导致把对方的网站“抓崩了”</span>\n<span class=\"token comment\"># “抓崩了”并不是我们想要的结果，因为“抓崩了”之后我们就没有办法再在对方的网站上爬取数据了</span>\n<span class=\"token comment\"># 我们可以根据对方网站的情况让我们的scrapy爬虫速度变慢一些</span>\n<span class=\"token comment\"># 通过调节下面的参数我们可以达到这个自动限速的目的</span>\n<span class=\"token comment\"># 但是往往我们是不需要这样操作的</span>\n<span class=\"token comment\"># The initial download delay</span>\n<span class=\"token comment\">#AUTOTHROTTLE_START_DELAY = 5</span>\n<span class=\"token comment\"># The maximum download delay to be set in case of high latencies</span>\n<span class=\"token comment\">#AUTOTHROTTLE_MAX_DELAY = 60</span>\n<span class=\"token comment\"># The average number of requests Scrapy should be sending in parallel to</span>\n<span class=\"token comment\"># each remote server</span>\n<span class=\"token comment\">#AUTOTHROTTLE_TARGET_CONCURRENCY = 1.0</span>\n<span class=\"token comment\"># Enable showing throttling stats for every response received:</span>\n<span class=\"token comment\">#AUTOTHROTTLE_DEBUG = False</span>\n\n<span class=\"token comment\"># Enable and configure HTTP caching (disabled by default)</span>\n<span class=\"token comment\"># 关于HTTP的缓存，默认是关闭的</span>\n<span class=\"token comment\"># See https://docs.scrapy.org/en/latest/topics/downloader-middleware.html#httpcache-middleware-settings</span>\n<span class=\"token comment\">#HTTPCACHE_ENABLED = True</span>\n<span class=\"token comment\">#HTTPCACHE_EXPIRATION_SECS = 0</span>\n<span class=\"token comment\">#HTTPCACHE_DIR = 'httpcache'</span>\n<span class=\"token comment\">#HTTPCACHE_IGNORE_HTTP_CODES = []</span>\n<span class=\"token comment\">#HTTPCACHE_STORAGE = 'scrapy.extensions.httpcache.FilesystemCacheStorage'</span>\n<span class=\"token comment\"># 如果我们想要开启HTTP缓存就可以将其打开</span>\n<span class=\"token comment\"># 它会将我们的HTTP缓存至设置的位置，实现对应的功能</span>\n<span class=\"token comment\"># 不常用</span>\n\n<span class=\"token comment\"># 每一块内容都是有对应的官方文档的</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<h2 id=\"如何在代码中使用我们在settings-py文件中所做的设置\"><a href=\"#如何在代码中使用我们在settings-py文件中所做的设置\" class=\"headerlink\" title=\"如何在代码中使用我们在settings.py文件中所做的设置\"></a><strong>如何在代码中使用我们在settings.py文件中所做的设置</strong></h2><p>现在，我们在<code>settings.py</code>文件中做了一些设置</p>\n<p><a href=\"https://www.ipicbed.com/image/n4mz\"><img src=\"https://www.ipicbed.com/images/2021/04/30/1.md.png\" alt=\" \"></a></p>\n<p><code>settings.py</code>文件中有一个<code>MONGO_HOST</code>，我们应该如何在spider中使用呢？</p>\n<h3 id=\"第一种方法：导入\"><a href=\"#第一种方法：导入\" class=\"headerlink\" title=\"第一种方法：导入\"></a>第一种方法：导入</h3><p>1.导入</p>\n<p><a href=\"https://www.ipicbed.com/image/n8n8\"><img src=\"https://www.ipicbed.com/images/2021/04/30/2.md.png\" alt=\" \"></a></p>\n<p>2.现在我们就可以使用我们在<code>settings.py</code>文件中定义的这个<code>MONGO_HOST</code>参数了</p>\n<p>3.如果我们想要在其他文件中使用<code>MONGO_HOST</code>这个参数也是一样方法：导入</p>\n<p>以<code> pipelines.py</code> 为例，</p>\n<p><code>from .settings import MONGO_HOST</code></p>\n<p><a href=\"https://www.ipicbed.com/image/ntWC\"><img src=\"https://www.ipicbed.com/images/2021/04/30/3.md.png\" alt=\" \"></a></p>\n<h3 id=\"第二种方法：属性\"><a href=\"#第二种方法：属性\" class=\"headerlink\" title=\"第二种方法：属性\"></a>第二种方法：属性</h3><p>其实我们的spider本身就有一个属性就是settings</p>\n<h4 id=\"1-如何在爬虫中使用settings属性\"><a href=\"#1-如何在爬虫中使用settings属性\" class=\"headerlink\" title=\"1.如何在爬虫中使用settings属性\"></a><strong>1.如何在爬虫中使用settings属性</strong></h4><p><a href=\"https://www.ipicbed.com/image/nYJE\"><img src=\"https://www.ipicbed.com/images/2021/04/30/4.md.png\" alt=\" \"></a></p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token comment\"># -*- coding: utf-8 -*-</span>\n<span class=\"token keyword\">import</span> scrapy\n<span class=\"token keyword\">from</span> <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>items <span class=\"token keyword\">import</span> SunItem\n<span class=\"token comment\"># from ..settings import MONGO_HOST</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">SunSpider</span><span class=\"token punctuation\">(</span>scrapy<span class=\"token punctuation\">.</span>Spider<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    name <span class=\"token operator\">=</span> <span class=\"token string\">'sun'</span>\n    allowed_domains <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'sun0769.com'</span><span class=\"token punctuation\">]</span>\n    start_urls <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'http://wz.sun0769.com/political/index/politicsNewest?id=1&amp;page=1'</span><span class=\"token punctuation\">]</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">parse</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> response<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token comment\"># # spider本身就有一个属性叫做settings</span>\n        <span class=\"token comment\"># self.settings[\"MONGO_HOST\"]  # self.settings是一个字典</span>\n        <span class=\"token comment\"># self.settings.get(\"MONGO_HOST\",\"指定的MONGO_HOST的值\")</span>\n        <span class=\"token triple-quoted-string string\">\"\"\"\n        由于self.settings是一个字典。所以我们可以对其使用\n        self.settings.get(\"MONGO_HOST\")  # 如果MONGO_HOST不存在，返回的就是一个None值\n        # 或者是返回我们在get方法中给MONGO_HOST手动指定的值\n        self.settings.get(\"MONGO_HOST\",\"指定的MONGO_HOST的值\")\n        \"\"\"</span>\n\n\n        <span class=\"token comment\"># 分组</span>\n        li_list<span class=\"token operator\">=</span>response<span class=\"token punctuation\">.</span>xpath<span class=\"token punctuation\">(</span><span class=\"token string\">'//div[@class=\"width-12\"]/ul[@class=\"title-state-ul\"]//li[@class=\"clear\"]'</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">for</span> li <span class=\"token keyword\">in</span> li_list<span class=\"token punctuation\">:</span>\n            item<span class=\"token operator\">=</span>SunItem<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n            item<span class=\"token punctuation\">[</span><span class=\"token string\">\"num\"</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>li<span class=\"token punctuation\">.</span>xpath<span class=\"token punctuation\">(</span><span class=\"token string\">'.//span[@class=\"state1\"]/text()'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>extract_first<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n            item<span class=\"token punctuation\">[</span><span class=\"token string\">\"title\"</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>li<span class=\"token punctuation\">.</span>xpath<span class=\"token punctuation\">(</span><span class=\"token string\">'.//span[@class=\"state3\"]/a[1]/text()'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>extract_first<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n            item<span class=\"token punctuation\">[</span><span class=\"token string\">\"response_time\"</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>li<span class=\"token punctuation\">.</span>xpath<span class=\"token punctuation\">(</span><span class=\"token string\">'.//span[@class=\"state4\"]/text()'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>extract_first<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>strip<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n            item<span class=\"token punctuation\">[</span><span class=\"token string\">\"response_time\"</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>item<span class=\"token punctuation\">[</span><span class=\"token string\">\"response_time\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">\"：\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\n            item<span class=\"token punctuation\">[</span><span class=\"token string\">\"ask_time\"</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>li<span class=\"token punctuation\">.</span>xpath<span class=\"token punctuation\">(</span><span class=\"token string\">'.//span[@class=\"state5 \"]/text()'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>extract_first<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n            item<span class=\"token punctuation\">[</span><span class=\"token string\">\"detail_url\"</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token string\">\"http://wz.sun0769.com\"</span><span class=\"token operator\">+</span>li<span class=\"token punctuation\">.</span>xpath<span class=\"token punctuation\">(</span><span class=\"token string\">'.//span[@class=\"state3\"]/a[1]/@href'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>extract_first<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n            <span class=\"token keyword\">yield</span> scrapy<span class=\"token punctuation\">.</span>Request<span class=\"token punctuation\">(</span>item<span class=\"token punctuation\">[</span><span class=\"token string\">\"detail_url\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n                                 callback<span class=\"token operator\">=</span>self<span class=\"token punctuation\">.</span>parse_detail_url<span class=\"token punctuation\">,</span>\n                                 meta<span class=\"token operator\">=</span><span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"item\"</span><span class=\"token punctuation\">:</span>item<span class=\"token punctuation\">&#125;</span>  <span class=\"token comment\"># 通过meta传递数据</span>\n                                 <span class=\"token punctuation\">)</span>\n\n        <span class=\"token comment\"># 实现翻页操作</span>\n        <span class=\"token keyword\">for</span> page <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            next_url <span class=\"token operator\">=</span> <span class=\"token string-interpolation\"><span class=\"token string\">f\"http://wz.sun0769.com/political/index/politicsNewest?id=1&amp;page=</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>page<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span>\n            <span class=\"token keyword\">yield</span> scrapy<span class=\"token punctuation\">.</span>Request<span class=\"token punctuation\">(</span>next_url<span class=\"token punctuation\">,</span>\n                                 callback<span class=\"token operator\">=</span>self<span class=\"token punctuation\">.</span>parse\n                                 <span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">parse_detail_url</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span>response<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token triple-quoted-string string\">\"\"\"处理详情页的数据\"\"\"</span>\n        item<span class=\"token operator\">=</span>response<span class=\"token punctuation\">.</span>meta<span class=\"token punctuation\">[</span><span class=\"token string\">\"item\"</span><span class=\"token punctuation\">]</span>  <span class=\"token comment\"># 取出数据</span>\n\n        <span class=\"token comment\"># 注意：这样获得的内容是混杂的，包含了很多的占位符等垃圾符号</span>\n        item<span class=\"token punctuation\">[</span><span class=\"token string\">\"content\"</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>response<span class=\"token punctuation\">.</span>xpath<span class=\"token punctuation\">(</span><span class=\"token string\">'//div[@class=\"details-box\"]/pre/text()'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>extract_first<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n        <span class=\"token comment\"># 注意：图片和视频可能不止一个，也可能没有</span>\n        item<span class=\"token punctuation\">[</span><span class=\"token string\">\"img\"</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>response<span class=\"token punctuation\">.</span>xpath<span class=\"token punctuation\">(</span><span class=\"token string\">'//div[@class=\"clear details-img-list Picture-img\"]/img/@src'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>extract<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        item<span class=\"token punctuation\">[</span><span class=\"token string\">\"video\"</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>response<span class=\"token punctuation\">.</span>xpath<span class=\"token punctuation\">(</span><span class=\"token string\">'//div[@class=\"vcp-player\"]/video/@src'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>extract<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n        <span class=\"token keyword\">yield</span> item<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<h4 id=\"2-如何在其他文件中使用settings属性\"><a href=\"#2-如何在其他文件中使用settings属性\" class=\"headerlink\" title=\"2.如何在其他文件中使用settings属性\"></a><strong>2.如何在其他文件中使用settings属性</strong></h4><blockquote>\n<p><em>以pipelines.py为例</em></p>\n<p><a href=\"https://www.ipicbed.com/image/nf3N\"><img src=\"https://www.ipicbed.com/images/2021/04/30/5.md.png\" alt=\" \"></a></p>\n</blockquote>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token comment\"># -*- coding: utf-8 -*-</span>\n\n<span class=\"token comment\"># Define your item pipelines here</span>\n<span class=\"token comment\">#</span>\n<span class=\"token comment\"># Don't forget to add your pipeline to the ITEM_PIPELINES setting</span>\n<span class=\"token comment\"># See: https://docs.scrapy.org/en/latest/topics/item-pipeline.html</span>\n\n<span class=\"token keyword\">import</span> logging\n<span class=\"token comment\"># from .settings import MONGO_HOST</span>\n\nlogger<span class=\"token operator\">=</span>logging<span class=\"token punctuation\">.</span>getLogger<span class=\"token punctuation\">(</span>__name__<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">SunPipeline</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">process_item</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> item<span class=\"token punctuation\">,</span> spider<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token comment\"># spider.settings</span>\n        <span class=\"token comment\"># spider.settings就是self.settings</span>\n        <span class=\"token triple-quoted-string string\">\"\"\"\n        spider.settings[\"MONGO_HOST\"]\n        spider.settings.get(\"MONGO_HOST\",\"指定的MONGO_HOST的值\")\n        \"\"\"</span>\n\n        item<span class=\"token punctuation\">[</span><span class=\"token string\">\"content\"</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>self<span class=\"token punctuation\">.</span>process_content<span class=\"token punctuation\">(</span>item<span class=\"token punctuation\">[</span><span class=\"token string\">\"content\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n        <span class=\"token comment\"># logger.warning(item)</span>\n        <span class=\"token keyword\">return</span> item\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">process_content</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span>content<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token triple-quoted-string string\">\"\"\"处理item中的字符串\"\"\"</span>\n        new_content<span class=\"token operator\">=</span>content<span class=\"token punctuation\">.</span>replace<span class=\"token punctuation\">(</span><span class=\"token string\">\"\\r\\n\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>replace<span class=\"token punctuation\">(</span><span class=\"token string\">\"\\xa0\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">return</span> new_content<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><strong>scrapy深入之pipeline的使用</strong></p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">JsonWriterPipeline</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">object</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">open</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span>spider<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token triple-quoted-string string\">\"\"\"在爬虫开启的时候执行，仅执行一次\"\"\"</span>\n        self<span class=\"token punctuation\">.</span><span class=\"token builtin\">file</span><span class=\"token operator\">=</span><span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span>spider<span class=\"token punctuation\">.</span>setting<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">\"SAVE_FILE\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"./temp.json\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"w\"</span><span class=\"token punctuation\">)</span>\n    \n    <span class=\"token keyword\">def</span> <span class=\"token function\">close</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span>spider<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token triple-quoted-string string\">\"\"\"在爬虫关闭的时候执行，仅执行一次\"\"\"</span>\n        self<span class=\"token punctuation\">.</span><span class=\"token builtin\">file</span><span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    \n    <span class=\"token keyword\">def</span> <span class=\"token function\">process_item</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span>item<span class=\"token punctuation\">,</span>spider<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        line<span class=\"token operator\">=</span>json<span class=\"token punctuation\">.</span>dumps<span class=\"token punctuation\">(</span><span class=\"token builtin\">dict</span><span class=\"token punctuation\">(</span>item<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token string\">\"\\n\"</span>  <span class=\"token comment\"># 将字典转化为json字符串</span>\n        self<span class=\"token punctuation\">.</span><span class=\"token builtin\">file</span><span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span>line<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">return</span> item  <span class=\"token comment\"># 如果不return的情况下，另一个权重较低的pipeline就不会获取到该item</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<ul>\n<li>open_spider`在爬虫开启的时候执行一次</li>\n<li><code>close_spider</code>在爬虫关闭的时候执行一次</li>\n</ul>\n<p><strong>好处1：数据库的处理：</strong></p>\n<ul>\n<li>建立连接的过程就可以放在<code>open_spider</code>中</li>\n<li>断开连接的过程就放在<code>close_spider</code>中</li>\n</ul>\n<p><strong>好处2：在爬虫开始时为爬虫添加一些属性</strong></p>\n<ol>\n<li><p>在爬虫开始的时候为爬虫添加了一个新的属性<code>hello</code>，值为<code>&quot;world&quot;</code></p>\n<p>位置：<code>pipelines.SunPipeline</code></p>\n</li>\n</ol>\n<p><a href=\"https://www.ipicbed.com/image/nQfu\"><img src=\"https://www.ipicbed.com/images/2021/04/30/6.md.png\" alt=\" \"></a></p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">open_spider</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span>spider<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        spider<span class=\"token punctuation\">.</span>hello<span class=\"token operator\">=</span><span class=\"token string\">\"world\"</span>  <span class=\"token comment\"># 为spider创建一个新的属性叫做\"hello\"，值为\"world\"</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<ol start=\"2\">\n<li>在爬虫中调用这个属性</li>\n</ol>\n<p><a href=\"https://www.ipicbed.com/image/npoT\"><img src=\"https://www.ipicbed.com/images/2021/04/30/7.md.png\" alt=\" \"></a></p>\n<p>注意：现在我们至是想要看见<code>scrapy</code>在爬虫启动的时候是否执行了open_spider这个方法，不需要爬取网站的信息，所以我们修改爬取的范围，即是 <code>allowed_domains</code></p>\n<ol start=\"2\">\n<li>启动我们的爬虫程序</li>\n</ol>\n<p><code>scrapy crawl sun</code></p>\n<p><a href=\"https://www.ipicbed.com/image/nq1b\"><img src=\"https://www.ipicbed.com/images/2021/04/30/8.md.png\" alt=\" \"></a></p>\n<p>发现确实是输出了<code>hello</code>属性对应的值，说明我们的爬虫在开始的时候的确是调用了open_spider这个函数</p>\n<h2 id=\"pipeline中对数据库的处理\"><a href=\"#pipeline中对数据库的处理\" class=\"headerlink\" title=\"pipeline中对数据库的处理\"></a><strong>pipeline中对数据库的处理</strong></h2><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token comment\"># 对数据库进行处理</span>\n<span class=\"token keyword\">from</span> pymongo <span class=\"token keyword\">import</span> MongoClient\n\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">SunPipeline</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">open_spider</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span>spider<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        client<span class=\"token operator\">=</span>MongoClient<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 实例化一下client</span>\n        self<span class=\"token punctuation\">.</span>collection<span class=\"token operator\">=</span>client<span class=\"token punctuation\">[</span><span class=\"token string\">\"test\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"test\"</span><span class=\"token punctuation\">]</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">process_item</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> item<span class=\"token punctuation\">,</span> spider<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token comment\"># 调用self.collection，直接insert</span>\n        self<span class=\"token punctuation\">.</span>collection<span class=\"token punctuation\">.</span>insert<span class=\"token punctuation\">(</span><span class=\"token builtin\">dict</span><span class=\"token punctuation\">(</span>item<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><strong>当我们需要把文件写在本地的时候</strong></p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">JsonWriterPipeline</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">object</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">open</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span>spider<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token triple-quoted-string string\">\"\"\"在爬虫开启的时候执行，仅执行一次\"\"\"</span>\n        self<span class=\"token punctuation\">.</span><span class=\"token builtin\">file</span><span class=\"token operator\">=</span><span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span>spider<span class=\"token punctuation\">.</span>setting<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">\"SAVE_FILE\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"./temp.json\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"w\"</span><span class=\"token punctuation\">)</span>\n    \n    <span class=\"token keyword\">def</span> <span class=\"token function\">close</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span>spider<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token triple-quoted-string string\">\"\"\"在爬虫关闭的时候执行，仅执行一次\"\"\"</span>\n        self<span class=\"token punctuation\">.</span><span class=\"token builtin\">file</span><span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    \n    <span class=\"token keyword\">def</span> <span class=\"token function\">process_item</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span>item<span class=\"token punctuation\">,</span>spider<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        line<span class=\"token operator\">=</span>json<span class=\"token punctuation\">.</span>dumps<span class=\"token punctuation\">(</span><span class=\"token builtin\">dict</span><span class=\"token punctuation\">(</span>item<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token string\">\"\\n\"</span>  <span class=\"token comment\"># 将字典转化为json字符串</span>\n        self<span class=\"token punctuation\">.</span><span class=\"token builtin\">file</span><span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span>line<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">return</span> item  <span class=\"token comment\"># 如果不return的情况下，另一个权重较低的pipeline就不会获取到该item</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><strong>思路：</strong></p>\n<ul>\n<li>在<code>open_spider</code>中打开一次</li>\n<li>在<code>close_spider</code>中关闭一次</li>\n<li>中间不停地往文件中写入数据</li>\n</ul>\n<p>这种方式是可以的，但是会有问题</p>\n<p><strong>问题：</strong></p>\n<p>如果我们的爬虫在爬取网站的时候爬取到第3页的时候程序突然报错了，然后爬虫终止执行，这时候，前2页的数据能够保存在我们的文件中吗？</p>\n<p><strong>不会</strong></p>\n<p><strong>为什么？</strong></p>\n<p>因为我们的文件打开之后写入数据只有在close之后数据才会写进去，如果我们不close的话，数据是不会写入的。</p>\n","site":{"data":{"friends":[{"avatar":"http://image.luokangyuan.com/1_qq_27922023.jpg","name":"码酱","introduction":"我不是大佬，只是在追寻大佬的脚步","url":"http://luokangyuan.com/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/4027734.jpeg","name":"闪烁之狐","introduction":"编程界大佬，技术牛，人还特别好，不懂的都可以请教大佬","url":"https://blinkfox.github.io/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/avatar.jpg","name":"ja_rome","introduction":"平凡的脚步也可以走出伟大的行程","url":"https://me.csdn.net/jlh912008548","title":"前去学习"},{"avatar":"https://image.3001.net/images/20200920/16006077095413.png","name":"国光","introduction":"逆水行舟，不进则退。","url":"https://www.sqlsec.com/","title":"前去学习"}]}},"excerpt":"","more":"<h2 id=\"深入认识-Scrapy框架中settings文件\"><a href=\"#深入认识-Scrapy框架中settings文件\" class=\"headerlink\" title=\"深入认识 Scrapy框架中settings文件\"></a>深入认识 Scrapy框架中settings文件</h2><h3 id=\"为什么Scrapy项目中会存在settings文件呢，他到底是什么？\"><a href=\"#为什么Scrapy项目中会存在settings文件呢，他到底是什么？\" class=\"headerlink\" title=\"为什么Scrapy项目中会存在settings文件呢，他到底是什么？\"></a>为什么Scrapy项目中会存在settings文件呢，他到底是什么？</h3><ul>\n<li>配置文件存放一些公共的变量（比如数据库的地址、账号+密码等），方便自己和别人修改</li>\n<li>一般使用全大写字母命名变量名，例如 <code>LOG_LEVEL=&quot;WARN&quot;</code></li>\n</ul>\n<h2 id=\"settings文件详细解读\"><a href=\"#settings文件详细解读\" class=\"headerlink\" title=\"settings文件详细解读\"></a>settings文件详细解读</h2><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">BOT_NAME <span class=\"token operator\">=</span> <span class=\"token string\">'Sun'</span>  <span class=\"token comment\"># 项目名</span>\n\nSPIDER_MODULES <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'Sun.spiders'</span><span class=\"token punctuation\">]</span>  <span class=\"token comment\"># 爬虫的位置</span>\nNEWSPIDER_MODULE <span class=\"token operator\">=</span> <span class=\"token string\">'Sun.spiders'</span>  <span class=\"token comment\"># 如果我们新建一个爬虫，这个新建爬虫的位置</span>\n\nLOG_LEVEL<span class=\"token operator\">=</span><span class=\"token string\">\"WARN\"</span>  <span class=\"token comment\"># log日志显示的最低等级，只有等级大于或等于LOG_LEVEL的才会在终端中显示</span>\n\n<span class=\"token comment\"># Crawl responsibly by identifying yourself (and your website) on the user-agent</span>\nUSER_AGENT <span class=\"token operator\">=</span> <span class=\"token string\">\"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.89 Safari/537.36\"</span>\n<span class=\"token comment\"># 浏览器的身份标识，即是\"User-Agent\"</span>\n\n<span class=\"token comment\"># Obey robots.txt rules</span>\nROBOTSTXT_OBEY <span class=\"token operator\">=</span> <span class=\"token boolean\">True</span>\n<span class=\"token comment\"># 默认情况下为True，表示遵守这个网站的robots协议</span>\n<span class=\"token comment\"># 如果我们设置</span>\n<span class=\"token comment\"># ROBOTSTXT_OBEY = True  # 不遵守robots协议</span>\n<span class=\"token comment\"># 遵守robots协议的体现：最开始请求url地址的时候会先请求对应的robots.txt，如果我们不遵守robots协议，就不会请求</span>\n\n<span class=\"token comment\"># Configure maximum concurrent requests performed by Scrapy (default: 16)</span>\n<span class=\"token comment\">#CONCURRENT_REQUESTS = 32  # 设置最大并发请求</span>\n<span class=\"token comment\"># scrapy中封装了一个twisted异步网络框架，在发送网络请求的时候不会说等一个请求请求成功之后再去发送下一个请求，而是同时去发送很多个请求</span>\n<span class=\"token comment\"># 大概有多少个请求可以同时被发送呢？我们可以在这里自定义数量</span>\n<span class=\"token comment\"># 注意：默认是16个，我们可以根据自己的爬虫项目需要自定义CONCURRENT_REQUESTS的数量</span>\n<span class=\"token comment\"># CONCURRENT_REQUESTS的值越大，爬虫爬取的速度越快</span>\n<span class=\"token comment\"># 但是注意，CONCURRENT_REQUESTS的值越大，越有可能被对方的服务器识别为一个爬虫程序</span>\n<span class=\"token comment\"># 所以说，要适当设置CONCURRENT_REQUESTS的数量</span>\n\n<span class=\"token comment\">#DOWNLOAD_DELAY = 3  # 下载延迟</span>\n<span class=\"token comment\"># 每次请求之前，休眠3秒</span>\n<span class=\"token comment\"># 可以让我们的爬虫请求速度变慢一些</span>\n<span class=\"token comment\"># The download delay setting will honor only one of:</span>\n<span class=\"token comment\"># 就是说我们的DOWNLOAD_DELAY参数可以配合着下面的CONCURRENT_REQUESTS_PER_DOMAIN参数和CONCURRENT_REQUESTS_PER_IP参数来使用</span>\n<span class=\"token comment\">#CONCURRENT_REQUESTS_PER_DOMAIN = 16  # 每一个域名的最大并发请求数目</span>\n<span class=\"token comment\">#CONCURRENT_REQUESTS_PER_IP = 16  # 每一个IP的最大并发请求数目</span>\n\n<span class=\"token comment\"># Disable cookies (enabled by default)</span>\n<span class=\"token comment\">#COOKIES_ENABLED = False  # cookie是否开启</span>\n<span class=\"token comment\"># 默认情况下是开启的，也就是说我们请求完一个url地址之后，去请求下一个url地址的时候，scrapy默认是带上前一次请求对方服务器设置在我们本地的cookie信息</span>\n<span class=\"token comment\"># 很重要</span>\n\n<span class=\"token comment\"># Disable Telnet Console (enabled by default)</span>\n<span class=\"token comment\">#TELNETCONSOLE_ENABLED = False</span>\n<span class=\"token comment\"># 这是我们scrapy框架的一个插件</span>\n<span class=\"token comment\"># 默认是开启的状态</span>\n\n<span class=\"token comment\"># Override the default request headers:</span>\n<span class=\"token comment\">#DEFAULT_REQUEST_HEADERS = &#123;</span>\n<span class=\"token comment\">#   'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8',</span>\n<span class=\"token comment\">#   'Accept-Language': 'en',</span>\n<span class=\"token comment\">#&#125;</span>\n<span class=\"token comment\"># 默认的请求头，默认是关闭的状态</span>\n<span class=\"token comment\"># 开启之后，scrapy就会用这个请求头去发送请求</span>\n<span class=\"token comment\"># 注意：如果我们将\"User-Agent\"参数放在这里，是没有任何效果的，因为专门有一个参数接收\"User-Agent\"对应的值</span>\n\n<span class=\"token comment\"># Enable or disable spider middlewares</span>\n<span class=\"token comment\"># See https://docs.scrapy.org/en/latest/topics/spider-middleware.html</span>\n<span class=\"token comment\"># SPIDER_MIDDLEWARES = &#123;</span>\n<span class=\"token comment\">#    'Sun.middlewares.SunSpiderMiddleware': 543,</span>\n<span class=\"token comment\"># &#125;</span>\n<span class=\"token comment\"># 爬虫中间件</span>\n\n<span class=\"token comment\"># Enable or disable downloader middlewares</span>\n<span class=\"token comment\"># See https://docs.scrapy.org/en/latest/topics/downloader-middleware.html</span>\n<span class=\"token comment\">#DOWNLOADER_MIDDLEWARES = &#123;</span>\n<span class=\"token comment\">#    'Sun.middlewares.SunDownloaderMiddleware': 543,</span>\n<span class=\"token comment\">#&#125;</span>\n<span class=\"token comment\"># 下载中间件</span>\n\n<span class=\"token comment\"># Enable or disable extensions</span>\n<span class=\"token comment\"># See https://docs.scrapy.org/en/latest/topics/extensions.html</span>\n<span class=\"token comment\">#EXTENSIONS = &#123;</span>\n<span class=\"token comment\">#    'scrapy.extensions.telnet.TelnetConsole': None,</span>\n<span class=\"token comment\">#&#125;</span>\n<span class=\"token comment\"># 插件</span>\n\n<span class=\"token comment\"># Configure item pipelines</span>\n<span class=\"token comment\"># See https://docs.scrapy.org/en/latest/topics/item-pipeline.html</span>\nITEM_PIPELINES <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n   <span class=\"token string\">'Sun.pipelines.SunPipeline'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">300</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token comment\"># 管道</span>\n\n<span class=\"token comment\"># 爬虫中间件、下载中间件、插件、管道的使用方法：</span>\n<span class=\"token comment\"># 类似于ITEM_PIPELINES管道的使用方法</span>\n<span class=\"token comment\"># 开启之后，键--位置，值--和引擎之间的距离（注意：值越大，权重越低；值越小，权重越高）</span>\n\n<span class=\"token comment\"># Enable and configure the AutoThrottle extension (disabled by default)</span>\n<span class=\"token comment\"># See https://docs.scrapy.org/en/latest/topics/autothrottle.html</span>\n<span class=\"token comment\">#AUTOTHROTTLE_ENABLED = True</span>\n<span class=\"token comment\"># AUTOTHROTTLE--自动限速</span>\n<span class=\"token comment\"># 比如说我们通过scrapy爬取对方的网站，可能会由于我们的scrapy爬虫速度太快导致把对方的网站“抓崩了”</span>\n<span class=\"token comment\"># “抓崩了”并不是我们想要的结果，因为“抓崩了”之后我们就没有办法再在对方的网站上爬取数据了</span>\n<span class=\"token comment\"># 我们可以根据对方网站的情况让我们的scrapy爬虫速度变慢一些</span>\n<span class=\"token comment\"># 通过调节下面的参数我们可以达到这个自动限速的目的</span>\n<span class=\"token comment\"># 但是往往我们是不需要这样操作的</span>\n<span class=\"token comment\"># The initial download delay</span>\n<span class=\"token comment\">#AUTOTHROTTLE_START_DELAY = 5</span>\n<span class=\"token comment\"># The maximum download delay to be set in case of high latencies</span>\n<span class=\"token comment\">#AUTOTHROTTLE_MAX_DELAY = 60</span>\n<span class=\"token comment\"># The average number of requests Scrapy should be sending in parallel to</span>\n<span class=\"token comment\"># each remote server</span>\n<span class=\"token comment\">#AUTOTHROTTLE_TARGET_CONCURRENCY = 1.0</span>\n<span class=\"token comment\"># Enable showing throttling stats for every response received:</span>\n<span class=\"token comment\">#AUTOTHROTTLE_DEBUG = False</span>\n\n<span class=\"token comment\"># Enable and configure HTTP caching (disabled by default)</span>\n<span class=\"token comment\"># 关于HTTP的缓存，默认是关闭的</span>\n<span class=\"token comment\"># See https://docs.scrapy.org/en/latest/topics/downloader-middleware.html#httpcache-middleware-settings</span>\n<span class=\"token comment\">#HTTPCACHE_ENABLED = True</span>\n<span class=\"token comment\">#HTTPCACHE_EXPIRATION_SECS = 0</span>\n<span class=\"token comment\">#HTTPCACHE_DIR = 'httpcache'</span>\n<span class=\"token comment\">#HTTPCACHE_IGNORE_HTTP_CODES = []</span>\n<span class=\"token comment\">#HTTPCACHE_STORAGE = 'scrapy.extensions.httpcache.FilesystemCacheStorage'</span>\n<span class=\"token comment\"># 如果我们想要开启HTTP缓存就可以将其打开</span>\n<span class=\"token comment\"># 它会将我们的HTTP缓存至设置的位置，实现对应的功能</span>\n<span class=\"token comment\"># 不常用</span>\n\n<span class=\"token comment\"># 每一块内容都是有对应的官方文档的</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<h2 id=\"如何在代码中使用我们在settings-py文件中所做的设置\"><a href=\"#如何在代码中使用我们在settings-py文件中所做的设置\" class=\"headerlink\" title=\"如何在代码中使用我们在settings.py文件中所做的设置\"></a><strong>如何在代码中使用我们在settings.py文件中所做的设置</strong></h2><p>现在，我们在<code>settings.py</code>文件中做了一些设置</p>\n<p><a href=\"https://www.ipicbed.com/image/n4mz\"><img src=\"https://www.ipicbed.com/images/2021/04/30/1.md.png\" alt=\" \"></a></p>\n<p><code>settings.py</code>文件中有一个<code>MONGO_HOST</code>，我们应该如何在spider中使用呢？</p>\n<h3 id=\"第一种方法：导入\"><a href=\"#第一种方法：导入\" class=\"headerlink\" title=\"第一种方法：导入\"></a>第一种方法：导入</h3><p>1.导入</p>\n<p><a href=\"https://www.ipicbed.com/image/n8n8\"><img src=\"https://www.ipicbed.com/images/2021/04/30/2.md.png\" alt=\" \"></a></p>\n<p>2.现在我们就可以使用我们在<code>settings.py</code>文件中定义的这个<code>MONGO_HOST</code>参数了</p>\n<p>3.如果我们想要在其他文件中使用<code>MONGO_HOST</code>这个参数也是一样方法：导入</p>\n<p>以<code> pipelines.py</code> 为例，</p>\n<p><code>from .settings import MONGO_HOST</code></p>\n<p><a href=\"https://www.ipicbed.com/image/ntWC\"><img src=\"https://www.ipicbed.com/images/2021/04/30/3.md.png\" alt=\" \"></a></p>\n<h3 id=\"第二种方法：属性\"><a href=\"#第二种方法：属性\" class=\"headerlink\" title=\"第二种方法：属性\"></a>第二种方法：属性</h3><p>其实我们的spider本身就有一个属性就是settings</p>\n<h4 id=\"1-如何在爬虫中使用settings属性\"><a href=\"#1-如何在爬虫中使用settings属性\" class=\"headerlink\" title=\"1.如何在爬虫中使用settings属性\"></a><strong>1.如何在爬虫中使用settings属性</strong></h4><p><a href=\"https://www.ipicbed.com/image/nYJE\"><img src=\"https://www.ipicbed.com/images/2021/04/30/4.md.png\" alt=\" \"></a></p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token comment\"># -*- coding: utf-8 -*-</span>\n<span class=\"token keyword\">import</span> scrapy\n<span class=\"token keyword\">from</span> <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>items <span class=\"token keyword\">import</span> SunItem\n<span class=\"token comment\"># from ..settings import MONGO_HOST</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">SunSpider</span><span class=\"token punctuation\">(</span>scrapy<span class=\"token punctuation\">.</span>Spider<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    name <span class=\"token operator\">=</span> <span class=\"token string\">'sun'</span>\n    allowed_domains <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'sun0769.com'</span><span class=\"token punctuation\">]</span>\n    start_urls <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'http://wz.sun0769.com/political/index/politicsNewest?id=1&amp;page=1'</span><span class=\"token punctuation\">]</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">parse</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> response<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token comment\"># # spider本身就有一个属性叫做settings</span>\n        <span class=\"token comment\"># self.settings[\"MONGO_HOST\"]  # self.settings是一个字典</span>\n        <span class=\"token comment\"># self.settings.get(\"MONGO_HOST\",\"指定的MONGO_HOST的值\")</span>\n        <span class=\"token triple-quoted-string string\">\"\"\"\n        由于self.settings是一个字典。所以我们可以对其使用\n        self.settings.get(\"MONGO_HOST\")  # 如果MONGO_HOST不存在，返回的就是一个None值\n        # 或者是返回我们在get方法中给MONGO_HOST手动指定的值\n        self.settings.get(\"MONGO_HOST\",\"指定的MONGO_HOST的值\")\n        \"\"\"</span>\n\n\n        <span class=\"token comment\"># 分组</span>\n        li_list<span class=\"token operator\">=</span>response<span class=\"token punctuation\">.</span>xpath<span class=\"token punctuation\">(</span><span class=\"token string\">'//div[@class=\"width-12\"]/ul[@class=\"title-state-ul\"]//li[@class=\"clear\"]'</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">for</span> li <span class=\"token keyword\">in</span> li_list<span class=\"token punctuation\">:</span>\n            item<span class=\"token operator\">=</span>SunItem<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n            item<span class=\"token punctuation\">[</span><span class=\"token string\">\"num\"</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>li<span class=\"token punctuation\">.</span>xpath<span class=\"token punctuation\">(</span><span class=\"token string\">'.//span[@class=\"state1\"]/text()'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>extract_first<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n            item<span class=\"token punctuation\">[</span><span class=\"token string\">\"title\"</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>li<span class=\"token punctuation\">.</span>xpath<span class=\"token punctuation\">(</span><span class=\"token string\">'.//span[@class=\"state3\"]/a[1]/text()'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>extract_first<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n            item<span class=\"token punctuation\">[</span><span class=\"token string\">\"response_time\"</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>li<span class=\"token punctuation\">.</span>xpath<span class=\"token punctuation\">(</span><span class=\"token string\">'.//span[@class=\"state4\"]/text()'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>extract_first<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>strip<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n            item<span class=\"token punctuation\">[</span><span class=\"token string\">\"response_time\"</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>item<span class=\"token punctuation\">[</span><span class=\"token string\">\"response_time\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">\"：\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\n            item<span class=\"token punctuation\">[</span><span class=\"token string\">\"ask_time\"</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>li<span class=\"token punctuation\">.</span>xpath<span class=\"token punctuation\">(</span><span class=\"token string\">'.//span[@class=\"state5 \"]/text()'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>extract_first<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n            item<span class=\"token punctuation\">[</span><span class=\"token string\">\"detail_url\"</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token string\">\"http://wz.sun0769.com\"</span><span class=\"token operator\">+</span>li<span class=\"token punctuation\">.</span>xpath<span class=\"token punctuation\">(</span><span class=\"token string\">'.//span[@class=\"state3\"]/a[1]/@href'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>extract_first<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n            <span class=\"token keyword\">yield</span> scrapy<span class=\"token punctuation\">.</span>Request<span class=\"token punctuation\">(</span>item<span class=\"token punctuation\">[</span><span class=\"token string\">\"detail_url\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n                                 callback<span class=\"token operator\">=</span>self<span class=\"token punctuation\">.</span>parse_detail_url<span class=\"token punctuation\">,</span>\n                                 meta<span class=\"token operator\">=</span><span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"item\"</span><span class=\"token punctuation\">:</span>item<span class=\"token punctuation\">&#125;</span>  <span class=\"token comment\"># 通过meta传递数据</span>\n                                 <span class=\"token punctuation\">)</span>\n\n        <span class=\"token comment\"># 实现翻页操作</span>\n        <span class=\"token keyword\">for</span> page <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            next_url <span class=\"token operator\">=</span> <span class=\"token string-interpolation\"><span class=\"token string\">f\"http://wz.sun0769.com/political/index/politicsNewest?id=1&amp;page=</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>page<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span>\n            <span class=\"token keyword\">yield</span> scrapy<span class=\"token punctuation\">.</span>Request<span class=\"token punctuation\">(</span>next_url<span class=\"token punctuation\">,</span>\n                                 callback<span class=\"token operator\">=</span>self<span class=\"token punctuation\">.</span>parse\n                                 <span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">parse_detail_url</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span>response<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token triple-quoted-string string\">\"\"\"处理详情页的数据\"\"\"</span>\n        item<span class=\"token operator\">=</span>response<span class=\"token punctuation\">.</span>meta<span class=\"token punctuation\">[</span><span class=\"token string\">\"item\"</span><span class=\"token punctuation\">]</span>  <span class=\"token comment\"># 取出数据</span>\n\n        <span class=\"token comment\"># 注意：这样获得的内容是混杂的，包含了很多的占位符等垃圾符号</span>\n        item<span class=\"token punctuation\">[</span><span class=\"token string\">\"content\"</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>response<span class=\"token punctuation\">.</span>xpath<span class=\"token punctuation\">(</span><span class=\"token string\">'//div[@class=\"details-box\"]/pre/text()'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>extract_first<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n        <span class=\"token comment\"># 注意：图片和视频可能不止一个，也可能没有</span>\n        item<span class=\"token punctuation\">[</span><span class=\"token string\">\"img\"</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>response<span class=\"token punctuation\">.</span>xpath<span class=\"token punctuation\">(</span><span class=\"token string\">'//div[@class=\"clear details-img-list Picture-img\"]/img/@src'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>extract<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        item<span class=\"token punctuation\">[</span><span class=\"token string\">\"video\"</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>response<span class=\"token punctuation\">.</span>xpath<span class=\"token punctuation\">(</span><span class=\"token string\">'//div[@class=\"vcp-player\"]/video/@src'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>extract<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n        <span class=\"token keyword\">yield</span> item<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<h4 id=\"2-如何在其他文件中使用settings属性\"><a href=\"#2-如何在其他文件中使用settings属性\" class=\"headerlink\" title=\"2.如何在其他文件中使用settings属性\"></a><strong>2.如何在其他文件中使用settings属性</strong></h4><blockquote>\n<p><em>以pipelines.py为例</em></p>\n<p><a href=\"https://www.ipicbed.com/image/nf3N\"><img src=\"https://www.ipicbed.com/images/2021/04/30/5.md.png\" alt=\" \"></a></p>\n</blockquote>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token comment\"># -*- coding: utf-8 -*-</span>\n\n<span class=\"token comment\"># Define your item pipelines here</span>\n<span class=\"token comment\">#</span>\n<span class=\"token comment\"># Don't forget to add your pipeline to the ITEM_PIPELINES setting</span>\n<span class=\"token comment\"># See: https://docs.scrapy.org/en/latest/topics/item-pipeline.html</span>\n\n<span class=\"token keyword\">import</span> logging\n<span class=\"token comment\"># from .settings import MONGO_HOST</span>\n\nlogger<span class=\"token operator\">=</span>logging<span class=\"token punctuation\">.</span>getLogger<span class=\"token punctuation\">(</span>__name__<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">SunPipeline</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">process_item</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> item<span class=\"token punctuation\">,</span> spider<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token comment\"># spider.settings</span>\n        <span class=\"token comment\"># spider.settings就是self.settings</span>\n        <span class=\"token triple-quoted-string string\">\"\"\"\n        spider.settings[\"MONGO_HOST\"]\n        spider.settings.get(\"MONGO_HOST\",\"指定的MONGO_HOST的值\")\n        \"\"\"</span>\n\n        item<span class=\"token punctuation\">[</span><span class=\"token string\">\"content\"</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>self<span class=\"token punctuation\">.</span>process_content<span class=\"token punctuation\">(</span>item<span class=\"token punctuation\">[</span><span class=\"token string\">\"content\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n        <span class=\"token comment\"># logger.warning(item)</span>\n        <span class=\"token keyword\">return</span> item\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">process_content</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span>content<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token triple-quoted-string string\">\"\"\"处理item中的字符串\"\"\"</span>\n        new_content<span class=\"token operator\">=</span>content<span class=\"token punctuation\">.</span>replace<span class=\"token punctuation\">(</span><span class=\"token string\">\"\\r\\n\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>replace<span class=\"token punctuation\">(</span><span class=\"token string\">\"\\xa0\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">return</span> new_content<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><strong>scrapy深入之pipeline的使用</strong></p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">JsonWriterPipeline</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">object</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">open</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span>spider<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token triple-quoted-string string\">\"\"\"在爬虫开启的时候执行，仅执行一次\"\"\"</span>\n        self<span class=\"token punctuation\">.</span><span class=\"token builtin\">file</span><span class=\"token operator\">=</span><span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span>spider<span class=\"token punctuation\">.</span>setting<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">\"SAVE_FILE\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"./temp.json\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"w\"</span><span class=\"token punctuation\">)</span>\n    \n    <span class=\"token keyword\">def</span> <span class=\"token function\">close</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span>spider<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token triple-quoted-string string\">\"\"\"在爬虫关闭的时候执行，仅执行一次\"\"\"</span>\n        self<span class=\"token punctuation\">.</span><span class=\"token builtin\">file</span><span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    \n    <span class=\"token keyword\">def</span> <span class=\"token function\">process_item</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span>item<span class=\"token punctuation\">,</span>spider<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        line<span class=\"token operator\">=</span>json<span class=\"token punctuation\">.</span>dumps<span class=\"token punctuation\">(</span><span class=\"token builtin\">dict</span><span class=\"token punctuation\">(</span>item<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token string\">\"\\n\"</span>  <span class=\"token comment\"># 将字典转化为json字符串</span>\n        self<span class=\"token punctuation\">.</span><span class=\"token builtin\">file</span><span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span>line<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">return</span> item  <span class=\"token comment\"># 如果不return的情况下，另一个权重较低的pipeline就不会获取到该item</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<ul>\n<li>open_spider`在爬虫开启的时候执行一次</li>\n<li><code>close_spider</code>在爬虫关闭的时候执行一次</li>\n</ul>\n<p><strong>好处1：数据库的处理：</strong></p>\n<ul>\n<li>建立连接的过程就可以放在<code>open_spider</code>中</li>\n<li>断开连接的过程就放在<code>close_spider</code>中</li>\n</ul>\n<p><strong>好处2：在爬虫开始时为爬虫添加一些属性</strong></p>\n<ol>\n<li><p>在爬虫开始的时候为爬虫添加了一个新的属性<code>hello</code>，值为<code>&quot;world&quot;</code></p>\n<p>位置：<code>pipelines.SunPipeline</code></p>\n</li>\n</ol>\n<p><a href=\"https://www.ipicbed.com/image/nQfu\"><img src=\"https://www.ipicbed.com/images/2021/04/30/6.md.png\" alt=\" \"></a></p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">open_spider</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span>spider<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        spider<span class=\"token punctuation\">.</span>hello<span class=\"token operator\">=</span><span class=\"token string\">\"world\"</span>  <span class=\"token comment\"># 为spider创建一个新的属性叫做\"hello\"，值为\"world\"</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<ol start=\"2\">\n<li>在爬虫中调用这个属性</li>\n</ol>\n<p><a href=\"https://www.ipicbed.com/image/npoT\"><img src=\"https://www.ipicbed.com/images/2021/04/30/7.md.png\" alt=\" \"></a></p>\n<p>注意：现在我们至是想要看见<code>scrapy</code>在爬虫启动的时候是否执行了open_spider这个方法，不需要爬取网站的信息，所以我们修改爬取的范围，即是 <code>allowed_domains</code></p>\n<ol start=\"2\">\n<li>启动我们的爬虫程序</li>\n</ol>\n<p><code>scrapy crawl sun</code></p>\n<p><a href=\"https://www.ipicbed.com/image/nq1b\"><img src=\"https://www.ipicbed.com/images/2021/04/30/8.md.png\" alt=\" \"></a></p>\n<p>发现确实是输出了<code>hello</code>属性对应的值，说明我们的爬虫在开始的时候的确是调用了open_spider这个函数</p>\n<h2 id=\"pipeline中对数据库的处理\"><a href=\"#pipeline中对数据库的处理\" class=\"headerlink\" title=\"pipeline中对数据库的处理\"></a><strong>pipeline中对数据库的处理</strong></h2><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token comment\"># 对数据库进行处理</span>\n<span class=\"token keyword\">from</span> pymongo <span class=\"token keyword\">import</span> MongoClient\n\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">SunPipeline</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">open_spider</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span>spider<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        client<span class=\"token operator\">=</span>MongoClient<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 实例化一下client</span>\n        self<span class=\"token punctuation\">.</span>collection<span class=\"token operator\">=</span>client<span class=\"token punctuation\">[</span><span class=\"token string\">\"test\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"test\"</span><span class=\"token punctuation\">]</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">process_item</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> item<span class=\"token punctuation\">,</span> spider<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token comment\"># 调用self.collection，直接insert</span>\n        self<span class=\"token punctuation\">.</span>collection<span class=\"token punctuation\">.</span>insert<span class=\"token punctuation\">(</span><span class=\"token builtin\">dict</span><span class=\"token punctuation\">(</span>item<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><strong>当我们需要把文件写在本地的时候</strong></p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">JsonWriterPipeline</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">object</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">open</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span>spider<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token triple-quoted-string string\">\"\"\"在爬虫开启的时候执行，仅执行一次\"\"\"</span>\n        self<span class=\"token punctuation\">.</span><span class=\"token builtin\">file</span><span class=\"token operator\">=</span><span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span>spider<span class=\"token punctuation\">.</span>setting<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">\"SAVE_FILE\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"./temp.json\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"w\"</span><span class=\"token punctuation\">)</span>\n    \n    <span class=\"token keyword\">def</span> <span class=\"token function\">close</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span>spider<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token triple-quoted-string string\">\"\"\"在爬虫关闭的时候执行，仅执行一次\"\"\"</span>\n        self<span class=\"token punctuation\">.</span><span class=\"token builtin\">file</span><span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    \n    <span class=\"token keyword\">def</span> <span class=\"token function\">process_item</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span>item<span class=\"token punctuation\">,</span>spider<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        line<span class=\"token operator\">=</span>json<span class=\"token punctuation\">.</span>dumps<span class=\"token punctuation\">(</span><span class=\"token builtin\">dict</span><span class=\"token punctuation\">(</span>item<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token string\">\"\\n\"</span>  <span class=\"token comment\"># 将字典转化为json字符串</span>\n        self<span class=\"token punctuation\">.</span><span class=\"token builtin\">file</span><span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span>line<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">return</span> item  <span class=\"token comment\"># 如果不return的情况下，另一个权重较低的pipeline就不会获取到该item</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><strong>思路：</strong></p>\n<ul>\n<li>在<code>open_spider</code>中打开一次</li>\n<li>在<code>close_spider</code>中关闭一次</li>\n<li>中间不停地往文件中写入数据</li>\n</ul>\n<p>这种方式是可以的，但是会有问题</p>\n<p><strong>问题：</strong></p>\n<p>如果我们的爬虫在爬取网站的时候爬取到第3页的时候程序突然报错了，然后爬虫终止执行，这时候，前2页的数据能够保存在我们的文件中吗？</p>\n<p><strong>不会</strong></p>\n<p><strong>为什么？</strong></p>\n<p>因为我们的文件打开之后写入数据只有在close之后数据才会写进去，如果我们不close的话，数据是不会写入的。</p>\n"},{"title":"Hexo matery主题推荐","date":"2021-04-30T08:47:18.000Z","author":"blinkfox","img":"https://www.ipicbed.com/images/2021/04/30/687474703a2f2f7374617469632e626c696e6b666f782e636f6d2f6d61746572792d32303138313230322d312e706e67.png","top":true,"cover":false,"toc":true,"mathjax":false,"_content":"\n## 特性\n\n- 简单漂亮，文章内容美观易读\n- [Material Design](https://material.io/) 设计\n- 响应式设计，博客在桌面端、平板、手机等设备上均能很好的展现\n- 首页轮播文章及每天动态切换 `Banner` 图片\n- 瀑布流式的博客文章列表（文章无特色图片时会有 `24` 张漂亮的图片代替）\n- 时间轴式的归档页\n- **词云**的标签页和**雷达图**的分类页\n- 丰富的关于我页面（包括关于我、文章统计图、我的项目、我的技能、相册等）\n- 可自定义的数据的友情链接页面\n- 支持文章置顶和文章打赏\n- 支持 `MathJax`\n- `TOC` 目录\n- 可设置复制文章内容时追加版权信息\n- 可设置阅读文章时做密码验证\n- [Gitalk](https://gitalk.github.io/)、[Gitment](https://imsun.github.io/gitment/)、[Valine](https://valine.js.org/) 和 [Disqus](https://disqus.com/) 评论模块（推荐使用 `Gitalk`）\n- 集成了[不蒜子统计](http://busuanzi.ibruce.info/)、谷歌分析（`Google Analytics`）和文章字数统计等功能\n- 支持在首页的音乐播放和视频播放功能\n- 支持`emoji`表情，用`markdown emoji`语法书写直接生成对应的能**跳跃**的表情。\n- 支持 [DaoVoice](http://www.daovoice.io/)、[Tidio](https://www.tidio.com/) 在线聊天功能。\n\n## 贡献者\n\n感谢下面列出的贡献者，没有他们，hexo-theme-matery 不会这么完美。\n\n- [@HarborZeng](https://github.com/HarborZeng)\n- [@shw2018](https://github.com/shw2018)\n- [@L1cardo](https://github.com/L1cardo)\n- [@Five-great](https://github.com/Five-great)\n\n## 下载\n\n本主题**推荐你使用 Hexo 5.0.0 及以上的版本**。如果，你已经有一个自己的 [Hexo](https://hexo.io/zh-cn/) 博客了，建议你将 Hexo 升级到最新稳定的版本。\n\n点击 [这里](https://codeload.github.com/blinkfox/hexo-theme-matery/zip/master) 下载 `master` 分支的最新稳定版的代码，解压缩后，将 `hexo-theme-matery` 的文件夹复制到你 Hexo 的 `themes` 文件夹中即可。\n\n当然你也可以在你的 `themes` 文件夹下使用 `git clone` 命令来下载:\n\n```\ngit clone https://github.com/blinkfox/hexo-theme-matery.git\n```\n\n## 配置\n\n### 切换主题\n\n修改 Hexo 根目录下的 `_config.yml` 的 `theme` 的值：`theme: hexo-theme-matery`\n\n#### `_config.yml` 文件的其它修改建议:\n\n- 请修改 `_config.yml` 的 `url` 的值为你的网站主 `URL`（如：`http://xxx.github.io`）。\n- 建议修改两个 `per_page` 的分页条数值为 `6` 的倍数，如：`12`、`18` 等，这样文章列表在各个屏幕下都能较好的显示。\n- 如果你是中文用户，则建议修改 `language` 的值为 `zh-CN`。\n\n### 新建分类 categories 页\n\n`categories` 页是用来展示所有分类的页面，如果在你的博客 `source` 目录下还没有 `categories/index.md` 文件，那么你就需要新建一个，命令如下：\n\n```bash\nhexo new page \"categories\"\n```\n\n编辑你刚刚新建的页面文件 `/source/categories/index.md`，至少需要以下内容：\n\n```yaml\n---\ntitle: categories\ndate: 2018-09-30 17:25:30\ntype: \"categories\"\nlayout: \"categories\"\n---\n```\n\n### 新建标签 tags 页\n\n`tags` 页是用来展示所有标签的页面，如果在你的博客 `source` 目录下还没有 `tags/index.md` 文件，那么你就需要新建一个，命令如下：\n\n```bash\nhexo new page \"tags\"\n```\n\n编辑你刚刚新建的页面文件 `/source/tags/index.md`，至少需要以下内容：\n\n```yaml\n---\ntitle: tags\ndate: 2018-09-30 18:23:38\ntype: \"tags\"\nlayout: \"tags\"\n---\n```\n\n### 新建关于我 about 页\n\n`about` 页是用来展示**关于我和我的博客**信息的页面，如果在你的博客 `source` 目录下还没有 `about/index.md` 文件，那么你就需要新建一个，命令如下：\n\n```bash\nhexo new page \"about\"\n```\n\n编辑你刚刚新建的页面文件 `/source/about/index.md`，至少需要以下内容：\n\n```yaml\n---\ntitle: about\ndate: 2018-09-30 17:25:30\ntype: \"about\"\nlayout: \"about\"\n---\n```\n\n### 新建留言板 contact 页（可选的）\n\n`contact` 页是用来展示**留言板**信息的页面，如果在你的博客 `source` 目录下还没有 `contact/index.md` 文件，那么你就需要新建一个，命令如下：\n\n```bash\nhexo new page \"contact\"\n```\n\n编辑你刚刚新建的页面文件 `/source/contact/index.md`，至少需要以下内容：\n\n```yaml\n---\ntitle: contact\ndate: 2018-09-30 17:25:30\ntype: \"contact\"\nlayout: \"contact\"\n---\n```\n\n> **注**：本留言板功能依赖于第三方评论系统，请**激活**你的评论系统才有效果。并且在主题的 `_config.yml` 文件中，第 `19` 至 `21` 行的“**菜单**”配置，取消关于留言板的注释即可。\n\n### 新建友情链接 friends 页（可选的）\n\n`friends` 页是用来展示**友情链接**信息的页面，如果在你的博客 `source` 目录下还没有 `friends/index.md` 文件，那么你就需要新建一个，命令如下：\n\n```bash\nhexo new page \"friends\"\n```\n\n编辑你刚刚新建的页面文件 `/source/friends/index.md`，至少需要以下内容：\n\n```yaml\n---\ntitle: friends\ndate: 2018-12-12 21:25:30\ntype: \"friends\"\nlayout: \"friends\"\n---\n```\n\n同时，在你的博客 `source` 目录下新建 `_data` 目录，在 `_data` 目录中新建 `friends.json` 文件，文件内容如下所示：\n\n```javascript\n[{\n    \"avatar\": \"http://image.luokangyuan.com/1_qq_27922023.jpg\",\n    \"name\": \"码酱\",\n    \"introduction\": \"我不是大佬，只是在追寻大佬的脚步\",\n    \"url\": \"http://luokangyuan.com/\",\n    \"title\": \"前去学习\"\n}, {\n    \"avatar\": \"http://image.luokangyuan.com/4027734.jpeg\",\n    \"name\": \"闪烁之狐\",\n    \"introduction\": \"编程界大佬，技术牛，人还特别好，不懂的都可以请教大佬\",\n    \"url\": \"https://blinkfox.github.io/\",\n    \"title\": \"前去学习\"\n}, {\n    \"avatar\": \"http://image.luokangyuan.com/avatar.jpg\",\n    \"name\": \"ja_rome\",\n    \"introduction\": \"平凡的脚步也可以走出伟大的行程\",\n    \"url\": \"https://me.csdn.net/jlh912008548\",\n    \"title\": \"前去学习\"\n}]\n```\n\n### 新建 404 页\n\n如果在你的博客 `source` 目录下还没有 `404.md` 文件，那么你就需要新建一个\n\n```bash\nhexo new page 404\n```\n\n编辑你刚刚新建的页面文件 `/source/404/index.md`，至少需要以下内容：\n\n```yaml\n---\ntitle: 404\ndate: 2018-09-30 17:25:30\ntype: \"404\"\nlayout: \"404\"\ndescription: \"Oops～，我崩溃了！找不到你想要的页面 :(\"\n---\n```\n\n### 菜单导航配置\n\n#### 配置基本菜单导航的名称、路径url和图标icon.\n\n1.菜单导航名称可以是中文也可以是英文(如：`Index`或`主页`) 2.图标icon 可以在[Font Awesome](https://fontawesome.com/icons) 中查找\n\n```yaml\nmenu:\n  Index:\n    url: /\n    icon: fas fa-home\n  Tags:\n    url: /tags\n    icon: fas fa-tags\n  Categories:\n    url: /categories\n    icon: fas fa-bookmark\n  Archives:\n    url: /archives\n    icon: fas fa-archive\n  About:\n    url: /about\n    icon: fas fa-user-circle\n  Friends:\n    url: /friends\n    icon: fas fa-address-book\n```\n\n#### 二级菜单配置方法\n\n如果你需要二级菜单则可以在原基本菜单导航的基础上如下操作\n\n1. 在需要添加二级菜单的一级菜单下添加`children`关键字(如:`About`菜单下添加`children`)\n2. 在`children`下创建二级菜单的 名称name,路径url和图标icon.\n3. 注意每个二级菜单模块前要加 `-`.\n4. 注意缩进格式\n\n```yaml\nmenu:\n  Index:\n    url: /\n    icon: fas fa-home\n  Tags:\n    url: /tags\n    icon: fas fa-tags\n  Categories:\n    url: /categories\n    icon: fas fa-bookmark\n  Archives:\n    url: /archives\n    icon: fas fa-archive\n  About:\n    url: /about\n    icon: fas fa-user-circle-o\n  Friends:\n    url: /friends\n    icon: fas fa-address-book\n  Medias:\n    icon: fas fa-list\n    children:\n      - name: Music\n        url: /music\n        icon: fas fa-music\n      - name: Movies\n        url: /movies\n        icon: fas fa-film\n      - name: Books\n        url: /books\n        icon: fas fa-book\n      - name: Galleries\n        url: /galleries\n        icon: fas fa-image\n```\n\n### 代码高亮\n\n从 Hexo5.0 版本开始自带了 `prismjs` 代码语法高亮的支持，本主题对此进行了改造支持。\n\n如果你的博客中曾经安装过 `hexo-prism-plugin` 的插件，那么你须要执行 `npm uninstall hexo-prism-plugin` 来卸载掉它，否则生成的代码中会有 `{` 和 `}` 的转义字符。\n\n然后，修改 Hexo 根目录下 `_config.yml` 文件中 `highlight.enable` 的值为 `false`，并将 `prismjs.enable` 的值设置为 `true`，主要配置如下：\n\n```yaml\nhighlight:\n  enable: false\n  line_number: true\n  auto_detect: false\n  tab_replace: ''\n  wrap: true\n  hljs: false\nprismjs:\n  enable: true\n  preprocess: true\n  line_number: true\n  tab_replace: ''\n```\n\n主题中默认的 `prismjs` 主题是 `Tomorrow Night`，如果你想定制自己的主题，可以前往 [prismjs 下载页面](https://prismjs.com/download.html) 定制下载自己喜欢的主题 `css` 文件，然后将此 css 主题文件取名为 `prism.css`，替换掉 `hexo-theme-matery` 主题文件夹中的 `source/libs/prism/prism.css` 文件即可。\n\n### 搜索\n\n本主题中还使用到了 [hexo-generator-search](https://github.com/wzpan/hexo-generator-search) 的 Hexo 插件来做内容搜索，安装命令如下：\n\n```bash\nnpm install hexo-generator-search --save\n```\n\n在 Hexo 根目录下的 `_config.yml` 文件中，新增以下的配置项：\n\n```yaml\nsearch:\n  path: search.xml\n  field: post\n```\n\n### 中文链接转拼音（建议安装）\n\n如果你的文章名称是中文的，那么 Hexo 默认生成的永久链接也会有中文，这样不利于 `SEO`，且 `gitment` 评论对中文链接也不支持。我们可以用 [hexo-permalink-pinyin](https://github.com/viko16/hexo-permalink-pinyin) Hexo 插件使在生成文章时生成中文拼音的永久链接。\n\n安装命令如下：\n\n```bash\nnpm i hexo-permalink-pinyin --save\n```\n\n在 Hexo 根目录下的 `_config.yml` 文件中，新增以下的配置项：\n\n```yaml\npermalink_pinyin:\n  enable: true\n  separator: '-' # default: '-'\n```\n\n> **注**：除了此插件外，[hexo-abbrlink](https://github.com/rozbo/hexo-abbrlink) 插件也可以生成非中文的链接。\n\n### 文章字数统计插件（建议安装）\n\n如果你想要在文章中显示文章字数、阅读时长信息，可以安装 [hexo-wordcount](https://github.com/willin/hexo-wordcount)插件。\n\n安装命令如下：\n\n```bash\nnpm i --save hexo-wordcount\n```\n\n然后只需在本主题下的 `_config.yml` 文件中，将各个文章字数相关的配置激活即可：\n\n```yaml\npostInfo:\n  date: true\n  update: false\n  wordCount: false # 设置文章字数统计为 true.\n  totalCount: false # 设置站点文章总字数统计为 true.\n  min2read: false # 阅读时长.\n  readCount: false # 阅读次数.\n```\n\n### 添加emoji表情支持（可选的）\n\n本主题新增了对`emoji`表情的支持，使用到了 [hexo-filter-github-emojis](https://npm.taobao.org/package/hexo-filter-github-emojis) 的 Hexo 插件来支持 `emoji`表情的生成，把对应的`markdown emoji`语法（`::`,例如：`:smile:`）转变成会跳跃的`emoji`表情，安装命令如下：\n\n```bash\nnpm install hexo-filter-github-emojis --save\n```\n\n在 Hexo 根目录下的 `_config.yml` 文件中，新增以下的配置项：\n\n```yaml\ngithubEmojis:\n  enable: true\n  className: github-emoji\n  inject: true\n  styles:\n  customEmojis:\n```\n\n执行 `hexo clean && hexo g` 重新生成博客文件，然后就可以在文章中对应位置看到你用`emoji`语法写的表情了。\n\n### 添加 RSS 订阅支持（可选的）\n\n本主题中还使用到了 [hexo-generator-feed](https://github.com/hexojs/hexo-generator-feed) 的 Hexo 插件来做 `RSS`，安装命令如下：\n\n```bash\nnpm install hexo-generator-feed --save\n```\n\n在 Hexo 根目录下的 `_config.yml` 文件中，新增以下的配置项：\n\n```yaml\nfeed:\n  type: atom\n  path: atom.xml\n  limit: 20\n  hub:\n  content:\n  content_limit: 140\n  content_limit_delim: ' '\n  order_by: -date\n```\n\n执行 `hexo clean && hexo g` 重新生成博客文件，然后在 `public` 文件夹中即可看到 `atom.xml` 文件，说明你已经安装成功了。\n\n### 添加 [DaoVoice](http://www.daovoice.io/) 在线聊天功能（可选的）\n\n前往 [DaoVoice](http://www.daovoice.io/) 官网注册并且获取 `app_id`，并将 `app_id` 填入主题的 `_config.yml` 文件中。\n\n### 添加 [Tidio](https://www.tidio.com/) 在线聊天功能（可选的）\n\n前往 [Tidio](https://www.tidio.com/) 官网注册并且获取 `Public Key`，并将 `Public Key` 填入主题的 `_config.yml` 文件中。\n\n### 修改页脚\n\n页脚信息可能需要做定制化修改，而且它不便于做成配置信息，所以可能需要你自己去再修改和加工。修改的地方在主题文件的 `/layout/_partial/footer.ejs` 文件中，包括站点、使用的主题、访问量等。\n\n### 修改社交链接\n\n在主题的 `_config.yml` 文件中，默认支持 `QQ`、`GitHub` 和邮箱等的配置，你可以在主题文件的 `/layout/_partial/social-link.ejs` 文件中，新增、修改你需要的社交链接地址，增加链接可参考如下代码：\n\n```ejs\n<% if (theme.socialLink.github) { %>\n    <a href=\"<%= theme.socialLink.github %>\" class=\"tooltipped\" target=\"_blank\" data-tooltip=\"访问我的GitHub\" data-position=\"top\" data-delay=\"50\">\n        <i class=\"fab fa-github\"></i>\n    </a>\n<% } %>\n```\n\n其中，社交图标（如：`fa-github`）你可以在 [Font Awesome](https://fontawesome.com/icons) 中搜索找到。以下是常用社交图标的标识，供你参考：\n\n- Facebook: `fab fa-facebook`\n- Twitter: `fab fa-twitter`\n- Google-plus: `fab fa-google-plus`\n- Linkedin: `fab fa-linkedin`\n- Tumblr: `fab fa-tumblr`\n- Medium: `fab fa-medium`\n- Slack: `fab fa-slack`\n- Sina Weibo: `fab fa-weibo`\n- Wechat: `fab fa-weixin`\n- QQ: `fab fa-qq`\n- Zhihu: `fab fa-zhihu`\n\n> **注意**: 本主题中使用的 `Font Awesome` 版本为 `5.11.0`。\n\n### 修改打赏的二维码图片\n\n在主题文件的 `source/medias/reward` 文件中，你可以替换成你的的微信和支付宝的打赏二维码图片。\n\n### 配置音乐播放器（可选的）\n\n要支持音乐播放，在主题的 `_config.yml` 配置文件中激活music配置即可：\n\n```yaml\n# 是否在首页显示音乐\nmusic:\n  enable: true\n  title:     \t    # 非吸底模式有效\n    enable: true\n    show: 听听音乐\n  server: netease   # require music platform: netease, tencent, kugou, xiami, baidu\n  type: playlist    # require song, playlist, album, search, artist\n  id: 503838841     # require song id / playlist id / album id / search keyword\n  fixed: false      # 开启吸底模式\n  autoplay: false   # 是否自动播放\n  theme: '#42b983'\n  loop: 'all'       # 音频循环播放, 可选值: 'all', 'one', 'none'\n  order: 'random'   # 音频循环顺序, 可选值: 'list', 'random'\n  preload: 'auto'   # 预加载，可选值: 'none', 'metadata', 'auto'\n  volume: 0.7       # 默认音量，请注意播放器会记忆用户设置，用户手动设置音量后默认音量即失效\n  listFolded: true  # 列表默认折叠\n```\n\n> `server`可选`netease`（网易云音乐），`tencent`（QQ音乐），`kugou`（酷狗音乐），`xiami`（虾米音乐），\n>\n> `baidu`（百度音乐）。\n>\n> `type`可选`song`（歌曲），`playlist`（歌单），`album`（专辑），`search`（搜索关键字），`artist`（歌手）\n>\n> ```\n> id`获取方法示例: 浏览器打开网易云音乐，点击我喜欢的音乐歌单，浏览器地址栏后面会有一串数字，`playlist`的`id\n> ```\n>\n> 即为这串数字。\n\n## 文章 Front-matter 介绍\n\n### Front-matter 选项详解\n\n`Front-matter` 选项中的所有内容均为**非必填**的。但我仍然建议至少填写 `title` 和 `date` 的值。\n\n| 配置选项      | 默认值                         | 描述                                                         |\n| ------------- | ------------------------------ | ------------------------------------------------------------ |\n| title         | `Markdown` 的文件标题          | 文章标题，强烈建议填写此选项                                 |\n| date          | 文件创建时的日期时间           | 发布时间，强烈建议填写此选项，且最好保证全局唯一             |\n| author        | 根 `_config.yml` 中的 `author` | 文章作者                                                     |\n| img           | `featureImages` 中的某个值     | 文章特征图，推荐使用图床(腾讯云、七牛云、又拍云等)来做图片的路径.如: `http://xxx.com/xxx.jpg` |\n| top           | `true`                         | 推荐文章（文章是否置顶），如果 `top` 值为 `true`，则会作为首页推荐文章 |\n| cover         | `false`                        | `v1.0.2`版本新增，表示该文章是否需要加入到首页轮播封面中     |\n| coverImg      | 无                             | `v1.0.2`版本新增，表示该文章在首页轮播封面需要显示的图片路径，如果没有，则默认使用文章的特色图片 |\n| password      | 无                             | 文章阅读密码，如果要对文章设置阅读验证密码的话，就可以设置 `password` 的值，该值必须是用 `SHA256` 加密后的密码，防止被他人识破。前提是在主题的 `config.yml` 中激活了 `verifyPassword` 选项 |\n| toc           | `true`                         | 是否开启 TOC，可以针对某篇文章单独关闭 TOC 的功能。前提是在主题的 `config.yml` 中激活了 `toc` 选项 |\n| mathjax       | `false`                        | 是否开启数学公式支持 ，本文章是否开启 `mathjax`，且需要在主题的 `_config.yml` 文件中也需要开启才行 |\n| summary       | 无                             | 文章摘要，自定义的文章摘要内容，如果这个属性有值，文章卡片摘要就显示这段文字，否则程序会自动截取文章的部分内容作为摘要 |\n| categories    | 无                             | 文章分类，本主题的分类表示宏观上大的分类，只建议一篇文章一个分类 |\n| tags          | 无                             | 文章标签，一篇文章可以多个标签                               |\n| keywords      | 文章标题                       | 文章关键字，SEO 时需要                                       |\n| reprintPolicy | cc_by                          | 文章转载规则， 可以是 cc_by, cc_by_nd, cc_by_sa, cc_by_nc, cc_by_nc_nd, cc_by_nc_sa, cc0, noreprint 或 pay 中的一个 |\n\n> **注意**:\n>\n> 1. 如果 `img` 属性不填写的话，文章特色图会根据文章标题的 `hashcode` 的值取余，然后选取主题中对应的特色图片，从而达到让所有文章的特色图**各有特色**。\n> 2. `date` 的值尽量保证每篇文章是唯一的，因为本主题中 `Gitalk` 和 `Gitment` 识别 `id` 是通过 `date` 的值来作为唯一标识的。\n> 3. 如果要对文章设置阅读验证密码的功能，不仅要在 Front-matter 中设置采用了 SHA256 加密的 password 的值，还需要在主题的 `_config.yml` 中激活了配置。有些在线的 SHA256 加密的地址，可供你使用：[开源中国在线工具](http://tool.oschina.net/encrypt?type=2)、[chahuo](http://encode.chahuo.com/)、[站长工具](http://tool.chinaz.com/tools/hash.aspx)。\n> 4. 您可以在文章md文件的 front-matter 中指定 reprintPolicy 来给单个文章配置转载规则\n\n以下为文章的 `Front-matter` 示例。\n\n### 最简示例\n\n```yaml\n---\ntitle: typora-vue-theme主题介绍\ndate: 2018-09-07 09:25:00\n---\n```\n\n### 最全示例\n\n```yaml\n---\ntitle: typora-vue-theme主题介绍\ndate: 2018-09-07 09:25:00\nauthor: 赵奇\nimg: /source/images/xxx.jpg\ntop: true\ncover: true\ncoverImg: /images/1.jpg\npassword: 8d969eef6ecad3c29a3a629280e686cf0c3f5d5a86aff3ca12020c923adc6c92\ntoc: false\nmathjax: false\nsummary: 这是你自定义的文章摘要内容，如果这个属性有值，文章卡片摘要就显示这段文字，否则程序会自动截取文章的部分内容作为摘要\ncategories: Markdown\ntags:\n  - Typora\n  - Markdown\n---\n```\n\n\n\n## 自定制修改\n\n在本主题的 `_config.yml` 中可以修改部分自定义信息，有以下几个部分：\n\n- 菜单\n- 我的梦想\n- 首页的音乐播放器和视频播放器配置\n- 是否显示推荐文章名称和按钮配置\n- `favicon` 和 `Logo`\n- 个人信息\n- TOC 目录\n- 文章打赏信息\n- 复制文章内容时追加版权信息\n- MathJax\n- 文章字数统计、阅读时长\n- 点击页面的'爱心'效果\n- 我的项目\n- 我的技能\n- 我的相册\n- `Gitalk`、`Gitment`、`Valine` 和 `disqus` 评论配置\n- [不蒜子统计](http://busuanzi.ibruce.info/)和谷歌分析（`Google Analytics`）\n- 默认特色图的集合。当文章没有设置特色图时，本主题会根据文章标题的 `hashcode` 值取余，来选择展示对应的特色图\n\n**我认为个人博客应该都有自己的风格和特色**。如果本主题中的诸多功能和主题色彩你不满意，可以在主题中自定义修改，很多更自由的功能和细节点的修改难以在主题的 `_config.yml` 中完成，需要修改源代码才来完成。以下列出了可能对你有用的地方：\n\n### 修改主题颜色\n\n在主题文件的 `/source/css/matery.css` 文件中，搜索 `.bg-color` 来修改背景颜色：\n\n```css\n/* 整体背景颜色，包括导航、移动端的导航、页尾、标签页等的背景颜色. */\n.bg-color {\n    background-image: linear-gradient(to right, #4cbf30 0%, #0f9d58 100%);\n}\n\n@-webkit-keyframes rainbow {\n   /* 动态切换背景颜色. */\n}\n\n@keyframes rainbow {\n    /* 动态切换背景颜色. */\n}\n```\n\n### 修改 banner 图和文章特色图\n\n你可以直接在 `/source/medias/banner` 文件夹中更换你喜欢的 `banner` 图片，主题代码中是每天动态切换一张，只需 `7` 张即可。如果你会 `JavaScript` 代码，可以修改成你自己喜欢切换逻辑，如：随机切换等，`banner` 切换的代码位置在 `/layout/_partial/bg-cover-content.ejs` 文件的 `<script></script>` 代码中：\n\n```ejs\n$('.bg-cover').css('background-image', 'url(/medias/banner/' + new Date().getDay() + '.jpg)');\n```\n\n在 `/source/medias/featureimages` 文件夹中默认有 24 张特色图片，你可以再增加或者减少，并需要在 `_config.yml` 做同步修改。","source":"_posts/Hexo-matery主题推荐.md","raw":"---\ntitle: Hexo matery主题推荐\ndate: 2021-04-30 16:47:18\nauthor: blinkfox\nimg: https://www.ipicbed.com/images/2021/04/30/687474703a2f2f7374617469632e626c696e6b666f782e636f6d2f6d61746572792d32303138313230322d312e706e67.png\ntop: true\ncover: false\n# coverImg: /images/1.jpg\ntoc: true\nmathjax: false\ncategories: HTML5\ntags:\n  - Html\n  - Hexo\n  - Web\n---\n\n## 特性\n\n- 简单漂亮，文章内容美观易读\n- [Material Design](https://material.io/) 设计\n- 响应式设计，博客在桌面端、平板、手机等设备上均能很好的展现\n- 首页轮播文章及每天动态切换 `Banner` 图片\n- 瀑布流式的博客文章列表（文章无特色图片时会有 `24` 张漂亮的图片代替）\n- 时间轴式的归档页\n- **词云**的标签页和**雷达图**的分类页\n- 丰富的关于我页面（包括关于我、文章统计图、我的项目、我的技能、相册等）\n- 可自定义的数据的友情链接页面\n- 支持文章置顶和文章打赏\n- 支持 `MathJax`\n- `TOC` 目录\n- 可设置复制文章内容时追加版权信息\n- 可设置阅读文章时做密码验证\n- [Gitalk](https://gitalk.github.io/)、[Gitment](https://imsun.github.io/gitment/)、[Valine](https://valine.js.org/) 和 [Disqus](https://disqus.com/) 评论模块（推荐使用 `Gitalk`）\n- 集成了[不蒜子统计](http://busuanzi.ibruce.info/)、谷歌分析（`Google Analytics`）和文章字数统计等功能\n- 支持在首页的音乐播放和视频播放功能\n- 支持`emoji`表情，用`markdown emoji`语法书写直接生成对应的能**跳跃**的表情。\n- 支持 [DaoVoice](http://www.daovoice.io/)、[Tidio](https://www.tidio.com/) 在线聊天功能。\n\n## 贡献者\n\n感谢下面列出的贡献者，没有他们，hexo-theme-matery 不会这么完美。\n\n- [@HarborZeng](https://github.com/HarborZeng)\n- [@shw2018](https://github.com/shw2018)\n- [@L1cardo](https://github.com/L1cardo)\n- [@Five-great](https://github.com/Five-great)\n\n## 下载\n\n本主题**推荐你使用 Hexo 5.0.0 及以上的版本**。如果，你已经有一个自己的 [Hexo](https://hexo.io/zh-cn/) 博客了，建议你将 Hexo 升级到最新稳定的版本。\n\n点击 [这里](https://codeload.github.com/blinkfox/hexo-theme-matery/zip/master) 下载 `master` 分支的最新稳定版的代码，解压缩后，将 `hexo-theme-matery` 的文件夹复制到你 Hexo 的 `themes` 文件夹中即可。\n\n当然你也可以在你的 `themes` 文件夹下使用 `git clone` 命令来下载:\n\n```\ngit clone https://github.com/blinkfox/hexo-theme-matery.git\n```\n\n## 配置\n\n### 切换主题\n\n修改 Hexo 根目录下的 `_config.yml` 的 `theme` 的值：`theme: hexo-theme-matery`\n\n#### `_config.yml` 文件的其它修改建议:\n\n- 请修改 `_config.yml` 的 `url` 的值为你的网站主 `URL`（如：`http://xxx.github.io`）。\n- 建议修改两个 `per_page` 的分页条数值为 `6` 的倍数，如：`12`、`18` 等，这样文章列表在各个屏幕下都能较好的显示。\n- 如果你是中文用户，则建议修改 `language` 的值为 `zh-CN`。\n\n### 新建分类 categories 页\n\n`categories` 页是用来展示所有分类的页面，如果在你的博客 `source` 目录下还没有 `categories/index.md` 文件，那么你就需要新建一个，命令如下：\n\n```bash\nhexo new page \"categories\"\n```\n\n编辑你刚刚新建的页面文件 `/source/categories/index.md`，至少需要以下内容：\n\n```yaml\n---\ntitle: categories\ndate: 2018-09-30 17:25:30\ntype: \"categories\"\nlayout: \"categories\"\n---\n```\n\n### 新建标签 tags 页\n\n`tags` 页是用来展示所有标签的页面，如果在你的博客 `source` 目录下还没有 `tags/index.md` 文件，那么你就需要新建一个，命令如下：\n\n```bash\nhexo new page \"tags\"\n```\n\n编辑你刚刚新建的页面文件 `/source/tags/index.md`，至少需要以下内容：\n\n```yaml\n---\ntitle: tags\ndate: 2018-09-30 18:23:38\ntype: \"tags\"\nlayout: \"tags\"\n---\n```\n\n### 新建关于我 about 页\n\n`about` 页是用来展示**关于我和我的博客**信息的页面，如果在你的博客 `source` 目录下还没有 `about/index.md` 文件，那么你就需要新建一个，命令如下：\n\n```bash\nhexo new page \"about\"\n```\n\n编辑你刚刚新建的页面文件 `/source/about/index.md`，至少需要以下内容：\n\n```yaml\n---\ntitle: about\ndate: 2018-09-30 17:25:30\ntype: \"about\"\nlayout: \"about\"\n---\n```\n\n### 新建留言板 contact 页（可选的）\n\n`contact` 页是用来展示**留言板**信息的页面，如果在你的博客 `source` 目录下还没有 `contact/index.md` 文件，那么你就需要新建一个，命令如下：\n\n```bash\nhexo new page \"contact\"\n```\n\n编辑你刚刚新建的页面文件 `/source/contact/index.md`，至少需要以下内容：\n\n```yaml\n---\ntitle: contact\ndate: 2018-09-30 17:25:30\ntype: \"contact\"\nlayout: \"contact\"\n---\n```\n\n> **注**：本留言板功能依赖于第三方评论系统，请**激活**你的评论系统才有效果。并且在主题的 `_config.yml` 文件中，第 `19` 至 `21` 行的“**菜单**”配置，取消关于留言板的注释即可。\n\n### 新建友情链接 friends 页（可选的）\n\n`friends` 页是用来展示**友情链接**信息的页面，如果在你的博客 `source` 目录下还没有 `friends/index.md` 文件，那么你就需要新建一个，命令如下：\n\n```bash\nhexo new page \"friends\"\n```\n\n编辑你刚刚新建的页面文件 `/source/friends/index.md`，至少需要以下内容：\n\n```yaml\n---\ntitle: friends\ndate: 2018-12-12 21:25:30\ntype: \"friends\"\nlayout: \"friends\"\n---\n```\n\n同时，在你的博客 `source` 目录下新建 `_data` 目录，在 `_data` 目录中新建 `friends.json` 文件，文件内容如下所示：\n\n```javascript\n[{\n    \"avatar\": \"http://image.luokangyuan.com/1_qq_27922023.jpg\",\n    \"name\": \"码酱\",\n    \"introduction\": \"我不是大佬，只是在追寻大佬的脚步\",\n    \"url\": \"http://luokangyuan.com/\",\n    \"title\": \"前去学习\"\n}, {\n    \"avatar\": \"http://image.luokangyuan.com/4027734.jpeg\",\n    \"name\": \"闪烁之狐\",\n    \"introduction\": \"编程界大佬，技术牛，人还特别好，不懂的都可以请教大佬\",\n    \"url\": \"https://blinkfox.github.io/\",\n    \"title\": \"前去学习\"\n}, {\n    \"avatar\": \"http://image.luokangyuan.com/avatar.jpg\",\n    \"name\": \"ja_rome\",\n    \"introduction\": \"平凡的脚步也可以走出伟大的行程\",\n    \"url\": \"https://me.csdn.net/jlh912008548\",\n    \"title\": \"前去学习\"\n}]\n```\n\n### 新建 404 页\n\n如果在你的博客 `source` 目录下还没有 `404.md` 文件，那么你就需要新建一个\n\n```bash\nhexo new page 404\n```\n\n编辑你刚刚新建的页面文件 `/source/404/index.md`，至少需要以下内容：\n\n```yaml\n---\ntitle: 404\ndate: 2018-09-30 17:25:30\ntype: \"404\"\nlayout: \"404\"\ndescription: \"Oops～，我崩溃了！找不到你想要的页面 :(\"\n---\n```\n\n### 菜单导航配置\n\n#### 配置基本菜单导航的名称、路径url和图标icon.\n\n1.菜单导航名称可以是中文也可以是英文(如：`Index`或`主页`) 2.图标icon 可以在[Font Awesome](https://fontawesome.com/icons) 中查找\n\n```yaml\nmenu:\n  Index:\n    url: /\n    icon: fas fa-home\n  Tags:\n    url: /tags\n    icon: fas fa-tags\n  Categories:\n    url: /categories\n    icon: fas fa-bookmark\n  Archives:\n    url: /archives\n    icon: fas fa-archive\n  About:\n    url: /about\n    icon: fas fa-user-circle\n  Friends:\n    url: /friends\n    icon: fas fa-address-book\n```\n\n#### 二级菜单配置方法\n\n如果你需要二级菜单则可以在原基本菜单导航的基础上如下操作\n\n1. 在需要添加二级菜单的一级菜单下添加`children`关键字(如:`About`菜单下添加`children`)\n2. 在`children`下创建二级菜单的 名称name,路径url和图标icon.\n3. 注意每个二级菜单模块前要加 `-`.\n4. 注意缩进格式\n\n```yaml\nmenu:\n  Index:\n    url: /\n    icon: fas fa-home\n  Tags:\n    url: /tags\n    icon: fas fa-tags\n  Categories:\n    url: /categories\n    icon: fas fa-bookmark\n  Archives:\n    url: /archives\n    icon: fas fa-archive\n  About:\n    url: /about\n    icon: fas fa-user-circle-o\n  Friends:\n    url: /friends\n    icon: fas fa-address-book\n  Medias:\n    icon: fas fa-list\n    children:\n      - name: Music\n        url: /music\n        icon: fas fa-music\n      - name: Movies\n        url: /movies\n        icon: fas fa-film\n      - name: Books\n        url: /books\n        icon: fas fa-book\n      - name: Galleries\n        url: /galleries\n        icon: fas fa-image\n```\n\n### 代码高亮\n\n从 Hexo5.0 版本开始自带了 `prismjs` 代码语法高亮的支持，本主题对此进行了改造支持。\n\n如果你的博客中曾经安装过 `hexo-prism-plugin` 的插件，那么你须要执行 `npm uninstall hexo-prism-plugin` 来卸载掉它，否则生成的代码中会有 `{` 和 `}` 的转义字符。\n\n然后，修改 Hexo 根目录下 `_config.yml` 文件中 `highlight.enable` 的值为 `false`，并将 `prismjs.enable` 的值设置为 `true`，主要配置如下：\n\n```yaml\nhighlight:\n  enable: false\n  line_number: true\n  auto_detect: false\n  tab_replace: ''\n  wrap: true\n  hljs: false\nprismjs:\n  enable: true\n  preprocess: true\n  line_number: true\n  tab_replace: ''\n```\n\n主题中默认的 `prismjs` 主题是 `Tomorrow Night`，如果你想定制自己的主题，可以前往 [prismjs 下载页面](https://prismjs.com/download.html) 定制下载自己喜欢的主题 `css` 文件，然后将此 css 主题文件取名为 `prism.css`，替换掉 `hexo-theme-matery` 主题文件夹中的 `source/libs/prism/prism.css` 文件即可。\n\n### 搜索\n\n本主题中还使用到了 [hexo-generator-search](https://github.com/wzpan/hexo-generator-search) 的 Hexo 插件来做内容搜索，安装命令如下：\n\n```bash\nnpm install hexo-generator-search --save\n```\n\n在 Hexo 根目录下的 `_config.yml` 文件中，新增以下的配置项：\n\n```yaml\nsearch:\n  path: search.xml\n  field: post\n```\n\n### 中文链接转拼音（建议安装）\n\n如果你的文章名称是中文的，那么 Hexo 默认生成的永久链接也会有中文，这样不利于 `SEO`，且 `gitment` 评论对中文链接也不支持。我们可以用 [hexo-permalink-pinyin](https://github.com/viko16/hexo-permalink-pinyin) Hexo 插件使在生成文章时生成中文拼音的永久链接。\n\n安装命令如下：\n\n```bash\nnpm i hexo-permalink-pinyin --save\n```\n\n在 Hexo 根目录下的 `_config.yml` 文件中，新增以下的配置项：\n\n```yaml\npermalink_pinyin:\n  enable: true\n  separator: '-' # default: '-'\n```\n\n> **注**：除了此插件外，[hexo-abbrlink](https://github.com/rozbo/hexo-abbrlink) 插件也可以生成非中文的链接。\n\n### 文章字数统计插件（建议安装）\n\n如果你想要在文章中显示文章字数、阅读时长信息，可以安装 [hexo-wordcount](https://github.com/willin/hexo-wordcount)插件。\n\n安装命令如下：\n\n```bash\nnpm i --save hexo-wordcount\n```\n\n然后只需在本主题下的 `_config.yml` 文件中，将各个文章字数相关的配置激活即可：\n\n```yaml\npostInfo:\n  date: true\n  update: false\n  wordCount: false # 设置文章字数统计为 true.\n  totalCount: false # 设置站点文章总字数统计为 true.\n  min2read: false # 阅读时长.\n  readCount: false # 阅读次数.\n```\n\n### 添加emoji表情支持（可选的）\n\n本主题新增了对`emoji`表情的支持，使用到了 [hexo-filter-github-emojis](https://npm.taobao.org/package/hexo-filter-github-emojis) 的 Hexo 插件来支持 `emoji`表情的生成，把对应的`markdown emoji`语法（`::`,例如：`:smile:`）转变成会跳跃的`emoji`表情，安装命令如下：\n\n```bash\nnpm install hexo-filter-github-emojis --save\n```\n\n在 Hexo 根目录下的 `_config.yml` 文件中，新增以下的配置项：\n\n```yaml\ngithubEmojis:\n  enable: true\n  className: github-emoji\n  inject: true\n  styles:\n  customEmojis:\n```\n\n执行 `hexo clean && hexo g` 重新生成博客文件，然后就可以在文章中对应位置看到你用`emoji`语法写的表情了。\n\n### 添加 RSS 订阅支持（可选的）\n\n本主题中还使用到了 [hexo-generator-feed](https://github.com/hexojs/hexo-generator-feed) 的 Hexo 插件来做 `RSS`，安装命令如下：\n\n```bash\nnpm install hexo-generator-feed --save\n```\n\n在 Hexo 根目录下的 `_config.yml` 文件中，新增以下的配置项：\n\n```yaml\nfeed:\n  type: atom\n  path: atom.xml\n  limit: 20\n  hub:\n  content:\n  content_limit: 140\n  content_limit_delim: ' '\n  order_by: -date\n```\n\n执行 `hexo clean && hexo g` 重新生成博客文件，然后在 `public` 文件夹中即可看到 `atom.xml` 文件，说明你已经安装成功了。\n\n### 添加 [DaoVoice](http://www.daovoice.io/) 在线聊天功能（可选的）\n\n前往 [DaoVoice](http://www.daovoice.io/) 官网注册并且获取 `app_id`，并将 `app_id` 填入主题的 `_config.yml` 文件中。\n\n### 添加 [Tidio](https://www.tidio.com/) 在线聊天功能（可选的）\n\n前往 [Tidio](https://www.tidio.com/) 官网注册并且获取 `Public Key`，并将 `Public Key` 填入主题的 `_config.yml` 文件中。\n\n### 修改页脚\n\n页脚信息可能需要做定制化修改，而且它不便于做成配置信息，所以可能需要你自己去再修改和加工。修改的地方在主题文件的 `/layout/_partial/footer.ejs` 文件中，包括站点、使用的主题、访问量等。\n\n### 修改社交链接\n\n在主题的 `_config.yml` 文件中，默认支持 `QQ`、`GitHub` 和邮箱等的配置，你可以在主题文件的 `/layout/_partial/social-link.ejs` 文件中，新增、修改你需要的社交链接地址，增加链接可参考如下代码：\n\n```ejs\n<% if (theme.socialLink.github) { %>\n    <a href=\"<%= theme.socialLink.github %>\" class=\"tooltipped\" target=\"_blank\" data-tooltip=\"访问我的GitHub\" data-position=\"top\" data-delay=\"50\">\n        <i class=\"fab fa-github\"></i>\n    </a>\n<% } %>\n```\n\n其中，社交图标（如：`fa-github`）你可以在 [Font Awesome](https://fontawesome.com/icons) 中搜索找到。以下是常用社交图标的标识，供你参考：\n\n- Facebook: `fab fa-facebook`\n- Twitter: `fab fa-twitter`\n- Google-plus: `fab fa-google-plus`\n- Linkedin: `fab fa-linkedin`\n- Tumblr: `fab fa-tumblr`\n- Medium: `fab fa-medium`\n- Slack: `fab fa-slack`\n- Sina Weibo: `fab fa-weibo`\n- Wechat: `fab fa-weixin`\n- QQ: `fab fa-qq`\n- Zhihu: `fab fa-zhihu`\n\n> **注意**: 本主题中使用的 `Font Awesome` 版本为 `5.11.0`。\n\n### 修改打赏的二维码图片\n\n在主题文件的 `source/medias/reward` 文件中，你可以替换成你的的微信和支付宝的打赏二维码图片。\n\n### 配置音乐播放器（可选的）\n\n要支持音乐播放，在主题的 `_config.yml` 配置文件中激活music配置即可：\n\n```yaml\n# 是否在首页显示音乐\nmusic:\n  enable: true\n  title:     \t    # 非吸底模式有效\n    enable: true\n    show: 听听音乐\n  server: netease   # require music platform: netease, tencent, kugou, xiami, baidu\n  type: playlist    # require song, playlist, album, search, artist\n  id: 503838841     # require song id / playlist id / album id / search keyword\n  fixed: false      # 开启吸底模式\n  autoplay: false   # 是否自动播放\n  theme: '#42b983'\n  loop: 'all'       # 音频循环播放, 可选值: 'all', 'one', 'none'\n  order: 'random'   # 音频循环顺序, 可选值: 'list', 'random'\n  preload: 'auto'   # 预加载，可选值: 'none', 'metadata', 'auto'\n  volume: 0.7       # 默认音量，请注意播放器会记忆用户设置，用户手动设置音量后默认音量即失效\n  listFolded: true  # 列表默认折叠\n```\n\n> `server`可选`netease`（网易云音乐），`tencent`（QQ音乐），`kugou`（酷狗音乐），`xiami`（虾米音乐），\n>\n> `baidu`（百度音乐）。\n>\n> `type`可选`song`（歌曲），`playlist`（歌单），`album`（专辑），`search`（搜索关键字），`artist`（歌手）\n>\n> ```\n> id`获取方法示例: 浏览器打开网易云音乐，点击我喜欢的音乐歌单，浏览器地址栏后面会有一串数字，`playlist`的`id\n> ```\n>\n> 即为这串数字。\n\n## 文章 Front-matter 介绍\n\n### Front-matter 选项详解\n\n`Front-matter` 选项中的所有内容均为**非必填**的。但我仍然建议至少填写 `title` 和 `date` 的值。\n\n| 配置选项      | 默认值                         | 描述                                                         |\n| ------------- | ------------------------------ | ------------------------------------------------------------ |\n| title         | `Markdown` 的文件标题          | 文章标题，强烈建议填写此选项                                 |\n| date          | 文件创建时的日期时间           | 发布时间，强烈建议填写此选项，且最好保证全局唯一             |\n| author        | 根 `_config.yml` 中的 `author` | 文章作者                                                     |\n| img           | `featureImages` 中的某个值     | 文章特征图，推荐使用图床(腾讯云、七牛云、又拍云等)来做图片的路径.如: `http://xxx.com/xxx.jpg` |\n| top           | `true`                         | 推荐文章（文章是否置顶），如果 `top` 值为 `true`，则会作为首页推荐文章 |\n| cover         | `false`                        | `v1.0.2`版本新增，表示该文章是否需要加入到首页轮播封面中     |\n| coverImg      | 无                             | `v1.0.2`版本新增，表示该文章在首页轮播封面需要显示的图片路径，如果没有，则默认使用文章的特色图片 |\n| password      | 无                             | 文章阅读密码，如果要对文章设置阅读验证密码的话，就可以设置 `password` 的值，该值必须是用 `SHA256` 加密后的密码，防止被他人识破。前提是在主题的 `config.yml` 中激活了 `verifyPassword` 选项 |\n| toc           | `true`                         | 是否开启 TOC，可以针对某篇文章单独关闭 TOC 的功能。前提是在主题的 `config.yml` 中激活了 `toc` 选项 |\n| mathjax       | `false`                        | 是否开启数学公式支持 ，本文章是否开启 `mathjax`，且需要在主题的 `_config.yml` 文件中也需要开启才行 |\n| summary       | 无                             | 文章摘要，自定义的文章摘要内容，如果这个属性有值，文章卡片摘要就显示这段文字，否则程序会自动截取文章的部分内容作为摘要 |\n| categories    | 无                             | 文章分类，本主题的分类表示宏观上大的分类，只建议一篇文章一个分类 |\n| tags          | 无                             | 文章标签，一篇文章可以多个标签                               |\n| keywords      | 文章标题                       | 文章关键字，SEO 时需要                                       |\n| reprintPolicy | cc_by                          | 文章转载规则， 可以是 cc_by, cc_by_nd, cc_by_sa, cc_by_nc, cc_by_nc_nd, cc_by_nc_sa, cc0, noreprint 或 pay 中的一个 |\n\n> **注意**:\n>\n> 1. 如果 `img` 属性不填写的话，文章特色图会根据文章标题的 `hashcode` 的值取余，然后选取主题中对应的特色图片，从而达到让所有文章的特色图**各有特色**。\n> 2. `date` 的值尽量保证每篇文章是唯一的，因为本主题中 `Gitalk` 和 `Gitment` 识别 `id` 是通过 `date` 的值来作为唯一标识的。\n> 3. 如果要对文章设置阅读验证密码的功能，不仅要在 Front-matter 中设置采用了 SHA256 加密的 password 的值，还需要在主题的 `_config.yml` 中激活了配置。有些在线的 SHA256 加密的地址，可供你使用：[开源中国在线工具](http://tool.oschina.net/encrypt?type=2)、[chahuo](http://encode.chahuo.com/)、[站长工具](http://tool.chinaz.com/tools/hash.aspx)。\n> 4. 您可以在文章md文件的 front-matter 中指定 reprintPolicy 来给单个文章配置转载规则\n\n以下为文章的 `Front-matter` 示例。\n\n### 最简示例\n\n```yaml\n---\ntitle: typora-vue-theme主题介绍\ndate: 2018-09-07 09:25:00\n---\n```\n\n### 最全示例\n\n```yaml\n---\ntitle: typora-vue-theme主题介绍\ndate: 2018-09-07 09:25:00\nauthor: 赵奇\nimg: /source/images/xxx.jpg\ntop: true\ncover: true\ncoverImg: /images/1.jpg\npassword: 8d969eef6ecad3c29a3a629280e686cf0c3f5d5a86aff3ca12020c923adc6c92\ntoc: false\nmathjax: false\nsummary: 这是你自定义的文章摘要内容，如果这个属性有值，文章卡片摘要就显示这段文字，否则程序会自动截取文章的部分内容作为摘要\ncategories: Markdown\ntags:\n  - Typora\n  - Markdown\n---\n```\n\n\n\n## 自定制修改\n\n在本主题的 `_config.yml` 中可以修改部分自定义信息，有以下几个部分：\n\n- 菜单\n- 我的梦想\n- 首页的音乐播放器和视频播放器配置\n- 是否显示推荐文章名称和按钮配置\n- `favicon` 和 `Logo`\n- 个人信息\n- TOC 目录\n- 文章打赏信息\n- 复制文章内容时追加版权信息\n- MathJax\n- 文章字数统计、阅读时长\n- 点击页面的'爱心'效果\n- 我的项目\n- 我的技能\n- 我的相册\n- `Gitalk`、`Gitment`、`Valine` 和 `disqus` 评论配置\n- [不蒜子统计](http://busuanzi.ibruce.info/)和谷歌分析（`Google Analytics`）\n- 默认特色图的集合。当文章没有设置特色图时，本主题会根据文章标题的 `hashcode` 值取余，来选择展示对应的特色图\n\n**我认为个人博客应该都有自己的风格和特色**。如果本主题中的诸多功能和主题色彩你不满意，可以在主题中自定义修改，很多更自由的功能和细节点的修改难以在主题的 `_config.yml` 中完成，需要修改源代码才来完成。以下列出了可能对你有用的地方：\n\n### 修改主题颜色\n\n在主题文件的 `/source/css/matery.css` 文件中，搜索 `.bg-color` 来修改背景颜色：\n\n```css\n/* 整体背景颜色，包括导航、移动端的导航、页尾、标签页等的背景颜色. */\n.bg-color {\n    background-image: linear-gradient(to right, #4cbf30 0%, #0f9d58 100%);\n}\n\n@-webkit-keyframes rainbow {\n   /* 动态切换背景颜色. */\n}\n\n@keyframes rainbow {\n    /* 动态切换背景颜色. */\n}\n```\n\n### 修改 banner 图和文章特色图\n\n你可以直接在 `/source/medias/banner` 文件夹中更换你喜欢的 `banner` 图片，主题代码中是每天动态切换一张，只需 `7` 张即可。如果你会 `JavaScript` 代码，可以修改成你自己喜欢切换逻辑，如：随机切换等，`banner` 切换的代码位置在 `/layout/_partial/bg-cover-content.ejs` 文件的 `<script></script>` 代码中：\n\n```ejs\n$('.bg-cover').css('background-image', 'url(/medias/banner/' + new Date().getDay() + '.jpg)');\n```\n\n在 `/source/medias/featureimages` 文件夹中默认有 24 张特色图片，你可以再增加或者减少，并需要在 `_config.yml` 做同步修改。","slug":"Hexo-matery主题推荐","published":1,"updated":"2021-04-30T10:17:51.050Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cko6821ji000jv2t8e72b7ia4","content":"<h2 id=\"特性\"><a href=\"#特性\" class=\"headerlink\" title=\"特性\"></a>特性</h2><ul>\n<li>简单漂亮，文章内容美观易读</li>\n<li><a href=\"https://material.io/\">Material Design</a> 设计</li>\n<li>响应式设计，博客在桌面端、平板、手机等设备上均能很好的展现</li>\n<li>首页轮播文章及每天动态切换 <code>Banner</code> 图片</li>\n<li>瀑布流式的博客文章列表（文章无特色图片时会有 <code>24</code> 张漂亮的图片代替）</li>\n<li>时间轴式的归档页</li>\n<li><strong>词云</strong>的标签页和<strong>雷达图</strong>的分类页</li>\n<li>丰富的关于我页面（包括关于我、文章统计图、我的项目、我的技能、相册等）</li>\n<li>可自定义的数据的友情链接页面</li>\n<li>支持文章置顶和文章打赏</li>\n<li>支持 <code>MathJax</code></li>\n<li><code>TOC</code> 目录</li>\n<li>可设置复制文章内容时追加版权信息</li>\n<li>可设置阅读文章时做密码验证</li>\n<li><a href=\"https://gitalk.github.io/\">Gitalk</a>、<a href=\"https://imsun.github.io/gitment/\">Gitment</a>、<a href=\"https://valine.js.org/\">Valine</a> 和 <a href=\"https://disqus.com/\">Disqus</a> 评论模块（推荐使用 <code>Gitalk</code>）</li>\n<li>集成了<a href=\"http://busuanzi.ibruce.info/\">不蒜子统计</a>、谷歌分析（<code>Google Analytics</code>）和文章字数统计等功能</li>\n<li>支持在首页的音乐播放和视频播放功能</li>\n<li>支持<code>emoji</code>表情，用<code>markdown emoji</code>语法书写直接生成对应的能<strong>跳跃</strong>的表情。</li>\n<li>支持 <a href=\"http://www.daovoice.io/\">DaoVoice</a>、<a href=\"https://www.tidio.com/\">Tidio</a> 在线聊天功能。</li>\n</ul>\n<h2 id=\"贡献者\"><a href=\"#贡献者\" class=\"headerlink\" title=\"贡献者\"></a>贡献者</h2><p>感谢下面列出的贡献者，没有他们，hexo-theme-matery 不会这么完美。</p>\n<ul>\n<li><a href=\"https://github.com/HarborZeng\">@HarborZeng</a></li>\n<li><a href=\"https://github.com/shw2018\">@shw2018</a></li>\n<li><a href=\"https://github.com/L1cardo\">@L1cardo</a></li>\n<li><a href=\"https://github.com/Five-great\">@Five-great</a></li>\n</ul>\n<h2 id=\"下载\"><a href=\"#下载\" class=\"headerlink\" title=\"下载\"></a>下载</h2><p>本主题<strong>推荐你使用 Hexo 5.0.0 及以上的版本</strong>。如果，你已经有一个自己的 <a href=\"https://hexo.io/zh-cn/\">Hexo</a> 博客了，建议你将 Hexo 升级到最新稳定的版本。</p>\n<p>点击 <a href=\"https://codeload.github.com/blinkfox/hexo-theme-matery/zip/master\">这里</a> 下载 <code>master</code> 分支的最新稳定版的代码，解压缩后，将 <code>hexo-theme-matery</code> 的文件夹复制到你 Hexo 的 <code>themes</code> 文件夹中即可。</p>\n<p>当然你也可以在你的 <code>themes</code> 文件夹下使用 <code>git clone</code> 命令来下载:</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">git clone https:&#x2F;&#x2F;github.com&#x2F;blinkfox&#x2F;hexo-theme-matery.git<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h2 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h2><h3 id=\"切换主题\"><a href=\"#切换主题\" class=\"headerlink\" title=\"切换主题\"></a>切换主题</h3><p>修改 Hexo 根目录下的 <code>_config.yml</code> 的 <code>theme</code> 的值：<code>theme: hexo-theme-matery</code></p>\n<h4 id=\"config-yml-文件的其它修改建议\"><a href=\"#config-yml-文件的其它修改建议\" class=\"headerlink\" title=\"_config.yml 文件的其它修改建议:\"></a><code>_config.yml</code> 文件的其它修改建议:</h4><ul>\n<li>请修改 <code>_config.yml</code> 的 <code>url</code> 的值为你的网站主 <code>URL</code>（如：<code>http://xxx.github.io</code>）。</li>\n<li>建议修改两个 <code>per_page</code> 的分页条数值为 <code>6</code> 的倍数，如：<code>12</code>、<code>18</code> 等，这样文章列表在各个屏幕下都能较好的显示。</li>\n<li>如果你是中文用户，则建议修改 <code>language</code> 的值为 <code>zh-CN</code>。</li>\n</ul>\n<h3 id=\"新建分类-categories-页\"><a href=\"#新建分类-categories-页\" class=\"headerlink\" title=\"新建分类 categories 页\"></a>新建分类 categories 页</h3><p><code>categories</code> 页是用来展示所有分类的页面，如果在你的博客 <code>source</code> 目录下还没有 <code>categories/index.md</code> 文件，那么你就需要新建一个，命令如下：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">hexo new page <span class=\"token string\">\"categories\"</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>编辑你刚刚新建的页面文件 <code>/source/categories/index.md</code>，至少需要以下内容：</p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token punctuation\">---</span>\n<span class=\"token key atrule\">title</span><span class=\"token punctuation\">:</span> categories\n<span class=\"token key atrule\">date</span><span class=\"token punctuation\">:</span> <span class=\"token datetime number\">2018-09-30 17:25:30</span>\n<span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"categories\"</span>\n<span class=\"token key atrule\">layout</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"categories\"</span>\n<span class=\"token punctuation\">---</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"新建标签-tags-页\"><a href=\"#新建标签-tags-页\" class=\"headerlink\" title=\"新建标签 tags 页\"></a>新建标签 tags 页</h3><p><code>tags</code> 页是用来展示所有标签的页面，如果在你的博客 <code>source</code> 目录下还没有 <code>tags/index.md</code> 文件，那么你就需要新建一个，命令如下：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">hexo new page <span class=\"token string\">\"tags\"</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>编辑你刚刚新建的页面文件 <code>/source/tags/index.md</code>，至少需要以下内容：</p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token punctuation\">---</span>\n<span class=\"token key atrule\">title</span><span class=\"token punctuation\">:</span> tags\n<span class=\"token key atrule\">date</span><span class=\"token punctuation\">:</span> <span class=\"token datetime number\">2018-09-30 18:23:38</span>\n<span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"tags\"</span>\n<span class=\"token key atrule\">layout</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"tags\"</span>\n<span class=\"token punctuation\">---</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"新建关于我-about-页\"><a href=\"#新建关于我-about-页\" class=\"headerlink\" title=\"新建关于我 about 页\"></a>新建关于我 about 页</h3><p><code>about</code> 页是用来展示<strong>关于我和我的博客</strong>信息的页面，如果在你的博客 <code>source</code> 目录下还没有 <code>about/index.md</code> 文件，那么你就需要新建一个，命令如下：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">hexo new page <span class=\"token string\">\"about\"</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>编辑你刚刚新建的页面文件 <code>/source/about/index.md</code>，至少需要以下内容：</p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token punctuation\">---</span>\n<span class=\"token key atrule\">title</span><span class=\"token punctuation\">:</span> about\n<span class=\"token key atrule\">date</span><span class=\"token punctuation\">:</span> <span class=\"token datetime number\">2018-09-30 17:25:30</span>\n<span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"about\"</span>\n<span class=\"token key atrule\">layout</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"about\"</span>\n<span class=\"token punctuation\">---</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"新建留言板-contact-页（可选的）\"><a href=\"#新建留言板-contact-页（可选的）\" class=\"headerlink\" title=\"新建留言板 contact 页（可选的）\"></a>新建留言板 contact 页（可选的）</h3><p><code>contact</code> 页是用来展示<strong>留言板</strong>信息的页面，如果在你的博客 <code>source</code> 目录下还没有 <code>contact/index.md</code> 文件，那么你就需要新建一个，命令如下：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">hexo new page <span class=\"token string\">\"contact\"</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>编辑你刚刚新建的页面文件 <code>/source/contact/index.md</code>，至少需要以下内容：</p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token punctuation\">---</span>\n<span class=\"token key atrule\">title</span><span class=\"token punctuation\">:</span> contact\n<span class=\"token key atrule\">date</span><span class=\"token punctuation\">:</span> <span class=\"token datetime number\">2018-09-30 17:25:30</span>\n<span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"contact\"</span>\n<span class=\"token key atrule\">layout</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"contact\"</span>\n<span class=\"token punctuation\">---</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<blockquote>\n<p><strong>注</strong>：本留言板功能依赖于第三方评论系统，请<strong>激活</strong>你的评论系统才有效果。并且在主题的 <code>_config.yml</code> 文件中，第 <code>19</code> 至 <code>21</code> 行的“<strong>菜单</strong>”配置，取消关于留言板的注释即可。</p>\n</blockquote>\n<h3 id=\"新建友情链接-friends-页（可选的）\"><a href=\"#新建友情链接-friends-页（可选的）\" class=\"headerlink\" title=\"新建友情链接 friends 页（可选的）\"></a>新建友情链接 friends 页（可选的）</h3><p><code>friends</code> 页是用来展示<strong>友情链接</strong>信息的页面，如果在你的博客 <code>source</code> 目录下还没有 <code>friends/index.md</code> 文件，那么你就需要新建一个，命令如下：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">hexo new page <span class=\"token string\">\"friends\"</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>编辑你刚刚新建的页面文件 <code>/source/friends/index.md</code>，至少需要以下内容：</p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token punctuation\">---</span>\n<span class=\"token key atrule\">title</span><span class=\"token punctuation\">:</span> friends\n<span class=\"token key atrule\">date</span><span class=\"token punctuation\">:</span> <span class=\"token datetime number\">2018-12-12 21:25:30</span>\n<span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"friends\"</span>\n<span class=\"token key atrule\">layout</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"friends\"</span>\n<span class=\"token punctuation\">---</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>同时，在你的博客 <code>source</code> 目录下新建 <code>_data</code> 目录，在 <code>_data</code> 目录中新建 <code>friends.json</code> 文件，文件内容如下所示：</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token punctuation\">[</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token string\">\"avatar\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"http://image.luokangyuan.com/1_qq_27922023.jpg\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"码酱\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"introduction\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"我不是大佬，只是在追寻大佬的脚步\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"url\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"http://luokangyuan.com/\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"title\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"前去学习\"</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token string\">\"avatar\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"http://image.luokangyuan.com/4027734.jpeg\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"闪烁之狐\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"introduction\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"编程界大佬，技术牛，人还特别好，不懂的都可以请教大佬\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"url\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"https://blinkfox.github.io/\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"title\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"前去学习\"</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token string\">\"avatar\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"http://image.luokangyuan.com/avatar.jpg\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"ja_rome\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"introduction\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"平凡的脚步也可以走出伟大的行程\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"url\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"https://me.csdn.net/jlh912008548\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"title\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"前去学习\"</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">]</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"新建-404-页\"><a href=\"#新建-404-页\" class=\"headerlink\" title=\"新建 404 页\"></a>新建 404 页</h3><p>如果在你的博客 <code>source</code> 目录下还没有 <code>404.md</code> 文件，那么你就需要新建一个</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">hexo new page <span class=\"token number\">404</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>编辑你刚刚新建的页面文件 <code>/source/404/index.md</code>，至少需要以下内容：</p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token punctuation\">---</span>\n<span class=\"token key atrule\">title</span><span class=\"token punctuation\">:</span> <span class=\"token number\">404</span>\n<span class=\"token key atrule\">date</span><span class=\"token punctuation\">:</span> <span class=\"token datetime number\">2018-09-30 17:25:30</span>\n<span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"404\"</span>\n<span class=\"token key atrule\">layout</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"404\"</span>\n<span class=\"token key atrule\">description</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"Oops～，我崩溃了！找不到你想要的页面 :(\"</span>\n<span class=\"token punctuation\">---</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"菜单导航配置\"><a href=\"#菜单导航配置\" class=\"headerlink\" title=\"菜单导航配置\"></a>菜单导航配置</h3><h4 id=\"配置基本菜单导航的名称、路径url和图标icon\"><a href=\"#配置基本菜单导航的名称、路径url和图标icon\" class=\"headerlink\" title=\"配置基本菜单导航的名称、路径url和图标icon.\"></a>配置基本菜单导航的名称、路径url和图标icon.</h4><p>1.菜单导航名称可以是中文也可以是英文(如：<code>Index</code>或<code>主页</code>) 2.图标icon 可以在<a href=\"https://fontawesome.com/icons\">Font Awesome</a> 中查找</p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">menu</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">Index</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">url</span><span class=\"token punctuation\">:</span> /\n    <span class=\"token key atrule\">icon</span><span class=\"token punctuation\">:</span> fas fa<span class=\"token punctuation\">-</span>home\n  <span class=\"token key atrule\">Tags</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">url</span><span class=\"token punctuation\">:</span> /tags\n    <span class=\"token key atrule\">icon</span><span class=\"token punctuation\">:</span> fas fa<span class=\"token punctuation\">-</span>tags\n  <span class=\"token key atrule\">Categories</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">url</span><span class=\"token punctuation\">:</span> /categories\n    <span class=\"token key atrule\">icon</span><span class=\"token punctuation\">:</span> fas fa<span class=\"token punctuation\">-</span>bookmark\n  <span class=\"token key atrule\">Archives</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">url</span><span class=\"token punctuation\">:</span> /archives\n    <span class=\"token key atrule\">icon</span><span class=\"token punctuation\">:</span> fas fa<span class=\"token punctuation\">-</span>archive\n  <span class=\"token key atrule\">About</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">url</span><span class=\"token punctuation\">:</span> /about\n    <span class=\"token key atrule\">icon</span><span class=\"token punctuation\">:</span> fas fa<span class=\"token punctuation\">-</span>user<span class=\"token punctuation\">-</span>circle\n  <span class=\"token key atrule\">Friends</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">url</span><span class=\"token punctuation\">:</span> /friends\n    <span class=\"token key atrule\">icon</span><span class=\"token punctuation\">:</span> fas fa<span class=\"token punctuation\">-</span>address<span class=\"token punctuation\">-</span>book<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"二级菜单配置方法\"><a href=\"#二级菜单配置方法\" class=\"headerlink\" title=\"二级菜单配置方法\"></a>二级菜单配置方法</h4><p>如果你需要二级菜单则可以在原基本菜单导航的基础上如下操作</p>\n<ol>\n<li>在需要添加二级菜单的一级菜单下添加<code>children</code>关键字(如:<code>About</code>菜单下添加<code>children</code>)</li>\n<li>在<code>children</code>下创建二级菜单的 名称name,路径url和图标icon.</li>\n<li>注意每个二级菜单模块前要加 <code>-</code>.</li>\n<li>注意缩进格式</li>\n</ol>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">menu</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">Index</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">url</span><span class=\"token punctuation\">:</span> /\n    <span class=\"token key atrule\">icon</span><span class=\"token punctuation\">:</span> fas fa<span class=\"token punctuation\">-</span>home\n  <span class=\"token key atrule\">Tags</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">url</span><span class=\"token punctuation\">:</span> /tags\n    <span class=\"token key atrule\">icon</span><span class=\"token punctuation\">:</span> fas fa<span class=\"token punctuation\">-</span>tags\n  <span class=\"token key atrule\">Categories</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">url</span><span class=\"token punctuation\">:</span> /categories\n    <span class=\"token key atrule\">icon</span><span class=\"token punctuation\">:</span> fas fa<span class=\"token punctuation\">-</span>bookmark\n  <span class=\"token key atrule\">Archives</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">url</span><span class=\"token punctuation\">:</span> /archives\n    <span class=\"token key atrule\">icon</span><span class=\"token punctuation\">:</span> fas fa<span class=\"token punctuation\">-</span>archive\n  <span class=\"token key atrule\">About</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">url</span><span class=\"token punctuation\">:</span> /about\n    <span class=\"token key atrule\">icon</span><span class=\"token punctuation\">:</span> fas fa<span class=\"token punctuation\">-</span>user<span class=\"token punctuation\">-</span>circle<span class=\"token punctuation\">-</span>o\n  <span class=\"token key atrule\">Friends</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">url</span><span class=\"token punctuation\">:</span> /friends\n    <span class=\"token key atrule\">icon</span><span class=\"token punctuation\">:</span> fas fa<span class=\"token punctuation\">-</span>address<span class=\"token punctuation\">-</span>book\n  <span class=\"token key atrule\">Medias</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">icon</span><span class=\"token punctuation\">:</span> fas fa<span class=\"token punctuation\">-</span>list\n    <span class=\"token key atrule\">children</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Music\n        <span class=\"token key atrule\">url</span><span class=\"token punctuation\">:</span> /music\n        <span class=\"token key atrule\">icon</span><span class=\"token punctuation\">:</span> fas fa<span class=\"token punctuation\">-</span>music\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Movies\n        <span class=\"token key atrule\">url</span><span class=\"token punctuation\">:</span> /movies\n        <span class=\"token key atrule\">icon</span><span class=\"token punctuation\">:</span> fas fa<span class=\"token punctuation\">-</span>film\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Books\n        <span class=\"token key atrule\">url</span><span class=\"token punctuation\">:</span> /books\n        <span class=\"token key atrule\">icon</span><span class=\"token punctuation\">:</span> fas fa<span class=\"token punctuation\">-</span>book\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Galleries\n        <span class=\"token key atrule\">url</span><span class=\"token punctuation\">:</span> /galleries\n        <span class=\"token key atrule\">icon</span><span class=\"token punctuation\">:</span> fas fa<span class=\"token punctuation\">-</span>image<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"代码高亮\"><a href=\"#代码高亮\" class=\"headerlink\" title=\"代码高亮\"></a>代码高亮</h3><p>从 Hexo5.0 版本开始自带了 <code>prismjs</code> 代码语法高亮的支持，本主题对此进行了改造支持。</p>\n<p>如果你的博客中曾经安装过 <code>hexo-prism-plugin</code> 的插件，那么你须要执行 <code>npm uninstall hexo-prism-plugin</code> 来卸载掉它，否则生成的代码中会有 <code>&#123;</code> 和 <code>&#125;</code> 的转义字符。</p>\n<p>然后，修改 Hexo 根目录下 <code>_config.yml</code> 文件中 <code>highlight.enable</code> 的值为 <code>false</code>，并将 <code>prismjs.enable</code> 的值设置为 <code>true</code>，主要配置如下：</p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">highlight</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">enable</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span>\n  <span class=\"token key atrule\">line_number</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>\n  <span class=\"token key atrule\">auto_detect</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span>\n  <span class=\"token key atrule\">tab_replace</span><span class=\"token punctuation\">:</span> <span class=\"token string\">''</span>\n  <span class=\"token key atrule\">wrap</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>\n  <span class=\"token key atrule\">hljs</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span>\n<span class=\"token key atrule\">prismjs</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">enable</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>\n  <span class=\"token key atrule\">preprocess</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>\n  <span class=\"token key atrule\">line_number</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>\n  <span class=\"token key atrule\">tab_replace</span><span class=\"token punctuation\">:</span> <span class=\"token string\">''</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>主题中默认的 <code>prismjs</code> 主题是 <code>Tomorrow Night</code>，如果你想定制自己的主题，可以前往 <a href=\"https://prismjs.com/download.html\">prismjs 下载页面</a> 定制下载自己喜欢的主题 <code>css</code> 文件，然后将此 css 主题文件取名为 <code>prism.css</code>，替换掉 <code>hexo-theme-matery</code> 主题文件夹中的 <code>source/libs/prism/prism.css</code> 文件即可。</p>\n<h3 id=\"搜索\"><a href=\"#搜索\" class=\"headerlink\" title=\"搜索\"></a>搜索</h3><p>本主题中还使用到了 <a href=\"https://github.com/wzpan/hexo-generator-search\">hexo-generator-search</a> 的 Hexo 插件来做内容搜索，安装命令如下：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> hexo-generator-search --save<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>在 Hexo 根目录下的 <code>_config.yml</code> 文件中，新增以下的配置项：</p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">search</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">path</span><span class=\"token punctuation\">:</span> search.xml\n  <span class=\"token key atrule\">field</span><span class=\"token punctuation\">:</span> post<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"中文链接转拼音（建议安装）\"><a href=\"#中文链接转拼音（建议安装）\" class=\"headerlink\" title=\"中文链接转拼音（建议安装）\"></a>中文链接转拼音（建议安装）</h3><p>如果你的文章名称是中文的，那么 Hexo 默认生成的永久链接也会有中文，这样不利于 <code>SEO</code>，且 <code>gitment</code> 评论对中文链接也不支持。我们可以用 <a href=\"https://github.com/viko16/hexo-permalink-pinyin\">hexo-permalink-pinyin</a> Hexo 插件使在生成文章时生成中文拼音的永久链接。</p>\n<p>安装命令如下：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> i hexo-permalink-pinyin --save<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>在 Hexo 根目录下的 <code>_config.yml</code> 文件中，新增以下的配置项：</p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">permalink_pinyin</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">enable</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>\n  <span class=\"token key atrule\">separator</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'-'</span> <span class=\"token comment\"># default: '-'</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<blockquote>\n<p><strong>注</strong>：除了此插件外，<a href=\"https://github.com/rozbo/hexo-abbrlink\">hexo-abbrlink</a> 插件也可以生成非中文的链接。</p>\n</blockquote>\n<h3 id=\"文章字数统计插件（建议安装）\"><a href=\"#文章字数统计插件（建议安装）\" class=\"headerlink\" title=\"文章字数统计插件（建议安装）\"></a>文章字数统计插件（建议安装）</h3><p>如果你想要在文章中显示文章字数、阅读时长信息，可以安装 <a href=\"https://github.com/willin/hexo-wordcount\">hexo-wordcount</a>插件。</p>\n<p>安装命令如下：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> i --save hexo-wordcount<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>然后只需在本主题下的 <code>_config.yml</code> 文件中，将各个文章字数相关的配置激活即可：</p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">postInfo</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">date</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>\n  <span class=\"token key atrule\">update</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span>\n  <span class=\"token key atrule\">wordCount</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span> <span class=\"token comment\"># 设置文章字数统计为 true.</span>\n  <span class=\"token key atrule\">totalCount</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span> <span class=\"token comment\"># 设置站点文章总字数统计为 true.</span>\n  <span class=\"token key atrule\">min2read</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span> <span class=\"token comment\"># 阅读时长.</span>\n  <span class=\"token key atrule\">readCount</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span> <span class=\"token comment\"># 阅读次数.</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"添加emoji表情支持（可选的）\"><a href=\"#添加emoji表情支持（可选的）\" class=\"headerlink\" title=\"添加emoji表情支持（可选的）\"></a>添加emoji表情支持（可选的）</h3><p>本主题新增了对<code>emoji</code>表情的支持，使用到了 <a href=\"https://npm.taobao.org/package/hexo-filter-github-emojis\">hexo-filter-github-emojis</a> 的 Hexo 插件来支持 <code>emoji</code>表情的生成，把对应的<code>markdown emoji</code>语法（<code>::</code>,例如：<code>:smile:</code>）转变成会跳跃的<code>emoji</code>表情，安装命令如下：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> hexo-filter-github-emojis --save<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>在 Hexo 根目录下的 <code>_config.yml</code> 文件中，新增以下的配置项：</p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">githubEmojis</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">enable</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>\n  <span class=\"token key atrule\">className</span><span class=\"token punctuation\">:</span> github<span class=\"token punctuation\">-</span>emoji\n  <span class=\"token key atrule\">inject</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>\n  <span class=\"token key atrule\">styles</span><span class=\"token punctuation\">:</span>\n  customEmojis<span class=\"token punctuation\">:</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>执行 <code>hexo clean &amp;&amp; hexo g</code> 重新生成博客文件，然后就可以在文章中对应位置看到你用<code>emoji</code>语法写的表情了。</p>\n<h3 id=\"添加-RSS-订阅支持（可选的）\"><a href=\"#添加-RSS-订阅支持（可选的）\" class=\"headerlink\" title=\"添加 RSS 订阅支持（可选的）\"></a>添加 RSS 订阅支持（可选的）</h3><p>本主题中还使用到了 <a href=\"https://github.com/hexojs/hexo-generator-feed\">hexo-generator-feed</a> 的 Hexo 插件来做 <code>RSS</code>，安装命令如下：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> hexo-generator-feed --save<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>在 Hexo 根目录下的 <code>_config.yml</code> 文件中，新增以下的配置项：</p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">feed</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> atom\n  <span class=\"token key atrule\">path</span><span class=\"token punctuation\">:</span> atom.xml\n  <span class=\"token key atrule\">limit</span><span class=\"token punctuation\">:</span> <span class=\"token number\">20</span>\n  <span class=\"token key atrule\">hub</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">content</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">content_limit</span><span class=\"token punctuation\">:</span> <span class=\"token number\">140</span>\n  <span class=\"token key atrule\">content_limit_delim</span><span class=\"token punctuation\">:</span> <span class=\"token string\">' '</span>\n  <span class=\"token key atrule\">order_by</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">-</span>date<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>执行 <code>hexo clean &amp;&amp; hexo g</code> 重新生成博客文件，然后在 <code>public</code> 文件夹中即可看到 <code>atom.xml</code> 文件，说明你已经安装成功了。</p>\n<h3 id=\"添加-DaoVoice-在线聊天功能（可选的）\"><a href=\"#添加-DaoVoice-在线聊天功能（可选的）\" class=\"headerlink\" title=\"添加 DaoVoice 在线聊天功能（可选的）\"></a>添加 <a href=\"http://www.daovoice.io/\">DaoVoice</a> 在线聊天功能（可选的）</h3><p>前往 <a href=\"http://www.daovoice.io/\">DaoVoice</a> 官网注册并且获取 <code>app_id</code>，并将 <code>app_id</code> 填入主题的 <code>_config.yml</code> 文件中。</p>\n<h3 id=\"添加-Tidio-在线聊天功能（可选的）\"><a href=\"#添加-Tidio-在线聊天功能（可选的）\" class=\"headerlink\" title=\"添加 Tidio 在线聊天功能（可选的）\"></a>添加 <a href=\"https://www.tidio.com/\">Tidio</a> 在线聊天功能（可选的）</h3><p>前往 <a href=\"https://www.tidio.com/\">Tidio</a> 官网注册并且获取 <code>Public Key</code>，并将 <code>Public Key</code> 填入主题的 <code>_config.yml</code> 文件中。</p>\n<h3 id=\"修改页脚\"><a href=\"#修改页脚\" class=\"headerlink\" title=\"修改页脚\"></a>修改页脚</h3><p>页脚信息可能需要做定制化修改，而且它不便于做成配置信息，所以可能需要你自己去再修改和加工。修改的地方在主题文件的 <code>/layout/_partial/footer.ejs</code> 文件中，包括站点、使用的主题、访问量等。</p>\n<h3 id=\"修改社交链接\"><a href=\"#修改社交链接\" class=\"headerlink\" title=\"修改社交链接\"></a>修改社交链接</h3><p>在主题的 <code>_config.yml</code> 文件中，默认支持 <code>QQ</code>、<code>GitHub</code> 和邮箱等的配置，你可以在主题文件的 <code>/layout/_partial/social-link.ejs</code> 文件中，新增、修改你需要的社交链接地址，增加链接可参考如下代码：</p>\n<pre class=\"line-numbers language-ejs\" data-language=\"ejs\"><code class=\"language-ejs\"><span class=\"token ejs language-ejs\"><span class=\"token delimiter punctuation\">&lt;%</span><span class=\"token language-javascript\"> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>theme<span class=\"token punctuation\">.</span>socialLink<span class=\"token punctuation\">.</span>github<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> </span><span class=\"token delimiter punctuation\">%></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token ejs language-ejs\"><span class=\"token delimiter punctuation\">&lt;%=</span><span class=\"token language-javascript\"> theme<span class=\"token punctuation\">.</span>socialLink<span class=\"token punctuation\">.</span>github </span><span class=\"token delimiter punctuation\">%></span></span><span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>tooltipped<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">target</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>_blank<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">data-tooltip</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>访问我的GitHub<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">data-position</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>top<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">data-delay</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>50<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>i</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>fab fa-github<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>i</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span>\n<span class=\"token ejs language-ejs\"><span class=\"token delimiter punctuation\">&lt;%</span><span class=\"token language-javascript\"> <span class=\"token punctuation\">&#125;</span> </span><span class=\"token delimiter punctuation\">%></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>其中，社交图标（如：<code>fa-github</code>）你可以在 <a href=\"https://fontawesome.com/icons\">Font Awesome</a> 中搜索找到。以下是常用社交图标的标识，供你参考：</p>\n<ul>\n<li>Facebook: <code>fab fa-facebook</code></li>\n<li>Twitter: <code>fab fa-twitter</code></li>\n<li>Google-plus: <code>fab fa-google-plus</code></li>\n<li>Linkedin: <code>fab fa-linkedin</code></li>\n<li>Tumblr: <code>fab fa-tumblr</code></li>\n<li>Medium: <code>fab fa-medium</code></li>\n<li>Slack: <code>fab fa-slack</code></li>\n<li>Sina Weibo: <code>fab fa-weibo</code></li>\n<li>Wechat: <code>fab fa-weixin</code></li>\n<li>QQ: <code>fab fa-qq</code></li>\n<li>Zhihu: <code>fab fa-zhihu</code></li>\n</ul>\n<blockquote>\n<p><strong>注意</strong>: 本主题中使用的 <code>Font Awesome</code> 版本为 <code>5.11.0</code>。</p>\n</blockquote>\n<h3 id=\"修改打赏的二维码图片\"><a href=\"#修改打赏的二维码图片\" class=\"headerlink\" title=\"修改打赏的二维码图片\"></a>修改打赏的二维码图片</h3><p>在主题文件的 <code>source/medias/reward</code> 文件中，你可以替换成你的的微信和支付宝的打赏二维码图片。</p>\n<h3 id=\"配置音乐播放器（可选的）\"><a href=\"#配置音乐播放器（可选的）\" class=\"headerlink\" title=\"配置音乐播放器（可选的）\"></a>配置音乐播放器（可选的）</h3><p>要支持音乐播放，在主题的 <code>_config.yml</code> 配置文件中激活music配置即可：</p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token comment\"># 是否在首页显示音乐</span>\n<span class=\"token key atrule\">music</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">enable</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>\n  <span class=\"token key atrule\">title</span><span class=\"token punctuation\">:</span>     \t    <span class=\"token comment\"># 非吸底模式有效</span>\n    <span class=\"token key atrule\">enable</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>\n    <span class=\"token key atrule\">show</span><span class=\"token punctuation\">:</span> 听听音乐\n  <span class=\"token key atrule\">server</span><span class=\"token punctuation\">:</span> netease   <span class=\"token comment\"># require music platform: netease, tencent, kugou, xiami, baidu</span>\n  <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> playlist    <span class=\"token comment\"># require song, playlist, album, search, artist</span>\n  <span class=\"token key atrule\">id</span><span class=\"token punctuation\">:</span> <span class=\"token number\">503838841</span>     <span class=\"token comment\"># require song id / playlist id / album id / search keyword</span>\n  <span class=\"token key atrule\">fixed</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span>      <span class=\"token comment\"># 开启吸底模式</span>\n  <span class=\"token key atrule\">autoplay</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span>   <span class=\"token comment\"># 是否自动播放</span>\n  <span class=\"token key atrule\">theme</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'#42b983'</span>\n  <span class=\"token key atrule\">loop</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'all'</span>       <span class=\"token comment\"># 音频循环播放, 可选值: 'all', 'one', 'none'</span>\n  <span class=\"token key atrule\">order</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'random'</span>   <span class=\"token comment\"># 音频循环顺序, 可选值: 'list', 'random'</span>\n  <span class=\"token key atrule\">preload</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'auto'</span>   <span class=\"token comment\"># 预加载，可选值: 'none', 'metadata', 'auto'</span>\n  <span class=\"token key atrule\">volume</span><span class=\"token punctuation\">:</span> <span class=\"token number\">0.7</span>       <span class=\"token comment\"># 默认音量，请注意播放器会记忆用户设置，用户手动设置音量后默认音量即失效</span>\n  <span class=\"token key atrule\">listFolded</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>  <span class=\"token comment\"># 列表默认折叠</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<blockquote>\n<p><code>server</code>可选<code>netease</code>（网易云音乐），<code>tencent</code>（QQ音乐），<code>kugou</code>（酷狗音乐），<code>xiami</code>（虾米音乐），</p>\n<p><code>baidu</code>（百度音乐）。</p>\n<p><code>type</code>可选<code>song</code>（歌曲），<code>playlist</code>（歌单），<code>album</code>（专辑），<code>search</code>（搜索关键字），<code>artist</code>（歌手）</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">id&#96;获取方法示例: 浏览器打开网易云音乐，点击我喜欢的音乐歌单，浏览器地址栏后面会有一串数字，&#96;playlist&#96;的&#96;id<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>即为这串数字。</p>\n</blockquote>\n<h2 id=\"文章-Front-matter-介绍\"><a href=\"#文章-Front-matter-介绍\" class=\"headerlink\" title=\"文章 Front-matter 介绍\"></a>文章 Front-matter 介绍</h2><h3 id=\"Front-matter-选项详解\"><a href=\"#Front-matter-选项详解\" class=\"headerlink\" title=\"Front-matter 选项详解\"></a>Front-matter 选项详解</h3><p><code>Front-matter</code> 选项中的所有内容均为<strong>非必填</strong>的。但我仍然建议至少填写 <code>title</code> 和 <code>date</code> 的值。</p>\n<table>\n<thead>\n<tr>\n<th>配置选项</th>\n<th>默认值</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>title</td>\n<td><code>Markdown</code> 的文件标题</td>\n<td>文章标题，强烈建议填写此选项</td>\n</tr>\n<tr>\n<td>date</td>\n<td>文件创建时的日期时间</td>\n<td>发布时间，强烈建议填写此选项，且最好保证全局唯一</td>\n</tr>\n<tr>\n<td>author</td>\n<td>根 <code>_config.yml</code> 中的 <code>author</code></td>\n<td>文章作者</td>\n</tr>\n<tr>\n<td>img</td>\n<td><code>featureImages</code> 中的某个值</td>\n<td>文章特征图，推荐使用图床(腾讯云、七牛云、又拍云等)来做图片的路径.如: <code>http://xxx.com/xxx.jpg</code></td>\n</tr>\n<tr>\n<td>top</td>\n<td><code>true</code></td>\n<td>推荐文章（文章是否置顶），如果 <code>top</code> 值为 <code>true</code>，则会作为首页推荐文章</td>\n</tr>\n<tr>\n<td>cover</td>\n<td><code>false</code></td>\n<td><code>v1.0.2</code>版本新增，表示该文章是否需要加入到首页轮播封面中</td>\n</tr>\n<tr>\n<td>coverImg</td>\n<td>无</td>\n<td><code>v1.0.2</code>版本新增，表示该文章在首页轮播封面需要显示的图片路径，如果没有，则默认使用文章的特色图片</td>\n</tr>\n<tr>\n<td>password</td>\n<td>无</td>\n<td>文章阅读密码，如果要对文章设置阅读验证密码的话，就可以设置 <code>password</code> 的值，该值必须是用 <code>SHA256</code> 加密后的密码，防止被他人识破。前提是在主题的 <code>config.yml</code> 中激活了 <code>verifyPassword</code> 选项</td>\n</tr>\n<tr>\n<td>toc</td>\n<td><code>true</code></td>\n<td>是否开启 TOC，可以针对某篇文章单独关闭 TOC 的功能。前提是在主题的 <code>config.yml</code> 中激活了 <code>toc</code> 选项</td>\n</tr>\n<tr>\n<td>mathjax</td>\n<td><code>false</code></td>\n<td>是否开启数学公式支持 ，本文章是否开启 <code>mathjax</code>，且需要在主题的 <code>_config.yml</code> 文件中也需要开启才行</td>\n</tr>\n<tr>\n<td>summary</td>\n<td>无</td>\n<td>文章摘要，自定义的文章摘要内容，如果这个属性有值，文章卡片摘要就显示这段文字，否则程序会自动截取文章的部分内容作为摘要</td>\n</tr>\n<tr>\n<td>categories</td>\n<td>无</td>\n<td>文章分类，本主题的分类表示宏观上大的分类，只建议一篇文章一个分类</td>\n</tr>\n<tr>\n<td>tags</td>\n<td>无</td>\n<td>文章标签，一篇文章可以多个标签</td>\n</tr>\n<tr>\n<td>keywords</td>\n<td>文章标题</td>\n<td>文章关键字，SEO 时需要</td>\n</tr>\n<tr>\n<td>reprintPolicy</td>\n<td>cc_by</td>\n<td>文章转载规则， 可以是 cc_by, cc_by_nd, cc_by_sa, cc_by_nc, cc_by_nc_nd, cc_by_nc_sa, cc0, noreprint 或 pay 中的一个</td>\n</tr>\n</tbody></table>\n<blockquote>\n<p><strong>注意</strong>:</p>\n<ol>\n<li>如果 <code>img</code> 属性不填写的话，文章特色图会根据文章标题的 <code>hashcode</code> 的值取余，然后选取主题中对应的特色图片，从而达到让所有文章的特色图<strong>各有特色</strong>。</li>\n<li><code>date</code> 的值尽量保证每篇文章是唯一的，因为本主题中 <code>Gitalk</code> 和 <code>Gitment</code> 识别 <code>id</code> 是通过 <code>date</code> 的值来作为唯一标识的。</li>\n<li>如果要对文章设置阅读验证密码的功能，不仅要在 Front-matter 中设置采用了 SHA256 加密的 password 的值，还需要在主题的 <code>_config.yml</code> 中激活了配置。有些在线的 SHA256 加密的地址，可供你使用：<a href=\"http://tool.oschina.net/encrypt?type=2\">开源中国在线工具</a>、<a href=\"http://encode.chahuo.com/\">chahuo</a>、<a href=\"http://tool.chinaz.com/tools/hash.aspx\">站长工具</a>。</li>\n<li>您可以在文章md文件的 front-matter 中指定 reprintPolicy 来给单个文章配置转载规则</li>\n</ol>\n</blockquote>\n<p>以下为文章的 <code>Front-matter</code> 示例。</p>\n<h3 id=\"最简示例\"><a href=\"#最简示例\" class=\"headerlink\" title=\"最简示例\"></a>最简示例</h3><pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token punctuation\">---</span>\n<span class=\"token key atrule\">title</span><span class=\"token punctuation\">:</span> typora<span class=\"token punctuation\">-</span>vue<span class=\"token punctuation\">-</span>theme主题介绍\n<span class=\"token key atrule\">date</span><span class=\"token punctuation\">:</span> <span class=\"token datetime number\">2018-09-07 09:25:00</span>\n<span class=\"token punctuation\">---</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"最全示例\"><a href=\"#最全示例\" class=\"headerlink\" title=\"最全示例\"></a>最全示例</h3><pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token punctuation\">---</span>\n<span class=\"token key atrule\">title</span><span class=\"token punctuation\">:</span> typora<span class=\"token punctuation\">-</span>vue<span class=\"token punctuation\">-</span>theme主题介绍\n<span class=\"token key atrule\">date</span><span class=\"token punctuation\">:</span> <span class=\"token datetime number\">2018-09-07 09:25:00</span>\n<span class=\"token key atrule\">author</span><span class=\"token punctuation\">:</span> 赵奇\n<span class=\"token key atrule\">img</span><span class=\"token punctuation\">:</span> /source/images/xxx.jpg\n<span class=\"token key atrule\">top</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>\n<span class=\"token key atrule\">cover</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>\n<span class=\"token key atrule\">coverImg</span><span class=\"token punctuation\">:</span> /images/1.jpg\n<span class=\"token key atrule\">password</span><span class=\"token punctuation\">:</span> 8d969eef6ecad3c29a3a629280e686cf0c3f5d5a86aff3ca12020c923adc6c92\n<span class=\"token key atrule\">toc</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span>\n<span class=\"token key atrule\">mathjax</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span>\n<span class=\"token key atrule\">summary</span><span class=\"token punctuation\">:</span> 这是你自定义的文章摘要内容，如果这个属性有值，文章卡片摘要就显示这段文字，否则程序会自动截取文章的部分内容作为摘要\n<span class=\"token key atrule\">categories</span><span class=\"token punctuation\">:</span> Markdown\n<span class=\"token key atrule\">tags</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> Typora\n  <span class=\"token punctuation\">-</span> Markdown\n<span class=\"token punctuation\">---</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<h2 id=\"自定制修改\"><a href=\"#自定制修改\" class=\"headerlink\" title=\"自定制修改\"></a>自定制修改</h2><p>在本主题的 <code>_config.yml</code> 中可以修改部分自定义信息，有以下几个部分：</p>\n<ul>\n<li>菜单</li>\n<li>我的梦想</li>\n<li>首页的音乐播放器和视频播放器配置</li>\n<li>是否显示推荐文章名称和按钮配置</li>\n<li><code>favicon</code> 和 <code>Logo</code></li>\n<li>个人信息</li>\n<li>TOC 目录</li>\n<li>文章打赏信息</li>\n<li>复制文章内容时追加版权信息</li>\n<li>MathJax</li>\n<li>文章字数统计、阅读时长</li>\n<li>点击页面的’爱心’效果</li>\n<li>我的项目</li>\n<li>我的技能</li>\n<li>我的相册</li>\n<li><code>Gitalk</code>、<code>Gitment</code>、<code>Valine</code> 和 <code>disqus</code> 评论配置</li>\n<li><a href=\"http://busuanzi.ibruce.info/\">不蒜子统计</a>和谷歌分析（<code>Google Analytics</code>）</li>\n<li>默认特色图的集合。当文章没有设置特色图时，本主题会根据文章标题的 <code>hashcode</code> 值取余，来选择展示对应的特色图</li>\n</ul>\n<p><strong>我认为个人博客应该都有自己的风格和特色</strong>。如果本主题中的诸多功能和主题色彩你不满意，可以在主题中自定义修改，很多更自由的功能和细节点的修改难以在主题的 <code>_config.yml</code> 中完成，需要修改源代码才来完成。以下列出了可能对你有用的地方：</p>\n<h3 id=\"修改主题颜色\"><a href=\"#修改主题颜色\" class=\"headerlink\" title=\"修改主题颜色\"></a>修改主题颜色</h3><p>在主题文件的 <code>/source/css/matery.css</code> 文件中，搜索 <code>.bg-color</code> 来修改背景颜色：</p>\n<pre class=\"line-numbers language-css\" data-language=\"css\"><code class=\"language-css\"><span class=\"token comment\">/* 整体背景颜色，包括导航、移动端的导航、页尾、标签页等的背景颜色. */</span>\n<span class=\"token selector\">.bg-color</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token property\">background-image</span><span class=\"token punctuation\">:</span> <span class=\"token function\">linear-gradient</span><span class=\"token punctuation\">(</span>to right<span class=\"token punctuation\">,</span> #4cbf30 0%<span class=\"token punctuation\">,</span> #0f9d58 100%<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token atrule\"><span class=\"token rule\">@-webkit-keyframes</span> rainbow</span> <span class=\"token punctuation\">&#123;</span>\n   <span class=\"token comment\">/* 动态切换背景颜色. */</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token atrule\"><span class=\"token rule\">@keyframes</span> rainbow</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">/* 动态切换背景颜色. */</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"修改-banner-图和文章特色图\"><a href=\"#修改-banner-图和文章特色图\" class=\"headerlink\" title=\"修改 banner 图和文章特色图\"></a>修改 banner 图和文章特色图</h3><p>你可以直接在 <code>/source/medias/banner</code> 文件夹中更换你喜欢的 <code>banner</code> 图片，主题代码中是每天动态切换一张，只需 <code>7</code> 张即可。如果你会 <code>JavaScript</code> 代码，可以修改成你自己喜欢切换逻辑，如：随机切换等，<code>banner</code> 切换的代码位置在 <code>/layout/_partial/bg-cover-content.ejs</code> 文件的 <code>&lt;script&gt;&lt;/script&gt;</code> 代码中：</p>\n<pre class=\"line-numbers language-ejs\" data-language=\"ejs\"><code class=\"language-ejs\">$('.bg-cover').css('background-image', 'url(/medias/banner/' + new Date().getDay() + '.jpg)');<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>在 <code>/source/medias/featureimages</code> 文件夹中默认有 24 张特色图片，你可以再增加或者减少，并需要在 <code>_config.yml</code> 做同步修改。</p>\n","site":{"data":{"friends":[{"avatar":"http://image.luokangyuan.com/1_qq_27922023.jpg","name":"码酱","introduction":"我不是大佬，只是在追寻大佬的脚步","url":"http://luokangyuan.com/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/4027734.jpeg","name":"闪烁之狐","introduction":"编程界大佬，技术牛，人还特别好，不懂的都可以请教大佬","url":"https://blinkfox.github.io/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/avatar.jpg","name":"ja_rome","introduction":"平凡的脚步也可以走出伟大的行程","url":"https://me.csdn.net/jlh912008548","title":"前去学习"},{"avatar":"https://image.3001.net/images/20200920/16006077095413.png","name":"国光","introduction":"逆水行舟，不进则退。","url":"https://www.sqlsec.com/","title":"前去学习"}]}},"excerpt":"","more":"<h2 id=\"特性\"><a href=\"#特性\" class=\"headerlink\" title=\"特性\"></a>特性</h2><ul>\n<li>简单漂亮，文章内容美观易读</li>\n<li><a href=\"https://material.io/\">Material Design</a> 设计</li>\n<li>响应式设计，博客在桌面端、平板、手机等设备上均能很好的展现</li>\n<li>首页轮播文章及每天动态切换 <code>Banner</code> 图片</li>\n<li>瀑布流式的博客文章列表（文章无特色图片时会有 <code>24</code> 张漂亮的图片代替）</li>\n<li>时间轴式的归档页</li>\n<li><strong>词云</strong>的标签页和<strong>雷达图</strong>的分类页</li>\n<li>丰富的关于我页面（包括关于我、文章统计图、我的项目、我的技能、相册等）</li>\n<li>可自定义的数据的友情链接页面</li>\n<li>支持文章置顶和文章打赏</li>\n<li>支持 <code>MathJax</code></li>\n<li><code>TOC</code> 目录</li>\n<li>可设置复制文章内容时追加版权信息</li>\n<li>可设置阅读文章时做密码验证</li>\n<li><a href=\"https://gitalk.github.io/\">Gitalk</a>、<a href=\"https://imsun.github.io/gitment/\">Gitment</a>、<a href=\"https://valine.js.org/\">Valine</a> 和 <a href=\"https://disqus.com/\">Disqus</a> 评论模块（推荐使用 <code>Gitalk</code>）</li>\n<li>集成了<a href=\"http://busuanzi.ibruce.info/\">不蒜子统计</a>、谷歌分析（<code>Google Analytics</code>）和文章字数统计等功能</li>\n<li>支持在首页的音乐播放和视频播放功能</li>\n<li>支持<code>emoji</code>表情，用<code>markdown emoji</code>语法书写直接生成对应的能<strong>跳跃</strong>的表情。</li>\n<li>支持 <a href=\"http://www.daovoice.io/\">DaoVoice</a>、<a href=\"https://www.tidio.com/\">Tidio</a> 在线聊天功能。</li>\n</ul>\n<h2 id=\"贡献者\"><a href=\"#贡献者\" class=\"headerlink\" title=\"贡献者\"></a>贡献者</h2><p>感谢下面列出的贡献者，没有他们，hexo-theme-matery 不会这么完美。</p>\n<ul>\n<li><a href=\"https://github.com/HarborZeng\">@HarborZeng</a></li>\n<li><a href=\"https://github.com/shw2018\">@shw2018</a></li>\n<li><a href=\"https://github.com/L1cardo\">@L1cardo</a></li>\n<li><a href=\"https://github.com/Five-great\">@Five-great</a></li>\n</ul>\n<h2 id=\"下载\"><a href=\"#下载\" class=\"headerlink\" title=\"下载\"></a>下载</h2><p>本主题<strong>推荐你使用 Hexo 5.0.0 及以上的版本</strong>。如果，你已经有一个自己的 <a href=\"https://hexo.io/zh-cn/\">Hexo</a> 博客了，建议你将 Hexo 升级到最新稳定的版本。</p>\n<p>点击 <a href=\"https://codeload.github.com/blinkfox/hexo-theme-matery/zip/master\">这里</a> 下载 <code>master</code> 分支的最新稳定版的代码，解压缩后，将 <code>hexo-theme-matery</code> 的文件夹复制到你 Hexo 的 <code>themes</code> 文件夹中即可。</p>\n<p>当然你也可以在你的 <code>themes</code> 文件夹下使用 <code>git clone</code> 命令来下载:</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">git clone https:&#x2F;&#x2F;github.com&#x2F;blinkfox&#x2F;hexo-theme-matery.git<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h2 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h2><h3 id=\"切换主题\"><a href=\"#切换主题\" class=\"headerlink\" title=\"切换主题\"></a>切换主题</h3><p>修改 Hexo 根目录下的 <code>_config.yml</code> 的 <code>theme</code> 的值：<code>theme: hexo-theme-matery</code></p>\n<h4 id=\"config-yml-文件的其它修改建议\"><a href=\"#config-yml-文件的其它修改建议\" class=\"headerlink\" title=\"_config.yml 文件的其它修改建议:\"></a><code>_config.yml</code> 文件的其它修改建议:</h4><ul>\n<li>请修改 <code>_config.yml</code> 的 <code>url</code> 的值为你的网站主 <code>URL</code>（如：<code>http://xxx.github.io</code>）。</li>\n<li>建议修改两个 <code>per_page</code> 的分页条数值为 <code>6</code> 的倍数，如：<code>12</code>、<code>18</code> 等，这样文章列表在各个屏幕下都能较好的显示。</li>\n<li>如果你是中文用户，则建议修改 <code>language</code> 的值为 <code>zh-CN</code>。</li>\n</ul>\n<h3 id=\"新建分类-categories-页\"><a href=\"#新建分类-categories-页\" class=\"headerlink\" title=\"新建分类 categories 页\"></a>新建分类 categories 页</h3><p><code>categories</code> 页是用来展示所有分类的页面，如果在你的博客 <code>source</code> 目录下还没有 <code>categories/index.md</code> 文件，那么你就需要新建一个，命令如下：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">hexo new page <span class=\"token string\">\"categories\"</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>编辑你刚刚新建的页面文件 <code>/source/categories/index.md</code>，至少需要以下内容：</p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token punctuation\">---</span>\n<span class=\"token key atrule\">title</span><span class=\"token punctuation\">:</span> categories\n<span class=\"token key atrule\">date</span><span class=\"token punctuation\">:</span> <span class=\"token datetime number\">2018-09-30 17:25:30</span>\n<span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"categories\"</span>\n<span class=\"token key atrule\">layout</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"categories\"</span>\n<span class=\"token punctuation\">---</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"新建标签-tags-页\"><a href=\"#新建标签-tags-页\" class=\"headerlink\" title=\"新建标签 tags 页\"></a>新建标签 tags 页</h3><p><code>tags</code> 页是用来展示所有标签的页面，如果在你的博客 <code>source</code> 目录下还没有 <code>tags/index.md</code> 文件，那么你就需要新建一个，命令如下：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">hexo new page <span class=\"token string\">\"tags\"</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>编辑你刚刚新建的页面文件 <code>/source/tags/index.md</code>，至少需要以下内容：</p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token punctuation\">---</span>\n<span class=\"token key atrule\">title</span><span class=\"token punctuation\">:</span> tags\n<span class=\"token key atrule\">date</span><span class=\"token punctuation\">:</span> <span class=\"token datetime number\">2018-09-30 18:23:38</span>\n<span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"tags\"</span>\n<span class=\"token key atrule\">layout</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"tags\"</span>\n<span class=\"token punctuation\">---</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"新建关于我-about-页\"><a href=\"#新建关于我-about-页\" class=\"headerlink\" title=\"新建关于我 about 页\"></a>新建关于我 about 页</h3><p><code>about</code> 页是用来展示<strong>关于我和我的博客</strong>信息的页面，如果在你的博客 <code>source</code> 目录下还没有 <code>about/index.md</code> 文件，那么你就需要新建一个，命令如下：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">hexo new page <span class=\"token string\">\"about\"</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>编辑你刚刚新建的页面文件 <code>/source/about/index.md</code>，至少需要以下内容：</p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token punctuation\">---</span>\n<span class=\"token key atrule\">title</span><span class=\"token punctuation\">:</span> about\n<span class=\"token key atrule\">date</span><span class=\"token punctuation\">:</span> <span class=\"token datetime number\">2018-09-30 17:25:30</span>\n<span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"about\"</span>\n<span class=\"token key atrule\">layout</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"about\"</span>\n<span class=\"token punctuation\">---</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"新建留言板-contact-页（可选的）\"><a href=\"#新建留言板-contact-页（可选的）\" class=\"headerlink\" title=\"新建留言板 contact 页（可选的）\"></a>新建留言板 contact 页（可选的）</h3><p><code>contact</code> 页是用来展示<strong>留言板</strong>信息的页面，如果在你的博客 <code>source</code> 目录下还没有 <code>contact/index.md</code> 文件，那么你就需要新建一个，命令如下：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">hexo new page <span class=\"token string\">\"contact\"</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>编辑你刚刚新建的页面文件 <code>/source/contact/index.md</code>，至少需要以下内容：</p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token punctuation\">---</span>\n<span class=\"token key atrule\">title</span><span class=\"token punctuation\">:</span> contact\n<span class=\"token key atrule\">date</span><span class=\"token punctuation\">:</span> <span class=\"token datetime number\">2018-09-30 17:25:30</span>\n<span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"contact\"</span>\n<span class=\"token key atrule\">layout</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"contact\"</span>\n<span class=\"token punctuation\">---</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<blockquote>\n<p><strong>注</strong>：本留言板功能依赖于第三方评论系统，请<strong>激活</strong>你的评论系统才有效果。并且在主题的 <code>_config.yml</code> 文件中，第 <code>19</code> 至 <code>21</code> 行的“<strong>菜单</strong>”配置，取消关于留言板的注释即可。</p>\n</blockquote>\n<h3 id=\"新建友情链接-friends-页（可选的）\"><a href=\"#新建友情链接-friends-页（可选的）\" class=\"headerlink\" title=\"新建友情链接 friends 页（可选的）\"></a>新建友情链接 friends 页（可选的）</h3><p><code>friends</code> 页是用来展示<strong>友情链接</strong>信息的页面，如果在你的博客 <code>source</code> 目录下还没有 <code>friends/index.md</code> 文件，那么你就需要新建一个，命令如下：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">hexo new page <span class=\"token string\">\"friends\"</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>编辑你刚刚新建的页面文件 <code>/source/friends/index.md</code>，至少需要以下内容：</p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token punctuation\">---</span>\n<span class=\"token key atrule\">title</span><span class=\"token punctuation\">:</span> friends\n<span class=\"token key atrule\">date</span><span class=\"token punctuation\">:</span> <span class=\"token datetime number\">2018-12-12 21:25:30</span>\n<span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"friends\"</span>\n<span class=\"token key atrule\">layout</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"friends\"</span>\n<span class=\"token punctuation\">---</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>同时，在你的博客 <code>source</code> 目录下新建 <code>_data</code> 目录，在 <code>_data</code> 目录中新建 <code>friends.json</code> 文件，文件内容如下所示：</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token punctuation\">[</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token string\">\"avatar\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"http://image.luokangyuan.com/1_qq_27922023.jpg\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"码酱\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"introduction\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"我不是大佬，只是在追寻大佬的脚步\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"url\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"http://luokangyuan.com/\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"title\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"前去学习\"</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token string\">\"avatar\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"http://image.luokangyuan.com/4027734.jpeg\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"闪烁之狐\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"introduction\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"编程界大佬，技术牛，人还特别好，不懂的都可以请教大佬\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"url\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"https://blinkfox.github.io/\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"title\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"前去学习\"</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token string\">\"avatar\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"http://image.luokangyuan.com/avatar.jpg\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"ja_rome\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"introduction\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"平凡的脚步也可以走出伟大的行程\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"url\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"https://me.csdn.net/jlh912008548\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"title\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"前去学习\"</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">]</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"新建-404-页\"><a href=\"#新建-404-页\" class=\"headerlink\" title=\"新建 404 页\"></a>新建 404 页</h3><p>如果在你的博客 <code>source</code> 目录下还没有 <code>404.md</code> 文件，那么你就需要新建一个</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">hexo new page <span class=\"token number\">404</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>编辑你刚刚新建的页面文件 <code>/source/404/index.md</code>，至少需要以下内容：</p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token punctuation\">---</span>\n<span class=\"token key atrule\">title</span><span class=\"token punctuation\">:</span> <span class=\"token number\">404</span>\n<span class=\"token key atrule\">date</span><span class=\"token punctuation\">:</span> <span class=\"token datetime number\">2018-09-30 17:25:30</span>\n<span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"404\"</span>\n<span class=\"token key atrule\">layout</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"404\"</span>\n<span class=\"token key atrule\">description</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"Oops～，我崩溃了！找不到你想要的页面 :(\"</span>\n<span class=\"token punctuation\">---</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"菜单导航配置\"><a href=\"#菜单导航配置\" class=\"headerlink\" title=\"菜单导航配置\"></a>菜单导航配置</h3><h4 id=\"配置基本菜单导航的名称、路径url和图标icon\"><a href=\"#配置基本菜单导航的名称、路径url和图标icon\" class=\"headerlink\" title=\"配置基本菜单导航的名称、路径url和图标icon.\"></a>配置基本菜单导航的名称、路径url和图标icon.</h4><p>1.菜单导航名称可以是中文也可以是英文(如：<code>Index</code>或<code>主页</code>) 2.图标icon 可以在<a href=\"https://fontawesome.com/icons\">Font Awesome</a> 中查找</p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">menu</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">Index</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">url</span><span class=\"token punctuation\">:</span> /\n    <span class=\"token key atrule\">icon</span><span class=\"token punctuation\">:</span> fas fa<span class=\"token punctuation\">-</span>home\n  <span class=\"token key atrule\">Tags</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">url</span><span class=\"token punctuation\">:</span> /tags\n    <span class=\"token key atrule\">icon</span><span class=\"token punctuation\">:</span> fas fa<span class=\"token punctuation\">-</span>tags\n  <span class=\"token key atrule\">Categories</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">url</span><span class=\"token punctuation\">:</span> /categories\n    <span class=\"token key atrule\">icon</span><span class=\"token punctuation\">:</span> fas fa<span class=\"token punctuation\">-</span>bookmark\n  <span class=\"token key atrule\">Archives</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">url</span><span class=\"token punctuation\">:</span> /archives\n    <span class=\"token key atrule\">icon</span><span class=\"token punctuation\">:</span> fas fa<span class=\"token punctuation\">-</span>archive\n  <span class=\"token key atrule\">About</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">url</span><span class=\"token punctuation\">:</span> /about\n    <span class=\"token key atrule\">icon</span><span class=\"token punctuation\">:</span> fas fa<span class=\"token punctuation\">-</span>user<span class=\"token punctuation\">-</span>circle\n  <span class=\"token key atrule\">Friends</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">url</span><span class=\"token punctuation\">:</span> /friends\n    <span class=\"token key atrule\">icon</span><span class=\"token punctuation\">:</span> fas fa<span class=\"token punctuation\">-</span>address<span class=\"token punctuation\">-</span>book<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"二级菜单配置方法\"><a href=\"#二级菜单配置方法\" class=\"headerlink\" title=\"二级菜单配置方法\"></a>二级菜单配置方法</h4><p>如果你需要二级菜单则可以在原基本菜单导航的基础上如下操作</p>\n<ol>\n<li>在需要添加二级菜单的一级菜单下添加<code>children</code>关键字(如:<code>About</code>菜单下添加<code>children</code>)</li>\n<li>在<code>children</code>下创建二级菜单的 名称name,路径url和图标icon.</li>\n<li>注意每个二级菜单模块前要加 <code>-</code>.</li>\n<li>注意缩进格式</li>\n</ol>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">menu</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">Index</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">url</span><span class=\"token punctuation\">:</span> /\n    <span class=\"token key atrule\">icon</span><span class=\"token punctuation\">:</span> fas fa<span class=\"token punctuation\">-</span>home\n  <span class=\"token key atrule\">Tags</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">url</span><span class=\"token punctuation\">:</span> /tags\n    <span class=\"token key atrule\">icon</span><span class=\"token punctuation\">:</span> fas fa<span class=\"token punctuation\">-</span>tags\n  <span class=\"token key atrule\">Categories</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">url</span><span class=\"token punctuation\">:</span> /categories\n    <span class=\"token key atrule\">icon</span><span class=\"token punctuation\">:</span> fas fa<span class=\"token punctuation\">-</span>bookmark\n  <span class=\"token key atrule\">Archives</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">url</span><span class=\"token punctuation\">:</span> /archives\n    <span class=\"token key atrule\">icon</span><span class=\"token punctuation\">:</span> fas fa<span class=\"token punctuation\">-</span>archive\n  <span class=\"token key atrule\">About</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">url</span><span class=\"token punctuation\">:</span> /about\n    <span class=\"token key atrule\">icon</span><span class=\"token punctuation\">:</span> fas fa<span class=\"token punctuation\">-</span>user<span class=\"token punctuation\">-</span>circle<span class=\"token punctuation\">-</span>o\n  <span class=\"token key atrule\">Friends</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">url</span><span class=\"token punctuation\">:</span> /friends\n    <span class=\"token key atrule\">icon</span><span class=\"token punctuation\">:</span> fas fa<span class=\"token punctuation\">-</span>address<span class=\"token punctuation\">-</span>book\n  <span class=\"token key atrule\">Medias</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">icon</span><span class=\"token punctuation\">:</span> fas fa<span class=\"token punctuation\">-</span>list\n    <span class=\"token key atrule\">children</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Music\n        <span class=\"token key atrule\">url</span><span class=\"token punctuation\">:</span> /music\n        <span class=\"token key atrule\">icon</span><span class=\"token punctuation\">:</span> fas fa<span class=\"token punctuation\">-</span>music\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Movies\n        <span class=\"token key atrule\">url</span><span class=\"token punctuation\">:</span> /movies\n        <span class=\"token key atrule\">icon</span><span class=\"token punctuation\">:</span> fas fa<span class=\"token punctuation\">-</span>film\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Books\n        <span class=\"token key atrule\">url</span><span class=\"token punctuation\">:</span> /books\n        <span class=\"token key atrule\">icon</span><span class=\"token punctuation\">:</span> fas fa<span class=\"token punctuation\">-</span>book\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Galleries\n        <span class=\"token key atrule\">url</span><span class=\"token punctuation\">:</span> /galleries\n        <span class=\"token key atrule\">icon</span><span class=\"token punctuation\">:</span> fas fa<span class=\"token punctuation\">-</span>image<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"代码高亮\"><a href=\"#代码高亮\" class=\"headerlink\" title=\"代码高亮\"></a>代码高亮</h3><p>从 Hexo5.0 版本开始自带了 <code>prismjs</code> 代码语法高亮的支持，本主题对此进行了改造支持。</p>\n<p>如果你的博客中曾经安装过 <code>hexo-prism-plugin</code> 的插件，那么你须要执行 <code>npm uninstall hexo-prism-plugin</code> 来卸载掉它，否则生成的代码中会有 <code>&#123;</code> 和 <code>&#125;</code> 的转义字符。</p>\n<p>然后，修改 Hexo 根目录下 <code>_config.yml</code> 文件中 <code>highlight.enable</code> 的值为 <code>false</code>，并将 <code>prismjs.enable</code> 的值设置为 <code>true</code>，主要配置如下：</p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">highlight</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">enable</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span>\n  <span class=\"token key atrule\">line_number</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>\n  <span class=\"token key atrule\">auto_detect</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span>\n  <span class=\"token key atrule\">tab_replace</span><span class=\"token punctuation\">:</span> <span class=\"token string\">''</span>\n  <span class=\"token key atrule\">wrap</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>\n  <span class=\"token key atrule\">hljs</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span>\n<span class=\"token key atrule\">prismjs</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">enable</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>\n  <span class=\"token key atrule\">preprocess</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>\n  <span class=\"token key atrule\">line_number</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>\n  <span class=\"token key atrule\">tab_replace</span><span class=\"token punctuation\">:</span> <span class=\"token string\">''</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>主题中默认的 <code>prismjs</code> 主题是 <code>Tomorrow Night</code>，如果你想定制自己的主题，可以前往 <a href=\"https://prismjs.com/download.html\">prismjs 下载页面</a> 定制下载自己喜欢的主题 <code>css</code> 文件，然后将此 css 主题文件取名为 <code>prism.css</code>，替换掉 <code>hexo-theme-matery</code> 主题文件夹中的 <code>source/libs/prism/prism.css</code> 文件即可。</p>\n<h3 id=\"搜索\"><a href=\"#搜索\" class=\"headerlink\" title=\"搜索\"></a>搜索</h3><p>本主题中还使用到了 <a href=\"https://github.com/wzpan/hexo-generator-search\">hexo-generator-search</a> 的 Hexo 插件来做内容搜索，安装命令如下：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> hexo-generator-search --save<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>在 Hexo 根目录下的 <code>_config.yml</code> 文件中，新增以下的配置项：</p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">search</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">path</span><span class=\"token punctuation\">:</span> search.xml\n  <span class=\"token key atrule\">field</span><span class=\"token punctuation\">:</span> post<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"中文链接转拼音（建议安装）\"><a href=\"#中文链接转拼音（建议安装）\" class=\"headerlink\" title=\"中文链接转拼音（建议安装）\"></a>中文链接转拼音（建议安装）</h3><p>如果你的文章名称是中文的，那么 Hexo 默认生成的永久链接也会有中文，这样不利于 <code>SEO</code>，且 <code>gitment</code> 评论对中文链接也不支持。我们可以用 <a href=\"https://github.com/viko16/hexo-permalink-pinyin\">hexo-permalink-pinyin</a> Hexo 插件使在生成文章时生成中文拼音的永久链接。</p>\n<p>安装命令如下：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> i hexo-permalink-pinyin --save<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>在 Hexo 根目录下的 <code>_config.yml</code> 文件中，新增以下的配置项：</p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">permalink_pinyin</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">enable</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>\n  <span class=\"token key atrule\">separator</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'-'</span> <span class=\"token comment\"># default: '-'</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<blockquote>\n<p><strong>注</strong>：除了此插件外，<a href=\"https://github.com/rozbo/hexo-abbrlink\">hexo-abbrlink</a> 插件也可以生成非中文的链接。</p>\n</blockquote>\n<h3 id=\"文章字数统计插件（建议安装）\"><a href=\"#文章字数统计插件（建议安装）\" class=\"headerlink\" title=\"文章字数统计插件（建议安装）\"></a>文章字数统计插件（建议安装）</h3><p>如果你想要在文章中显示文章字数、阅读时长信息，可以安装 <a href=\"https://github.com/willin/hexo-wordcount\">hexo-wordcount</a>插件。</p>\n<p>安装命令如下：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> i --save hexo-wordcount<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>然后只需在本主题下的 <code>_config.yml</code> 文件中，将各个文章字数相关的配置激活即可：</p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">postInfo</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">date</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>\n  <span class=\"token key atrule\">update</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span>\n  <span class=\"token key atrule\">wordCount</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span> <span class=\"token comment\"># 设置文章字数统计为 true.</span>\n  <span class=\"token key atrule\">totalCount</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span> <span class=\"token comment\"># 设置站点文章总字数统计为 true.</span>\n  <span class=\"token key atrule\">min2read</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span> <span class=\"token comment\"># 阅读时长.</span>\n  <span class=\"token key atrule\">readCount</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span> <span class=\"token comment\"># 阅读次数.</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"添加emoji表情支持（可选的）\"><a href=\"#添加emoji表情支持（可选的）\" class=\"headerlink\" title=\"添加emoji表情支持（可选的）\"></a>添加emoji表情支持（可选的）</h3><p>本主题新增了对<code>emoji</code>表情的支持，使用到了 <a href=\"https://npm.taobao.org/package/hexo-filter-github-emojis\">hexo-filter-github-emojis</a> 的 Hexo 插件来支持 <code>emoji</code>表情的生成，把对应的<code>markdown emoji</code>语法（<code>::</code>,例如：<code>:smile:</code>）转变成会跳跃的<code>emoji</code>表情，安装命令如下：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> hexo-filter-github-emojis --save<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>在 Hexo 根目录下的 <code>_config.yml</code> 文件中，新增以下的配置项：</p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">githubEmojis</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">enable</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>\n  <span class=\"token key atrule\">className</span><span class=\"token punctuation\">:</span> github<span class=\"token punctuation\">-</span>emoji\n  <span class=\"token key atrule\">inject</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>\n  <span class=\"token key atrule\">styles</span><span class=\"token punctuation\">:</span>\n  customEmojis<span class=\"token punctuation\">:</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>执行 <code>hexo clean &amp;&amp; hexo g</code> 重新生成博客文件，然后就可以在文章中对应位置看到你用<code>emoji</code>语法写的表情了。</p>\n<h3 id=\"添加-RSS-订阅支持（可选的）\"><a href=\"#添加-RSS-订阅支持（可选的）\" class=\"headerlink\" title=\"添加 RSS 订阅支持（可选的）\"></a>添加 RSS 订阅支持（可选的）</h3><p>本主题中还使用到了 <a href=\"https://github.com/hexojs/hexo-generator-feed\">hexo-generator-feed</a> 的 Hexo 插件来做 <code>RSS</code>，安装命令如下：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> hexo-generator-feed --save<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>在 Hexo 根目录下的 <code>_config.yml</code> 文件中，新增以下的配置项：</p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">feed</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> atom\n  <span class=\"token key atrule\">path</span><span class=\"token punctuation\">:</span> atom.xml\n  <span class=\"token key atrule\">limit</span><span class=\"token punctuation\">:</span> <span class=\"token number\">20</span>\n  <span class=\"token key atrule\">hub</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">content</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">content_limit</span><span class=\"token punctuation\">:</span> <span class=\"token number\">140</span>\n  <span class=\"token key atrule\">content_limit_delim</span><span class=\"token punctuation\">:</span> <span class=\"token string\">' '</span>\n  <span class=\"token key atrule\">order_by</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">-</span>date<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>执行 <code>hexo clean &amp;&amp; hexo g</code> 重新生成博客文件，然后在 <code>public</code> 文件夹中即可看到 <code>atom.xml</code> 文件，说明你已经安装成功了。</p>\n<h3 id=\"添加-DaoVoice-在线聊天功能（可选的）\"><a href=\"#添加-DaoVoice-在线聊天功能（可选的）\" class=\"headerlink\" title=\"添加 DaoVoice 在线聊天功能（可选的）\"></a>添加 <a href=\"http://www.daovoice.io/\">DaoVoice</a> 在线聊天功能（可选的）</h3><p>前往 <a href=\"http://www.daovoice.io/\">DaoVoice</a> 官网注册并且获取 <code>app_id</code>，并将 <code>app_id</code> 填入主题的 <code>_config.yml</code> 文件中。</p>\n<h3 id=\"添加-Tidio-在线聊天功能（可选的）\"><a href=\"#添加-Tidio-在线聊天功能（可选的）\" class=\"headerlink\" title=\"添加 Tidio 在线聊天功能（可选的）\"></a>添加 <a href=\"https://www.tidio.com/\">Tidio</a> 在线聊天功能（可选的）</h3><p>前往 <a href=\"https://www.tidio.com/\">Tidio</a> 官网注册并且获取 <code>Public Key</code>，并将 <code>Public Key</code> 填入主题的 <code>_config.yml</code> 文件中。</p>\n<h3 id=\"修改页脚\"><a href=\"#修改页脚\" class=\"headerlink\" title=\"修改页脚\"></a>修改页脚</h3><p>页脚信息可能需要做定制化修改，而且它不便于做成配置信息，所以可能需要你自己去再修改和加工。修改的地方在主题文件的 <code>/layout/_partial/footer.ejs</code> 文件中，包括站点、使用的主题、访问量等。</p>\n<h3 id=\"修改社交链接\"><a href=\"#修改社交链接\" class=\"headerlink\" title=\"修改社交链接\"></a>修改社交链接</h3><p>在主题的 <code>_config.yml</code> 文件中，默认支持 <code>QQ</code>、<code>GitHub</code> 和邮箱等的配置，你可以在主题文件的 <code>/layout/_partial/social-link.ejs</code> 文件中，新增、修改你需要的社交链接地址，增加链接可参考如下代码：</p>\n<pre class=\"line-numbers language-ejs\" data-language=\"ejs\"><code class=\"language-ejs\"><span class=\"token ejs language-ejs\"><span class=\"token delimiter punctuation\">&lt;%</span><span class=\"token language-javascript\"> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>theme<span class=\"token punctuation\">.</span>socialLink<span class=\"token punctuation\">.</span>github<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> </span><span class=\"token delimiter punctuation\">%></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token ejs language-ejs\"><span class=\"token delimiter punctuation\">&lt;%=</span><span class=\"token language-javascript\"> theme<span class=\"token punctuation\">.</span>socialLink<span class=\"token punctuation\">.</span>github </span><span class=\"token delimiter punctuation\">%></span></span><span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>tooltipped<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">target</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>_blank<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">data-tooltip</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>访问我的GitHub<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">data-position</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>top<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">data-delay</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>50<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>i</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>fab fa-github<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>i</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span>\n<span class=\"token ejs language-ejs\"><span class=\"token delimiter punctuation\">&lt;%</span><span class=\"token language-javascript\"> <span class=\"token punctuation\">&#125;</span> </span><span class=\"token delimiter punctuation\">%></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>其中，社交图标（如：<code>fa-github</code>）你可以在 <a href=\"https://fontawesome.com/icons\">Font Awesome</a> 中搜索找到。以下是常用社交图标的标识，供你参考：</p>\n<ul>\n<li>Facebook: <code>fab fa-facebook</code></li>\n<li>Twitter: <code>fab fa-twitter</code></li>\n<li>Google-plus: <code>fab fa-google-plus</code></li>\n<li>Linkedin: <code>fab fa-linkedin</code></li>\n<li>Tumblr: <code>fab fa-tumblr</code></li>\n<li>Medium: <code>fab fa-medium</code></li>\n<li>Slack: <code>fab fa-slack</code></li>\n<li>Sina Weibo: <code>fab fa-weibo</code></li>\n<li>Wechat: <code>fab fa-weixin</code></li>\n<li>QQ: <code>fab fa-qq</code></li>\n<li>Zhihu: <code>fab fa-zhihu</code></li>\n</ul>\n<blockquote>\n<p><strong>注意</strong>: 本主题中使用的 <code>Font Awesome</code> 版本为 <code>5.11.0</code>。</p>\n</blockquote>\n<h3 id=\"修改打赏的二维码图片\"><a href=\"#修改打赏的二维码图片\" class=\"headerlink\" title=\"修改打赏的二维码图片\"></a>修改打赏的二维码图片</h3><p>在主题文件的 <code>source/medias/reward</code> 文件中，你可以替换成你的的微信和支付宝的打赏二维码图片。</p>\n<h3 id=\"配置音乐播放器（可选的）\"><a href=\"#配置音乐播放器（可选的）\" class=\"headerlink\" title=\"配置音乐播放器（可选的）\"></a>配置音乐播放器（可选的）</h3><p>要支持音乐播放，在主题的 <code>_config.yml</code> 配置文件中激活music配置即可：</p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token comment\"># 是否在首页显示音乐</span>\n<span class=\"token key atrule\">music</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">enable</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>\n  <span class=\"token key atrule\">title</span><span class=\"token punctuation\">:</span>     \t    <span class=\"token comment\"># 非吸底模式有效</span>\n    <span class=\"token key atrule\">enable</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>\n    <span class=\"token key atrule\">show</span><span class=\"token punctuation\">:</span> 听听音乐\n  <span class=\"token key atrule\">server</span><span class=\"token punctuation\">:</span> netease   <span class=\"token comment\"># require music platform: netease, tencent, kugou, xiami, baidu</span>\n  <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> playlist    <span class=\"token comment\"># require song, playlist, album, search, artist</span>\n  <span class=\"token key atrule\">id</span><span class=\"token punctuation\">:</span> <span class=\"token number\">503838841</span>     <span class=\"token comment\"># require song id / playlist id / album id / search keyword</span>\n  <span class=\"token key atrule\">fixed</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span>      <span class=\"token comment\"># 开启吸底模式</span>\n  <span class=\"token key atrule\">autoplay</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span>   <span class=\"token comment\"># 是否自动播放</span>\n  <span class=\"token key atrule\">theme</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'#42b983'</span>\n  <span class=\"token key atrule\">loop</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'all'</span>       <span class=\"token comment\"># 音频循环播放, 可选值: 'all', 'one', 'none'</span>\n  <span class=\"token key atrule\">order</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'random'</span>   <span class=\"token comment\"># 音频循环顺序, 可选值: 'list', 'random'</span>\n  <span class=\"token key atrule\">preload</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'auto'</span>   <span class=\"token comment\"># 预加载，可选值: 'none', 'metadata', 'auto'</span>\n  <span class=\"token key atrule\">volume</span><span class=\"token punctuation\">:</span> <span class=\"token number\">0.7</span>       <span class=\"token comment\"># 默认音量，请注意播放器会记忆用户设置，用户手动设置音量后默认音量即失效</span>\n  <span class=\"token key atrule\">listFolded</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>  <span class=\"token comment\"># 列表默认折叠</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<blockquote>\n<p><code>server</code>可选<code>netease</code>（网易云音乐），<code>tencent</code>（QQ音乐），<code>kugou</code>（酷狗音乐），<code>xiami</code>（虾米音乐），</p>\n<p><code>baidu</code>（百度音乐）。</p>\n<p><code>type</code>可选<code>song</code>（歌曲），<code>playlist</code>（歌单），<code>album</code>（专辑），<code>search</code>（搜索关键字），<code>artist</code>（歌手）</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">id&#96;获取方法示例: 浏览器打开网易云音乐，点击我喜欢的音乐歌单，浏览器地址栏后面会有一串数字，&#96;playlist&#96;的&#96;id<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>即为这串数字。</p>\n</blockquote>\n<h2 id=\"文章-Front-matter-介绍\"><a href=\"#文章-Front-matter-介绍\" class=\"headerlink\" title=\"文章 Front-matter 介绍\"></a>文章 Front-matter 介绍</h2><h3 id=\"Front-matter-选项详解\"><a href=\"#Front-matter-选项详解\" class=\"headerlink\" title=\"Front-matter 选项详解\"></a>Front-matter 选项详解</h3><p><code>Front-matter</code> 选项中的所有内容均为<strong>非必填</strong>的。但我仍然建议至少填写 <code>title</code> 和 <code>date</code> 的值。</p>\n<table>\n<thead>\n<tr>\n<th>配置选项</th>\n<th>默认值</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>title</td>\n<td><code>Markdown</code> 的文件标题</td>\n<td>文章标题，强烈建议填写此选项</td>\n</tr>\n<tr>\n<td>date</td>\n<td>文件创建时的日期时间</td>\n<td>发布时间，强烈建议填写此选项，且最好保证全局唯一</td>\n</tr>\n<tr>\n<td>author</td>\n<td>根 <code>_config.yml</code> 中的 <code>author</code></td>\n<td>文章作者</td>\n</tr>\n<tr>\n<td>img</td>\n<td><code>featureImages</code> 中的某个值</td>\n<td>文章特征图，推荐使用图床(腾讯云、七牛云、又拍云等)来做图片的路径.如: <code>http://xxx.com/xxx.jpg</code></td>\n</tr>\n<tr>\n<td>top</td>\n<td><code>true</code></td>\n<td>推荐文章（文章是否置顶），如果 <code>top</code> 值为 <code>true</code>，则会作为首页推荐文章</td>\n</tr>\n<tr>\n<td>cover</td>\n<td><code>false</code></td>\n<td><code>v1.0.2</code>版本新增，表示该文章是否需要加入到首页轮播封面中</td>\n</tr>\n<tr>\n<td>coverImg</td>\n<td>无</td>\n<td><code>v1.0.2</code>版本新增，表示该文章在首页轮播封面需要显示的图片路径，如果没有，则默认使用文章的特色图片</td>\n</tr>\n<tr>\n<td>password</td>\n<td>无</td>\n<td>文章阅读密码，如果要对文章设置阅读验证密码的话，就可以设置 <code>password</code> 的值，该值必须是用 <code>SHA256</code> 加密后的密码，防止被他人识破。前提是在主题的 <code>config.yml</code> 中激活了 <code>verifyPassword</code> 选项</td>\n</tr>\n<tr>\n<td>toc</td>\n<td><code>true</code></td>\n<td>是否开启 TOC，可以针对某篇文章单独关闭 TOC 的功能。前提是在主题的 <code>config.yml</code> 中激活了 <code>toc</code> 选项</td>\n</tr>\n<tr>\n<td>mathjax</td>\n<td><code>false</code></td>\n<td>是否开启数学公式支持 ，本文章是否开启 <code>mathjax</code>，且需要在主题的 <code>_config.yml</code> 文件中也需要开启才行</td>\n</tr>\n<tr>\n<td>summary</td>\n<td>无</td>\n<td>文章摘要，自定义的文章摘要内容，如果这个属性有值，文章卡片摘要就显示这段文字，否则程序会自动截取文章的部分内容作为摘要</td>\n</tr>\n<tr>\n<td>categories</td>\n<td>无</td>\n<td>文章分类，本主题的分类表示宏观上大的分类，只建议一篇文章一个分类</td>\n</tr>\n<tr>\n<td>tags</td>\n<td>无</td>\n<td>文章标签，一篇文章可以多个标签</td>\n</tr>\n<tr>\n<td>keywords</td>\n<td>文章标题</td>\n<td>文章关键字，SEO 时需要</td>\n</tr>\n<tr>\n<td>reprintPolicy</td>\n<td>cc_by</td>\n<td>文章转载规则， 可以是 cc_by, cc_by_nd, cc_by_sa, cc_by_nc, cc_by_nc_nd, cc_by_nc_sa, cc0, noreprint 或 pay 中的一个</td>\n</tr>\n</tbody></table>\n<blockquote>\n<p><strong>注意</strong>:</p>\n<ol>\n<li>如果 <code>img</code> 属性不填写的话，文章特色图会根据文章标题的 <code>hashcode</code> 的值取余，然后选取主题中对应的特色图片，从而达到让所有文章的特色图<strong>各有特色</strong>。</li>\n<li><code>date</code> 的值尽量保证每篇文章是唯一的，因为本主题中 <code>Gitalk</code> 和 <code>Gitment</code> 识别 <code>id</code> 是通过 <code>date</code> 的值来作为唯一标识的。</li>\n<li>如果要对文章设置阅读验证密码的功能，不仅要在 Front-matter 中设置采用了 SHA256 加密的 password 的值，还需要在主题的 <code>_config.yml</code> 中激活了配置。有些在线的 SHA256 加密的地址，可供你使用：<a href=\"http://tool.oschina.net/encrypt?type=2\">开源中国在线工具</a>、<a href=\"http://encode.chahuo.com/\">chahuo</a>、<a href=\"http://tool.chinaz.com/tools/hash.aspx\">站长工具</a>。</li>\n<li>您可以在文章md文件的 front-matter 中指定 reprintPolicy 来给单个文章配置转载规则</li>\n</ol>\n</blockquote>\n<p>以下为文章的 <code>Front-matter</code> 示例。</p>\n<h3 id=\"最简示例\"><a href=\"#最简示例\" class=\"headerlink\" title=\"最简示例\"></a>最简示例</h3><pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token punctuation\">---</span>\n<span class=\"token key atrule\">title</span><span class=\"token punctuation\">:</span> typora<span class=\"token punctuation\">-</span>vue<span class=\"token punctuation\">-</span>theme主题介绍\n<span class=\"token key atrule\">date</span><span class=\"token punctuation\">:</span> <span class=\"token datetime number\">2018-09-07 09:25:00</span>\n<span class=\"token punctuation\">---</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"最全示例\"><a href=\"#最全示例\" class=\"headerlink\" title=\"最全示例\"></a>最全示例</h3><pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token punctuation\">---</span>\n<span class=\"token key atrule\">title</span><span class=\"token punctuation\">:</span> typora<span class=\"token punctuation\">-</span>vue<span class=\"token punctuation\">-</span>theme主题介绍\n<span class=\"token key atrule\">date</span><span class=\"token punctuation\">:</span> <span class=\"token datetime number\">2018-09-07 09:25:00</span>\n<span class=\"token key atrule\">author</span><span class=\"token punctuation\">:</span> 赵奇\n<span class=\"token key atrule\">img</span><span class=\"token punctuation\">:</span> /source/images/xxx.jpg\n<span class=\"token key atrule\">top</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>\n<span class=\"token key atrule\">cover</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>\n<span class=\"token key atrule\">coverImg</span><span class=\"token punctuation\">:</span> /images/1.jpg\n<span class=\"token key atrule\">password</span><span class=\"token punctuation\">:</span> 8d969eef6ecad3c29a3a629280e686cf0c3f5d5a86aff3ca12020c923adc6c92\n<span class=\"token key atrule\">toc</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span>\n<span class=\"token key atrule\">mathjax</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span>\n<span class=\"token key atrule\">summary</span><span class=\"token punctuation\">:</span> 这是你自定义的文章摘要内容，如果这个属性有值，文章卡片摘要就显示这段文字，否则程序会自动截取文章的部分内容作为摘要\n<span class=\"token key atrule\">categories</span><span class=\"token punctuation\">:</span> Markdown\n<span class=\"token key atrule\">tags</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> Typora\n  <span class=\"token punctuation\">-</span> Markdown\n<span class=\"token punctuation\">---</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<h2 id=\"自定制修改\"><a href=\"#自定制修改\" class=\"headerlink\" title=\"自定制修改\"></a>自定制修改</h2><p>在本主题的 <code>_config.yml</code> 中可以修改部分自定义信息，有以下几个部分：</p>\n<ul>\n<li>菜单</li>\n<li>我的梦想</li>\n<li>首页的音乐播放器和视频播放器配置</li>\n<li>是否显示推荐文章名称和按钮配置</li>\n<li><code>favicon</code> 和 <code>Logo</code></li>\n<li>个人信息</li>\n<li>TOC 目录</li>\n<li>文章打赏信息</li>\n<li>复制文章内容时追加版权信息</li>\n<li>MathJax</li>\n<li>文章字数统计、阅读时长</li>\n<li>点击页面的’爱心’效果</li>\n<li>我的项目</li>\n<li>我的技能</li>\n<li>我的相册</li>\n<li><code>Gitalk</code>、<code>Gitment</code>、<code>Valine</code> 和 <code>disqus</code> 评论配置</li>\n<li><a href=\"http://busuanzi.ibruce.info/\">不蒜子统计</a>和谷歌分析（<code>Google Analytics</code>）</li>\n<li>默认特色图的集合。当文章没有设置特色图时，本主题会根据文章标题的 <code>hashcode</code> 值取余，来选择展示对应的特色图</li>\n</ul>\n<p><strong>我认为个人博客应该都有自己的风格和特色</strong>。如果本主题中的诸多功能和主题色彩你不满意，可以在主题中自定义修改，很多更自由的功能和细节点的修改难以在主题的 <code>_config.yml</code> 中完成，需要修改源代码才来完成。以下列出了可能对你有用的地方：</p>\n<h3 id=\"修改主题颜色\"><a href=\"#修改主题颜色\" class=\"headerlink\" title=\"修改主题颜色\"></a>修改主题颜色</h3><p>在主题文件的 <code>/source/css/matery.css</code> 文件中，搜索 <code>.bg-color</code> 来修改背景颜色：</p>\n<pre class=\"line-numbers language-css\" data-language=\"css\"><code class=\"language-css\"><span class=\"token comment\">/* 整体背景颜色，包括导航、移动端的导航、页尾、标签页等的背景颜色. */</span>\n<span class=\"token selector\">.bg-color</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token property\">background-image</span><span class=\"token punctuation\">:</span> <span class=\"token function\">linear-gradient</span><span class=\"token punctuation\">(</span>to right<span class=\"token punctuation\">,</span> #4cbf30 0%<span class=\"token punctuation\">,</span> #0f9d58 100%<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token atrule\"><span class=\"token rule\">@-webkit-keyframes</span> rainbow</span> <span class=\"token punctuation\">&#123;</span>\n   <span class=\"token comment\">/* 动态切换背景颜色. */</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token atrule\"><span class=\"token rule\">@keyframes</span> rainbow</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">/* 动态切换背景颜色. */</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"修改-banner-图和文章特色图\"><a href=\"#修改-banner-图和文章特色图\" class=\"headerlink\" title=\"修改 banner 图和文章特色图\"></a>修改 banner 图和文章特色图</h3><p>你可以直接在 <code>/source/medias/banner</code> 文件夹中更换你喜欢的 <code>banner</code> 图片，主题代码中是每天动态切换一张，只需 <code>7</code> 张即可。如果你会 <code>JavaScript</code> 代码，可以修改成你自己喜欢切换逻辑，如：随机切换等，<code>banner</code> 切换的代码位置在 <code>/layout/_partial/bg-cover-content.ejs</code> 文件的 <code>&lt;script&gt;&lt;/script&gt;</code> 代码中：</p>\n<pre class=\"line-numbers language-ejs\" data-language=\"ejs\"><code class=\"language-ejs\">$('.bg-cover').css('background-image', 'url(/medias/banner/' + new Date().getDay() + '.jpg)');<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>在 <code>/source/medias/featureimages</code> 文件夹中默认有 24 张特色图片，你可以再增加或者减少，并需要在 <code>_config.yml</code> 做同步修改。</p>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"cko6821i70001v2t82699hstj","category_id":"cko6821ih0004v2t8e7kb5yyg","_id":"cko6821iq000bv2t8893qefsf"},{"post_id":"cko6821if0003v2t86gv3fevy","category_id":"cko6821ih0004v2t8e7kb5yyg","_id":"cko6821is000ev2t8anuw35d1"},{"post_id":"cko6821ji000jv2t8e72b7ia4","category_id":"cko6821jk000kv2t85zsodxbc","_id":"cko6821jl000nv2t860wcauei"}],"PostTag":[{"post_id":"cko6821i70001v2t82699hstj","tag_id":"cko6821ij0005v2t80o3zdiu5","_id":"cko6821is000dv2t8324rc8pq"},{"post_id":"cko6821i70001v2t82699hstj","tag_id":"cko6821in000av2t8ecwi77u8","_id":"cko6821is000fv2t8aefjfc3n"},{"post_id":"cko6821if0003v2t86gv3fevy","tag_id":"cko6821iq000cv2t86nd42tlw","_id":"cko6821it000hv2t8bngu3t46"},{"post_id":"cko6821if0003v2t86gv3fevy","tag_id":"cko6821ij0005v2t80o3zdiu5","_id":"cko6821iu000iv2t87pf62710"},{"post_id":"cko6821ji000jv2t8e72b7ia4","tag_id":"cko6821jk000lv2t8b3uy8o01","_id":"cko6821jm000pv2t89n5u9deb"},{"post_id":"cko6821ji000jv2t8e72b7ia4","tag_id":"cko6821jl000mv2t8eez392o9","_id":"cko6821jm000qv2t85z1shdeu"},{"post_id":"cko6821ji000jv2t8e72b7ia4","tag_id":"cko6821jl000ov2t8ayonekv8","_id":"cko6821jm000rv2t87wz1d8cs"}],"Tag":[{"name":"Python","_id":"cko6821ij0005v2t80o3zdiu5"},{"name":"Django","_id":"cko6821in000av2t8ecwi77u8"},{"name":"Scrapy","_id":"cko6821iq000cv2t86nd42tlw"},{"name":"Html","_id":"cko6821jk000lv2t8b3uy8o01"},{"name":"Hexo","_id":"cko6821jl000mv2t8eez392o9"},{"name":"Web","_id":"cko6821jl000ov2t8ayonekv8"}]}}