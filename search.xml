<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>深入认识 Scrapy框架中settings文件</title>
      <link href="2021/04/30/shen-ru-ren-shi-scrapy-zhong-settings-wen-jian/"/>
      <url>2021/04/30/shen-ru-ren-shi-scrapy-zhong-settings-wen-jian/</url>
      
        <content type="html"><![CDATA[<h2 id="深入认识-Scrapy框架中settings文件"><a href="#深入认识-Scrapy框架中settings文件" class="headerlink" title="深入认识 Scrapy框架中settings文件"></a>深入认识 Scrapy框架中settings文件</h2><h3 id="为什么Scrapy项目中会存在settings文件呢，他到底是什么？"><a href="#为什么Scrapy项目中会存在settings文件呢，他到底是什么？" class="headerlink" title="为什么Scrapy项目中会存在settings文件呢，他到底是什么？"></a>为什么Scrapy项目中会存在settings文件呢，他到底是什么？</h3><ul><li>配置文件存放一些公共的变量（比如数据库的地址、账号+密码等），方便自己和别人修改</li><li>一般使用全大写字母命名变量名，例如 <code>LOG_LEVEL=&quot;WARN&quot;</code></li></ul><h2 id="settings文件详细解读"><a href="#settings文件详细解读" class="headerlink" title="settings文件详细解读"></a>settings文件详细解读</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br></pre></td><td class="code"><pre><span class="line">BOT_NAME = <span class="string">&#x27;Sun&#x27;</span>  <span class="comment"># 项目名</span></span><br><span class="line"></span><br><span class="line">SPIDER_MODULES = [<span class="string">&#x27;Sun.spiders&#x27;</span>]  <span class="comment"># 爬虫的位置</span></span><br><span class="line">NEWSPIDER_MODULE = <span class="string">&#x27;Sun.spiders&#x27;</span>  <span class="comment"># 如果我们新建一个爬虫，这个新建爬虫的位置</span></span><br><span class="line"></span><br><span class="line">LOG_LEVEL=<span class="string">&quot;WARN&quot;</span>  <span class="comment"># log日志显示的最低等级，只有等级大于或等于LOG_LEVEL的才会在终端中显示</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Crawl responsibly by identifying yourself (and your website) on the user-agent</span></span><br><span class="line">USER_AGENT = <span class="string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.89 Safari/537.36&quot;</span></span><br><span class="line"><span class="comment"># 浏览器的身份标识，即是&quot;User-Agent&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Obey robots.txt rules</span></span><br><span class="line">ROBOTSTXT_OBEY = <span class="literal">True</span></span><br><span class="line"><span class="comment"># 默认情况下为True，表示遵守这个网站的robots协议</span></span><br><span class="line"><span class="comment"># 如果我们设置</span></span><br><span class="line"><span class="comment"># ROBOTSTXT_OBEY = True  # 不遵守robots协议</span></span><br><span class="line"><span class="comment"># 遵守robots协议的体现：最开始请求url地址的时候会先请求对应的robots.txt，如果我们不遵守robots协议，就不会请求</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Configure maximum concurrent requests performed by Scrapy (default: 16)</span></span><br><span class="line"><span class="comment">#CONCURRENT_REQUESTS = 32  # 设置最大并发请求</span></span><br><span class="line"><span class="comment"># scrapy中封装了一个twisted异步网络框架，在发送网络请求的时候不会说等一个请求请求成功之后再去发送下一个请求，而是同时去发送很多个请求</span></span><br><span class="line"><span class="comment"># 大概有多少个请求可以同时被发送呢？我们可以在这里自定义数量</span></span><br><span class="line"><span class="comment"># 注意：默认是16个，我们可以根据自己的爬虫项目需要自定义CONCURRENT_REQUESTS的数量</span></span><br><span class="line"><span class="comment"># CONCURRENT_REQUESTS的值越大，爬虫爬取的速度越快</span></span><br><span class="line"><span class="comment"># 但是注意，CONCURRENT_REQUESTS的值越大，越有可能被对方的服务器识别为一个爬虫程序</span></span><br><span class="line"><span class="comment"># 所以说，要适当设置CONCURRENT_REQUESTS的数量</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#DOWNLOAD_DELAY = 3  # 下载延迟</span></span><br><span class="line"><span class="comment"># 每次请求之前，休眠3秒</span></span><br><span class="line"><span class="comment"># 可以让我们的爬虫请求速度变慢一些</span></span><br><span class="line"><span class="comment"># The download delay setting will honor only one of:</span></span><br><span class="line"><span class="comment"># 就是说我们的DOWNLOAD_DELAY参数可以配合着下面的CONCURRENT_REQUESTS_PER_DOMAIN参数和CONCURRENT_REQUESTS_PER_IP参数来使用</span></span><br><span class="line"><span class="comment">#CONCURRENT_REQUESTS_PER_DOMAIN = 16  # 每一个域名的最大并发请求数目</span></span><br><span class="line"><span class="comment">#CONCURRENT_REQUESTS_PER_IP = 16  # 每一个IP的最大并发请求数目</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Disable cookies (enabled by default)</span></span><br><span class="line"><span class="comment">#COOKIES_ENABLED = False  # cookie是否开启</span></span><br><span class="line"><span class="comment"># 默认情况下是开启的，也就是说我们请求完一个url地址之后，去请求下一个url地址的时候，scrapy默认是带上前一次请求对方服务器设置在我们本地的cookie信息</span></span><br><span class="line"><span class="comment"># 很重要</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Disable Telnet Console (enabled by default)</span></span><br><span class="line"><span class="comment">#TELNETCONSOLE_ENABLED = False</span></span><br><span class="line"><span class="comment"># 这是我们scrapy框架的一个插件</span></span><br><span class="line"><span class="comment"># 默认是开启的状态</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Override the default request headers:</span></span><br><span class="line"><span class="comment">#DEFAULT_REQUEST_HEADERS = &#123;</span></span><br><span class="line"><span class="comment">#   &#x27;Accept&#x27;: &#x27;text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8&#x27;,</span></span><br><span class="line"><span class="comment">#   &#x27;Accept-Language&#x27;: &#x27;en&#x27;,</span></span><br><span class="line"><span class="comment">#&#125;</span></span><br><span class="line"><span class="comment"># 默认的请求头，默认是关闭的状态</span></span><br><span class="line"><span class="comment"># 开启之后，scrapy就会用这个请求头去发送请求</span></span><br><span class="line"><span class="comment"># 注意：如果我们将&quot;User-Agent&quot;参数放在这里，是没有任何效果的，因为专门有一个参数接收&quot;User-Agent&quot;对应的值</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Enable or disable spider middlewares</span></span><br><span class="line"><span class="comment"># See https://docs.scrapy.org/en/latest/topics/spider-middleware.html</span></span><br><span class="line"><span class="comment"># SPIDER_MIDDLEWARES = &#123;</span></span><br><span class="line"><span class="comment">#    &#x27;Sun.middlewares.SunSpiderMiddleware&#x27;: 543,</span></span><br><span class="line"><span class="comment"># &#125;</span></span><br><span class="line"><span class="comment"># 爬虫中间件</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Enable or disable downloader middlewares</span></span><br><span class="line"><span class="comment"># See https://docs.scrapy.org/en/latest/topics/downloader-middleware.html</span></span><br><span class="line"><span class="comment">#DOWNLOADER_MIDDLEWARES = &#123;</span></span><br><span class="line"><span class="comment">#    &#x27;Sun.middlewares.SunDownloaderMiddleware&#x27;: 543,</span></span><br><span class="line"><span class="comment">#&#125;</span></span><br><span class="line"><span class="comment"># 下载中间件</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Enable or disable extensions</span></span><br><span class="line"><span class="comment"># See https://docs.scrapy.org/en/latest/topics/extensions.html</span></span><br><span class="line"><span class="comment">#EXTENSIONS = &#123;</span></span><br><span class="line"><span class="comment">#    &#x27;scrapy.extensions.telnet.TelnetConsole&#x27;: None,</span></span><br><span class="line"><span class="comment">#&#125;</span></span><br><span class="line"><span class="comment"># 插件</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Configure item pipelines</span></span><br><span class="line"><span class="comment"># See https://docs.scrapy.org/en/latest/topics/item-pipeline.html</span></span><br><span class="line">ITEM_PIPELINES = &#123;</span><br><span class="line">   <span class="string">&#x27;Sun.pipelines.SunPipeline&#x27;</span>: <span class="number">300</span>,</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment"># 管道</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 爬虫中间件、下载中间件、插件、管道的使用方法：</span></span><br><span class="line"><span class="comment"># 类似于ITEM_PIPELINES管道的使用方法</span></span><br><span class="line"><span class="comment"># 开启之后，键--位置，值--和引擎之间的距离（注意：值越大，权重越低；值越小，权重越高）</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Enable and configure the AutoThrottle extension (disabled by default)</span></span><br><span class="line"><span class="comment"># See https://docs.scrapy.org/en/latest/topics/autothrottle.html</span></span><br><span class="line"><span class="comment">#AUTOTHROTTLE_ENABLED = True</span></span><br><span class="line"><span class="comment"># AUTOTHROTTLE--自动限速</span></span><br><span class="line"><span class="comment"># 比如说我们通过scrapy爬取对方的网站，可能会由于我们的scrapy爬虫速度太快导致把对方的网站“抓崩了”</span></span><br><span class="line"><span class="comment"># “抓崩了”并不是我们想要的结果，因为“抓崩了”之后我们就没有办法再在对方的网站上爬取数据了</span></span><br><span class="line"><span class="comment"># 我们可以根据对方网站的情况让我们的scrapy爬虫速度变慢一些</span></span><br><span class="line"><span class="comment"># 通过调节下面的参数我们可以达到这个自动限速的目的</span></span><br><span class="line"><span class="comment"># 但是往往我们是不需要这样操作的</span></span><br><span class="line"><span class="comment"># The initial download delay</span></span><br><span class="line"><span class="comment">#AUTOTHROTTLE_START_DELAY = 5</span></span><br><span class="line"><span class="comment"># The maximum download delay to be set in case of high latencies</span></span><br><span class="line"><span class="comment">#AUTOTHROTTLE_MAX_DELAY = 60</span></span><br><span class="line"><span class="comment"># The average number of requests Scrapy should be sending in parallel to</span></span><br><span class="line"><span class="comment"># each remote server</span></span><br><span class="line"><span class="comment">#AUTOTHROTTLE_TARGET_CONCURRENCY = 1.0</span></span><br><span class="line"><span class="comment"># Enable showing throttling stats for every response received:</span></span><br><span class="line"><span class="comment">#AUTOTHROTTLE_DEBUG = False</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Enable and configure HTTP caching (disabled by default)</span></span><br><span class="line"><span class="comment"># 关于HTTP的缓存，默认是关闭的</span></span><br><span class="line"><span class="comment"># See https://docs.scrapy.org/en/latest/topics/downloader-middleware.html#httpcache-middleware-settings</span></span><br><span class="line"><span class="comment">#HTTPCACHE_ENABLED = True</span></span><br><span class="line"><span class="comment">#HTTPCACHE_EXPIRATION_SECS = 0</span></span><br><span class="line"><span class="comment">#HTTPCACHE_DIR = &#x27;httpcache&#x27;</span></span><br><span class="line"><span class="comment">#HTTPCACHE_IGNORE_HTTP_CODES = []</span></span><br><span class="line"><span class="comment">#HTTPCACHE_STORAGE = &#x27;scrapy.extensions.httpcache.FilesystemCacheStorage&#x27;</span></span><br><span class="line"><span class="comment"># 如果我们想要开启HTTP缓存就可以将其打开</span></span><br><span class="line"><span class="comment"># 它会将我们的HTTP缓存至设置的位置，实现对应的功能</span></span><br><span class="line"><span class="comment"># 不常用</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 每一块内容都是有对应的官方文档的</span></span><br></pre></td></tr></table></figure><h2 id="如何在代码中使用我们在settings-py文件中所做的设置"><a href="#如何在代码中使用我们在settings-py文件中所做的设置" class="headerlink" title="如何在代码中使用我们在settings.py文件中所做的设置"></a><strong>如何在代码中使用我们在settings.py文件中所做的设置</strong></h2><p>现在，我们在<code>settings.py</code>文件中做了一些设置</p><p><a href="https://www.ipicbed.com/image/n4mz"><img src="https://www.ipicbed.com/images/2021/04/30/1.md.png" alt=" "></a></p><p><code>settings.py</code>文件中有一个<code>MONGO_HOST</code>，我们应该如何在spider中使用呢？</p><h3 id="第一种方法：导入"><a href="#第一种方法：导入" class="headerlink" title="第一种方法：导入"></a>第一种方法：导入</h3><p>1.导入</p><p>[<img src="https://www.ipicbed.com/image/n8n8" alt=" (https://www.ipicbed.com/images/2021/04/30/2.md.png)"></p><p>2.现在我们就可以使用我们在<code>settings.py</code>文件中定义的这个<code>MONGO_HOST</code>参数了</p><p>3.如果我们想要在其他文件中使用<code>MONGO_HOST</code>这个参数也是一样方法：导入</p><p>以<code> pipelines.py</code> 为例，</p><p><code>from .settings import MONGO_HOST</code></p><p><a href="https://www.ipicbed.com/image/ntWC"><img src="https://www.ipicbed.com/images/2021/04/30/3.md.png" alt="3.md.png"></a></p><h3 id="第二种方法：属性"><a href="#第二种方法：属性" class="headerlink" title="第二种方法：属性"></a>第二种方法：属性</h3><p>其实我们的spider本身就有一个属性就是settings</p><h4 id="1-如何在爬虫中使用settings属性"><a href="#1-如何在爬虫中使用settings属性" class="headerlink" title="1.如何在爬虫中使用settings属性"></a><strong>1.如何在爬虫中使用settings属性</strong></h4><p><a href="https://www.ipicbed.com/image/nYJE"><img src="https://www.ipicbed.com/images/2021/04/30/4.md.png" alt=" "></a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> scrapy</span><br><span class="line"><span class="keyword">from</span> ..items <span class="keyword">import</span> SunItem</span><br><span class="line"><span class="comment"># from ..settings import MONGO_HOST</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SunSpider</span>(<span class="params">scrapy.Spider</span>):</span></span><br><span class="line">    name = <span class="string">&#x27;sun&#x27;</span></span><br><span class="line">    allowed_domains = [<span class="string">&#x27;sun0769.com&#x27;</span>]</span><br><span class="line">    start_urls = [<span class="string">&#x27;http://wz.sun0769.com/political/index/politicsNewest?id=1&amp;page=1&#x27;</span>]</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">parse</span>(<span class="params">self, response</span>):</span></span><br><span class="line">        <span class="comment"># # spider本身就有一个属性叫做settings</span></span><br><span class="line">        <span class="comment"># self.settings[&quot;MONGO_HOST&quot;]  # self.settings是一个字典</span></span><br><span class="line">        <span class="comment"># self.settings.get(&quot;MONGO_HOST&quot;,&quot;指定的MONGO_HOST的值&quot;)</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        由于self.settings是一个字典。所以我们可以对其使用</span></span><br><span class="line"><span class="string">        self.settings.get(&quot;MONGO_HOST&quot;)  # 如果MONGO_HOST不存在，返回的就是一个None值</span></span><br><span class="line"><span class="string">        # 或者是返回我们在get方法中给MONGO_HOST手动指定的值</span></span><br><span class="line"><span class="string">        self.settings.get(&quot;MONGO_HOST&quot;,&quot;指定的MONGO_HOST的值&quot;)</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment"># 分组</span></span><br><span class="line">        li_list=response.xpath(<span class="string">&#x27;//div[@class=&quot;width-12&quot;]/ul[@class=&quot;title-state-ul&quot;]//li[@class=&quot;clear&quot;]&#x27;</span>)</span><br><span class="line">        <span class="keyword">for</span> li <span class="keyword">in</span> li_list:</span><br><span class="line">            item=SunItem()</span><br><span class="line">            item[<span class="string">&quot;num&quot;</span>]=li.xpath(<span class="string">&#x27;.//span[@class=&quot;state1&quot;]/text()&#x27;</span>).extract_first()</span><br><span class="line">            item[<span class="string">&quot;title&quot;</span>]=li.xpath(<span class="string">&#x27;.//span[@class=&quot;state3&quot;]/a[1]/text()&#x27;</span>).extract_first()</span><br><span class="line">            item[<span class="string">&quot;response_time&quot;</span>]=li.xpath(<span class="string">&#x27;.//span[@class=&quot;state4&quot;]/text()&#x27;</span>).extract_first().strip()</span><br><span class="line">            item[<span class="string">&quot;response_time&quot;</span>]=item[<span class="string">&quot;response_time&quot;</span>].split(<span class="string">&quot;：&quot;</span>)[-<span class="number">1</span>]</span><br><span class="line">            item[<span class="string">&quot;ask_time&quot;</span>]=li.xpath(<span class="string">&#x27;.//span[@class=&quot;state5 &quot;]/text()&#x27;</span>).extract_first()</span><br><span class="line">            item[<span class="string">&quot;detail_url&quot;</span>]=<span class="string">&quot;http://wz.sun0769.com&quot;</span>+li.xpath(<span class="string">&#x27;.//span[@class=&quot;state3&quot;]/a[1]/@href&#x27;</span>).extract_first()</span><br><span class="line"></span><br><span class="line">            <span class="keyword">yield</span> scrapy.Request(item[<span class="string">&quot;detail_url&quot;</span>],</span><br><span class="line">                                 callback=self.parse_detail_url,</span><br><span class="line">                                 meta=&#123;<span class="string">&quot;item&quot;</span>:item&#125;  <span class="comment"># 通过meta传递数据</span></span><br><span class="line">                                 )</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 实现翻页操作</span></span><br><span class="line">        <span class="keyword">for</span> page <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">2</span>, <span class="number">4</span>):</span><br><span class="line">            next_url = <span class="string">f&quot;http://wz.sun0769.com/political/index/politicsNewest?id=1&amp;page=<span class="subst">&#123;page&#125;</span>&quot;</span></span><br><span class="line">            <span class="keyword">yield</span> scrapy.Request(next_url,</span><br><span class="line">                                 callback=self.parse</span><br><span class="line">                                 )</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">parse_detail_url</span>(<span class="params">self,response</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;处理详情页的数据&quot;&quot;&quot;</span></span><br><span class="line">        item=response.meta[<span class="string">&quot;item&quot;</span>]  <span class="comment"># 取出数据</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># 注意：这样获得的内容是混杂的，包含了很多的占位符等垃圾符号</span></span><br><span class="line">        item[<span class="string">&quot;content&quot;</span>]=response.xpath(<span class="string">&#x27;//div[@class=&quot;details-box&quot;]/pre/text()&#x27;</span>).extract_first()</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 注意：图片和视频可能不止一个，也可能没有</span></span><br><span class="line">        item[<span class="string">&quot;img&quot;</span>]=response.xpath(<span class="string">&#x27;//div[@class=&quot;clear details-img-list Picture-img&quot;]/img/@src&#x27;</span>).extract()</span><br><span class="line">        item[<span class="string">&quot;video&quot;</span>]=response.xpath(<span class="string">&#x27;//div[@class=&quot;vcp-player&quot;]/video/@src&#x27;</span>).extract()</span><br><span class="line"></span><br><span class="line">        <span class="keyword">yield</span> item</span><br></pre></td></tr></table></figure><h4 id="2-如何在其他文件中使用settings属性"><a href="#2-如何在其他文件中使用settings属性" class="headerlink" title="2.如何在其他文件中使用settings属性"></a><strong>2.如何在其他文件中使用settings属性</strong></h4><blockquote><p><em>以pipelines.py为例</em></p><p><a href="https://www.ipicbed.com/image/nf3N"><img src="https://www.ipicbed.com/images/2021/04/30/5.md.png" alt=" "></a></p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Define your item pipelines here</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Don&#x27;t forget to add your pipeline to the ITEM_PIPELINES setting</span></span><br><span class="line"><span class="comment"># See: https://docs.scrapy.org/en/latest/topics/item-pipeline.html</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> logging</span><br><span class="line"><span class="comment"># from .settings import MONGO_HOST</span></span><br><span class="line"></span><br><span class="line">logger=logging.getLogger(__name__)</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SunPipeline</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">process_item</span>(<span class="params">self, item, spider</span>):</span></span><br><span class="line">        <span class="comment"># spider.settings</span></span><br><span class="line">        <span class="comment"># spider.settings就是self.settings</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        spider.settings[&quot;MONGO_HOST&quot;]</span></span><br><span class="line"><span class="string">        spider.settings.get(&quot;MONGO_HOST&quot;,&quot;指定的MONGO_HOST的值&quot;)</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">        item[<span class="string">&quot;content&quot;</span>]=self.process_content(item[<span class="string">&quot;content&quot;</span>])</span><br><span class="line">        <span class="comment"># logger.warning(item)</span></span><br><span class="line">        <span class="keyword">return</span> item</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">process_content</span>(<span class="params">self,content</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;处理item中的字符串&quot;&quot;&quot;</span></span><br><span class="line">        new_content=content.replace(<span class="string">&quot;\r\n&quot;</span>,<span class="string">&quot;&quot;</span>).replace(<span class="string">&quot;\xa0&quot;</span>,<span class="string">&quot;&quot;</span>)</span><br><span class="line">        <span class="keyword">return</span> new_content</span><br></pre></td></tr></table></figure><p><strong>scrapy深入之pipeline的使用</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">JsonWriterPipeline</span>(<span class="params"><span class="built_in">object</span></span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">open</span>(<span class="params">self,spider</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;在爬虫开启的时候执行，仅执行一次&quot;&quot;&quot;</span></span><br><span class="line">        self.file=<span class="built_in">open</span>(spider.setting.get(<span class="string">&quot;SAVE_FILE&quot;</span>,<span class="string">&quot;./temp.json&quot;</span>),<span class="string">&quot;w&quot;</span>)</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">close</span>(<span class="params">self,spider</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;在爬虫关闭的时候执行，仅执行一次&quot;&quot;&quot;</span></span><br><span class="line">        self.file.close()</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">process_item</span>(<span class="params">self,item,spider</span>):</span></span><br><span class="line">        line=json.dumps(<span class="built_in">dict</span>(item))+<span class="string">&quot;\n&quot;</span>  <span class="comment"># 将字典转化为json字符串</span></span><br><span class="line">        self.file.write(line)</span><br><span class="line">        <span class="keyword">return</span> item  <span class="comment"># 如果不return的情况下，另一个权重较低的pipeline就不会获取到该item</span></span><br></pre></td></tr></table></figure><ul><li><code>open_spider</code>在爬虫开启的时候执行一次</li><li><code>close_spider</code>在爬虫关闭的时候执行一次</li></ul><p><strong>好处1：数据库的处理：</strong></p><ul><li>建立连接的过程就可以放在<code>open_spider</code>中</li><li>断开连接的过程就放在<code>close_spider</code>中</li></ul><p><strong>好处2：在爬虫开始时为爬虫添加一些属性</strong></p><ol><li><p>在爬虫开始的时候为爬虫添加了一个新的属性<code>hello</code>，值为<code>&quot;world&quot;</code></p><p>位置：<code>pipelines.SunPipeline</code></p></li></ol><p><a href="https://www.ipicbed.com/image/nQfu"><img src="https://www.ipicbed.com/images/2021/04/30/6.md.png" alt=" "></a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">open_spider</span>(<span class="params">self,spider</span>):</span></span><br><span class="line">        spider.hello=<span class="string">&quot;world&quot;</span>  <span class="comment"># 为spider创建一个新的属性叫做&quot;hello&quot;，值为&quot;world&quot;</span></span><br></pre></td></tr></table></figure><ol><li>在爬虫中调用这个属性</li></ol><p><a href="https://www.ipicbed.com/image/npoT"><img src="https://www.ipicbed.com/images/2021/04/30/7.md.png" alt=" "></a></p><p>注意：现在我们至是想要看见<code>scrapy</code>在爬虫启动的时候是否执行了open_spider这个方法，不需要爬取网站的信息，所以我们修改爬取的范围，即是 <code>allowed_domains</code></p><ol start="2"><li>启动我们的爬虫程序</li></ol><p><code>scrapy crawl sun</code></p><p><a href="https://www.ipicbed.com/image/nq1b"><img src="https://www.ipicbed.com/images/2021/04/30/8.md.png" alt=" "></a></p><p>发现确实是输出了<code>hello</code>属性对应的值，说明我们的爬虫在开始的时候的确是调用了open_spider这个函数</p><h2 id="pipeline中对数据库的处理"><a href="#pipeline中对数据库的处理" class="headerlink" title="pipeline中对数据库的处理"></a><strong>pipeline中对数据库的处理</strong></h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 对数据库进行处理</span></span><br><span class="line"><span class="keyword">from</span> pymongo <span class="keyword">import</span> MongoClient</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SunPipeline</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">open_spider</span>(<span class="params">self,spider</span>):</span></span><br><span class="line">        client=MongoClient()  <span class="comment"># 实例化一下client</span></span><br><span class="line">        self.collection=client[<span class="string">&quot;test&quot;</span>][<span class="string">&quot;test&quot;</span>]</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">process_item</span>(<span class="params">self, item, spider</span>):</span></span><br><span class="line">        <span class="comment"># 调用self.collection，直接insert</span></span><br><span class="line">        self.collection.insert(<span class="built_in">dict</span>(item))</span><br></pre></td></tr></table></figure><p><strong>当我们需要把文件写在本地的时候</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">JsonWriterPipeline</span>(<span class="params"><span class="built_in">object</span></span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">open</span>(<span class="params">self,spider</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;在爬虫开启的时候执行，仅执行一次&quot;&quot;&quot;</span></span><br><span class="line">        self.file=<span class="built_in">open</span>(spider.setting.get(<span class="string">&quot;SAVE_FILE&quot;</span>,<span class="string">&quot;./temp.json&quot;</span>),<span class="string">&quot;w&quot;</span>)</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">close</span>(<span class="params">self,spider</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;在爬虫关闭的时候执行，仅执行一次&quot;&quot;&quot;</span></span><br><span class="line">        self.file.close()</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">process_item</span>(<span class="params">self,item,spider</span>):</span></span><br><span class="line">        line=json.dumps(<span class="built_in">dict</span>(item))+<span class="string">&quot;\n&quot;</span>  <span class="comment"># 将字典转化为json字符串</span></span><br><span class="line">        self.file.write(line)</span><br><span class="line">        <span class="keyword">return</span> item  <span class="comment"># 如果不return的情况下，另一个权重较低的pipeline就不会获取到该item</span></span><br></pre></td></tr></table></figure><p><strong>思路：</strong></p><ul><li>在<code>open_spider</code>中打开一次</li><li>在<code>close_spider</code>中关闭一次</li><li>中间不停地往文件中写入数据</li></ul><p>这种方式是可以的，但是会有问题</p><p><strong>问题：</strong></p><p>如果我们的爬虫在爬取网站的时候爬取到第3页的时候程序突然报错了，然后爬虫终止执行，这时候，前2页的数据能够保存在我们的文件中吗？</p><p><strong>不会</strong></p><p><strong>为什么？</strong></p><p>因为我们的文件打开之后写入数据只有在close之后数据才会写进去，如果我们不close的话，数据是不会写入的。</p>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Scrapy </tag>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
